### YamlMime:QSharpType
uid: microsoft.quantum.canon.assertoperationsequalreferenced
name: AssertOperationsEqualReferenced
type: operation
namespace: Microsoft.Quantum.Canon
summary: " Given two operations, asserts that they act identically for all input states.\n This assertion is implemented by using the Choi–Jamiłkowski isomorphism to reduce\n the assertion to one of a qubit state assertion on two entangled registers.\n Thus, this operation needs only a single call to each operation being tested,\n but requires twice as many qubits to be allocated.\n This assertion can be used to ensure, for instance, that an optimized version of an\n operation acts identically to its naïve implementation, or that an operation\n which acts on a range of non-quantum inputs agrees with known cases.\n "
remarks: >2
   This operation requires that the operation modeling the expected behavior is
   adjointable, so that the inverse can be performed on the target register alone.
   Formally, one can specify a transpose operation, which relaxes this requirement,
   but the transpose operation is not in general physically realizable for arbitrary
   quantum operations and thus is not included here as an option.
syntax: 'operation AssertOperationsEqualReferenced (actual : (Qubit[] => ()), expected : (Qubit[] => () : Adjoint), nQubits : Int) : ()'
input:
  content: '(actual : (Qubit[] => ()), expected : (Qubit[] => () : Adjoint), nQubits : Int)'
  types:
  - name: actual
    isOperation: true
    types:
    - content: Qubit
      isPrimitive: true
      isArray: true
    - content: ()
      isPrimitive: true
  - name: expected
    isOperation: true
    types:
    - content: Qubit
      isPrimitive: true
      isArray: true
    - content: ()
      isPrimitive: true
  - name: nQubits
    content: Int
    isPrimitive: true
output:
  content: ()
  types:
  - content: ()
    isPrimitive: true
