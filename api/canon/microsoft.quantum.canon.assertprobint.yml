### YamlMime:QSharpType
uid: microsoft.quantum.canon.assertprobint
name: AssertProbInt
type: operation
namespace: Microsoft.Quantum.Canon
summary: " Given an $n$-qubit quantum state $\\ket{\\psi}=\\sum^{2^n-1}_{j=0}\\alpha_j \\ket{j}$, \n asserts that the probability $|\\alpha_j|^2$ of the state $\\ket{j}$ indexed by $j$ \n has the expected value.\n"
remarks: "\n### Examples\n Suppose that the `qubits` register encodes a 3-qubit quantum state \n $\\ket{\\psi}=\\sqrt{1/8}\\ket{0}+\\sqrt{7/8}\\ket{6}$ in little-endian format.\n This means that the number states $\\ket{0}\\equiv\\ket{0}\\ket{0}\\ket{0}$\n and $\\ket{6}\\equiv\\ket{0}\\ket{1}\\ket{1}$. Then the following asserts succeed:\n - `AssertProbInt(0,0.125,qubits,10e-10);`\n - `AssertProbInt(6,0.875,qubits,10e-10);`"
syntax: 'operation AssertProbInt (stateIndex : Int, expected : Double, qubits : LittleEndian, tolerance : Double) : ()'
input:
  content: '(stateIndex : Int, expected : Double, qubits : LittleEndian, tolerance : Double)'
  types:
  - name: stateIndex
    summary: " The index $j$ of the state $\\ket{j}$ represented by a `LittleEndian` \n register.\n"
    uid: Int
    isPrimitive: true
  - name: expected
    summary: >2
       The expected value of $|\alpha_j|^2$.
    uid: Double
    isPrimitive: true
  - name: qubits
    summary: >2
       The qubit register that stores $\ket{\psi}$ in little-endian format.
    uid: microsoft.quantum.canon.littleendian
  - name: tolerance
    summary: >2
       Absolute tolerance on the difference between actual and expected.
    uid: Double
    isPrimitive: true
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
