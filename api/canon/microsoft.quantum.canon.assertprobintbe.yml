### YamlMime:QSharpType
uid: microsoft.quantum.canon.assertprobintbe
name: AssertProbIntBE
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Asserts that the probability of a specific state of a quantum register has the
  expected value.

  Given an $n$-qubit quantum state $\ket{\psi}=\sum^{2^n-1}_{j=0}\alpha_j \ket{j}$,
  asserts that the probability $|\alpha_j|^2$ of the state $\ket{j}$ indexed by $j$
  has the expected value.
examples: |-
  Suppose that the `qubits` register encodes a 3-qubit quantum state
  $\ket{\psi}=\sqrt{1/8}\ket{0}+\sqrt{7/8}\ket{6}$ in big-endian format.
  This means that the number states $\ket{0}\equiv\ket{0}\ket{0}\ket{0}$
  and $\ket{6}\equiv\ket{1}\ket{1}\ket{0}$. Then the following asserts succeed:

  - `AssertProbIntBE(0,0.125,qubits,10e-10);`
  - `AssertProbIntBE(6,0.875,qubits,10e-10);`
syntax: 'operation AssertProbIntBE (stateIndex : Int, prob : Double, qubits : Microsoft.Quantum.Canon.BigEndian, tolerance : Double) : Unit'
input:
  content: '(stateIndex : Int, prob : Double, qubits : Microsoft.Quantum.Canon.BigEndian, tolerance : Double)'
  types:
  - name: stateIndex
    summary: |-
      The index $j$ of the state $\ket{j}$ represented by a `BigEndian`
      register.
    isPrimitive: true
    uid: Int
  - name: prob
    isPrimitive: true
    uid: Double
  - name: qubits
    summary: The qubit register that stores $\ket{\psi}$ in big-endian format.
    uid: microsoft.quantum.canon.bigendian
  - name: tolerance
    summary: Absolute tolerance on the difference between actual and expected.
    isPrimitive: true
    uid: Double
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
...
