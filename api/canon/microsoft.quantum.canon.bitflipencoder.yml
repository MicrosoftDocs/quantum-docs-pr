### YamlMime:QSharpType
uid: microsoft.quantum.canon.bitflipencoder
name: BitFlipEncoder
type: operation
namespace: Microsoft.Quantum.Canon
summary: Encodes into the [3, 1, 3] / ⟦3, 1, 1⟧ bit-flip code.
syntax: 'operation BitFlipEncoder (physRegister : Qubit[], auxQubits : Qubit[]) : Microsoft.Quantum.Canon.LogicalRegister'
input:
  content: '(physRegister : Qubit[], auxQubits : Qubit[])'
  types:
  - name: physRegister
    summary: A register of physical qubits representing the data to be protected.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: auxQubits
    summary: |-
      A register of auxiliary qubits initially in the $\ket{00}$ state to be
      used in encoding the data to be protected.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Microsoft.Quantum.Canon.LogicalRegister
  types:
  - summary: |-
      The physical and auxiliary qubits used in encoding, represented as a
      logical register.
    uid: microsoft.quantum.canon.logicalregister
seeAlso:
- microsoft.quantum.canon.logicalregister
...
