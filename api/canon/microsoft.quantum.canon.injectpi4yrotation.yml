### YamlMime:QSharpType
uid: microsoft.quantum.canon.injectpi4yrotation
name: InjectPi4YRotation
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Performs a $\pi / 4$ rotation about $Y$ by consuming a magic
   state; that is, a copy of the state
   $$
   \begin{align}
       \cos\frac{\pi}{8} \ket{0} + \sin \frac{\pi}{8} \ket{1}.
   \end{align}
   $$.
remarks: >2-
   The following are equivalent:
   ```Q#
   Ry(PI() / 4.0, data);

   using (magicRegister = Qubit[1]) {
       let magic = magicRegister[0];
       Ry(PI() / 4.0, magic);
       InjectPi4YRotation(data, magic);
       Reset(magic);
   }
   ```

   This operation supports the `Adjoint` functor, in which
   case the same magic state is consumed, but the effect
   on the data qubit is a $-\pi/4$ $Y$-rotation.
syntax: 'operation InjectPi4YRotation (data : Qubit, magic : Qubit) : ()'
input:
  content: '(data : Qubit, magic : Qubit)'
  types:
  - name: data
    content: Qubit
    isPrimitive: true
  - name: magic
    content: Qubit
    isPrimitive: true
output:
  content: ()
  types:
  - content: ()
    isPrimitive: true
functors:
- Adjoint
