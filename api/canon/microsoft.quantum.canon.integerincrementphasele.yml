### YamlMime:QSharpType
uid: microsoft.quantum.canon.integerincrementphasele
name: IntegerIncrementPhaseLE
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Unsigned integer increment by an integer constant, based on phase rotations.

  Suppose `target` encodes unsigned integer x in little-endian encoding and
  `increment` is equal to a.
  The operation implements the unitary |x⟩ ↦ |x + a ⟩,
  where the addition is performed
  modulo 2ⁿ, for n = `Length(target)`.
remarks: |-
  Note that we have simplified the circuit because the increment is a classical constant,
  not a quantum register.

  See the figure on
  [ Page 6 of arXiv:quant-ph/0008033v1 ](https://arxiv.org/pdf/quant-ph/0008033.pdf#page=6)
  for the circuit diagram and explanation.
syntax: 'operation IntegerIncrementPhaseLE (increment : Int, target : Microsoft.Quantum.Canon.PhaseLittleEndian) : Unit'
references: |-
  - [ *Thomas G. Draper*,
    arXiv:quant-ph/0008033](https://arxiv.org/pdf/quant-ph/0008033v1.pdf)
input:
  content: '(increment : Int, target : Microsoft.Quantum.Canon.PhaseLittleEndian)'
  types:
  - name: increment
    summary: The integer by which the `target` is incremented by.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Quantum register encoding an integer using little-endian encoding in QFT basis.
    uid: microsoft.quantum.canon.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.integerincrementle
...
