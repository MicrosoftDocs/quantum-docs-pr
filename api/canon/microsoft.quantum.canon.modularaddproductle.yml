### YamlMime:QSharpType
uid: microsoft.quantum.canon.modularaddproductle
name: ModularAddProductLE
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Implements the map
   $$
   \begin{align}
       \ket{x} \ket{b} \mapsto \ket{x} \ket{b + a \cdot x \operatorname{mod} N}
   \end{align}
   $$
   for a given modulus $N$, constant multiplier $a$, and summand $y$.
remarks: >2-
   - For the circuit diagram and explanation see Figure 6 on [Page 7
          of arXiv:quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=7)
   - This operation corresponds to CMULT(a)MOD(N) in
     [arXiv:quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf)
syntax: 'operation ModularAddProductLE (constMultiplier : Int, modulus : Int, multiplier : LittleEndian, summand : LittleEndian) : ()'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : LittleEndian, summand : LittleEndian)'
  types:
  - name: constMultiplier
    uid: Int
    isPrimitive: true
  - name: modulus
    summary: ' The modulus $N$ which addition and multiplication is taken with respect to.'
    uid: Int
    isPrimitive: true
  - name: multiplier
    summary: >2-
       A quantum register representing an unsigned integer whose value is to
       be added to each basis state label of `summand`.
    uid: microsoft.quantum.canon.littleendian
  - name: summand
    summary: >2
       A quantum register representing an unsigned integer to use as the target
       for this operation.
    uid: microsoft.quantum.canon.littleendian
output:
  content: ()
  types:
  - uid: ()
    isPrimitive: true
functors:
- Adjoint
- Controlled
