### YamlMime:QSharpType
uid: microsoft.quantum.canon.modularaddproductphasele
name: ModularAddProductPhaseLE
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  The same as ModularAddProductLE, but assumes that summand encodes
  integers in QFT basis
remarks: |-
  Assumes that `phaseSummand` has the highest bit set to 0.
  Also assumes that the value of `phaseSummand` is less than N.
syntax: 'operation ModularAddProductPhaseLE (constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Canon.LittleEndian, phaseSummand : Microsoft.Quantum.Canon.PhaseLittleEndian) : Unit'
input:
  content: '(constMultiplier : Int, modulus : Int, multiplier : Microsoft.Quantum.Canon.LittleEndian, phaseSummand : Microsoft.Quantum.Canon.PhaseLittleEndian)'
  types:
  - name: constMultiplier
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
  - name: multiplier
    uid: microsoft.quantum.canon.littleendian
  - name: phaseSummand
    uid: microsoft.quantum.canon.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.modularaddproductle
...
