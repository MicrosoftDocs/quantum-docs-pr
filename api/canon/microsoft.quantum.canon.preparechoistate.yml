### YamlMime:QSharpType
uid: microsoft.quantum.canon.preparechoistate
name: PrepareChoiState
type: operation
namespace: Microsoft.Quantum.Canon
summary: >2
   Prepares the Choi–Jamiłkowski state for a given operation onto given reference
   and target registers.
remarks: >2
   The Choi–Jamiłkowski state $J(\Lambda)$ of a quantum process is
   defined as
   $$
   \begin{align}
       J(\Lambda) \mathrel{:=} (\boldone \otimes \Lambda)
       (|\boldone\rangle\!\rangle\langle\!\langle\boldone|),
   \end{align}
   $$
   where $|X\rangle\!\rangle$ is the *vectorization* of a matrix $X$
   in the column-stacking convention. Learning a classical description
   of this state provides full information about the effect of $\Lambda$
   acting on arbitrary input states, and forms the foundation of
   *quantum process tomography*.
syntax: 'operation PrepareChoiState (op : (Qubit[] => ()), reference : Qubit[], target : Qubit[]) : ()'
seealso: >2-
   - @"microsoft.quantum.canon.preparechoistatec"
   - @"microsoft.quantum.canon.preparechoistatea"
   - @"microsoft.quantum.canon.preparechoistateca"
input:
  content: '(op : (Qubit[] => ()), reference : Qubit[], target : Qubit[])'
  types:
  - name: op
    isOperation: true
    types:
    - content: Qubit
      isPrimitive: true
      isArray: true
    - content: ()
      isPrimitive: true
  - name: reference
    content: Qubit
    isPrimitive: true
    isArray: true
  - name: target
    content: Qubit
    isPrimitive: true
    isArray: true
output:
  content: ()
  types:
  - content: ()
    isPrimitive: true
