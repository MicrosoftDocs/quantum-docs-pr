### YamlMime:QSharpType
uid: microsoft.quantum.extensions.testing.assertoperationsequalinplacecompbasis
name: AssertOperationsEqualInPlaceCompBasis
type: operation
namespace: Microsoft.Quantum.Extensions.Testing
summary: |-
  Checks if the operation `givenU` is equal to the operation `expectedU` on
  the given input size  by checking the action of the operations only on
  the vectors from the computational basis.
  This is a necessary, but not sufficient, condition for the equality of
  two unitaries.
syntax: 'operation AssertOperationsEqualInPlaceCompBasis (givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit : Adjoint), inputSize : Int) : Unit'
input:
  content: '(givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit : Adjoint), inputSize : Int)'
  types:
  - name: givenU
    summary: Operation on $n$ qubits to be checked.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: expectedU
    summary: Reference operation on $n$ qubits that `givenU` is to be compared against.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: inputSize
    summary: The number of qubits $n$ that the operations `givenU` and `expectedU` operate on.
    isPrimitive: true
    uid: Int
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
...
