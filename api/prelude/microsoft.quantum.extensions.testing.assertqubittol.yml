### YamlMime:QSharpType
uid: microsoft.quantum.extensions.testing.assertqubittol
name: AssertQubitTol
type: operation
namespace: Microsoft.Quantum.Extensions.Testing
summary: |-
  Asserts that the qubit `q` is in the expected eigenstate of the Pauli Z operator up to
  a given tolerance.
remarks: |-
  <xref:microsoft.quantum.extensions.testing.assertqubitstate> allows for asserting
  arbitrary qubit states rather than only $Z$ eigenstates.
syntax: 'operation AssertQubitTol (expected : Result, q : Qubit, tolerance : Double) : Unit'
input:
  content: '(expected : Result, q : Qubit, tolerance : Double)'
  types:
  - name: expected
    summary: 'Which state the qubit is expected to be in: `Zero` or `One`.'
    isPrimitive: true
    uid: Result
  - name: q
    summary: The qubit whose state is asserted.
    isPrimitive: true
    uid: Qubit
  - name: tolerance
    summary: |-
      Tolerance on the probability of a measurement of the qubit returning the expected
      result.
    isPrimitive: true
    uid: Double
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- microsoft.quantum.extensions.testing.assertqubitstate
...
