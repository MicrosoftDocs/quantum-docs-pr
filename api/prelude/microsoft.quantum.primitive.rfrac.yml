### YamlMime:QSharpType
uid: microsoft.quantum.primitive.rfrac
name: RFrac
type: operation
namespace: Microsoft.Quantum.Primitive
summary: |-
  Applies a rotation about the given Pauli axis by an angle specified
  as a dyadic fraction.

  \begin{align}
  R_{\mu}(n, k) \mathrel{:=}
  e^{i \pi n \sigma_{\mu} / 2^k},
  \end{align}
  where $\mu \in \{I, X, Y, Z\}$.

  > [!WARNING]
  > This operation uses the **opposite** sign convention from
  > @"microsoft.quantum.primitive.r".
remarks: |-
  Equivalent to:

  ```qsharp
  // Suppose Pi() is a function that returns an approximation of Ï€.
  R(pauli, -Pi() * Float(numerator) / Float(2 ^ (power - 1)), qubit);
  ```
syntax: 'operation RFrac (pauli : Pauli, numerator : Int, power : Int, qubit : Qubit) : Unit'
input:
  content: '(pauli : Pauli, numerator : Int, power : Int, qubit : Qubit)'
  types:
  - name: pauli
    summary: Pauli operator to be exponentiated to form the rotation.
    isPrimitive: true
    uid: Pauli
  - name: numerator
    summary: |-
      Numerator in the dyadic fraction representation of the angle
      by which the qubit is to be rotated.
    isPrimitive: true
    uid: Int
  - name: power
    summary: |-
      Power of two specifying the denominator of the angle by which
      the qubit is to be rotated.
    isPrimitive: true
    uid: Int
  - name: qubit
    summary: Qubit to which the gate should be applied.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
