### YamlMime:QSharpNamespace
uid: microsoft.quantum.amplitudeamplification
name: Microsoft.Quantum.AmplitudeAmplification
summary: |2-
   # Summary
   This namespace contains functions and operations for performing amplitude
   amplification.

   # Description
   Oblivious amplitude amplification with partial reflections is the most
   general form of amplitude amplification implemented here.

   This is called through the operation AmpAmpObliviousByReflectionPhases.

   This has two registers: `ancillaRegister` and `systemRegister`.

   This accepts two oracles for these reflections of type
   `ReflectionOracle` which act only on the `ancillaRegister`
   register.

   This accepts an oracle special to oblivious amplitude
   amplification of type `ObliviousOracle` which acts jointly
   on both register.

   The input state to `ancillaRegister` is assumed to be the unique
   $-1$ eigenstate of the first reflection operator $I - 2\ket{s}\bra{s}$.

   Reflections about a target quantum state are often implemented by
   assuming access to an oracle that prepare that state from the
   computational basis $\ket{0\cdots 0}$.

   Our convention for these oracles requires two registers: a
   single-qubit `flagQubit` register, and a register for everything
   else on the ancillaRegister register.

   The oracle of type `StateOracle` acts jointly on both registers to
   create the target state flagged by $\ket{1}$ in the `flagQubit`
   register with some real amplitude.

   The reflection `ReflectionOracle` about the this flag state is
   generated by the operation `TargetStateReflectionOracle`.

   The reflection `ReflectionOracle` about the input state to
   `ancillaRegister` is generated by the inverting StateOracle and
   then reflecting about $\ket{0\cdots 0}$ with ReflectionStart().

   The oracle of type `DeterministicStateOracle` acts on the
   `qubitState` registers to create the target state exactly with no
   flag.

   `AmpAmpObliviousByOraclePhases` is a version of oblivious amplitude
   amplification that accepts oracles `StateOracle` and `ObliviousOracle`
   instead of reflections.

   Note that amplitude amplification is a special case of oblivious
   amplitude amplification where `ObliviousOracle` is the identity operator,
   and there are no system qubits i.e. `systemRegister` is empty.

   This is called through the operation `AmpAmByReflectionPhases` and
   `AmpAmpByOraclePhases`.

   The phases for partial reflections in the standard case of Grover
   search is provided by the function AmpAmpPhasesStandard.

   For instance, we have the following dependencies: AmpAmpByOracle ->
   AmpAmpByOraclePhases -> AmpAmpObliviousByOraclePhases ->
   AmpAmpObliviousByReflectionPhases.
functions:
- uid: microsoft.quantum.amplitudeamplification.ampampbyoracle
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpByOracle has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.standardamplitudeamplification" instead.
    Please use @"microsoft.quantum.amplitudeamplification.standardamplitudeamplification".
- uid: microsoft.quantum.amplitudeamplification.ampampbyoraclephases
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpByOraclePhases has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation" instead.
    Please use @"microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation".
- uid: microsoft.quantum.amplitudeamplification.ampampbyreflectionphases
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpByReflectionPhases has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections" instead.
    Please use @"microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections".
- uid: microsoft.quantum.amplitudeamplification.ampampobliviousbyoraclephases
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpObliviousByOraclePhases has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation" instead.
    Please use @"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation".
- uid: microsoft.quantum.amplitudeamplification.ampampobliviousbyreflectionphases
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpObliviousByReflectionPhases has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections" instead.
    Please use @"microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections".
- uid: microsoft.quantum.amplitudeamplification.ampampphasesfixedpoint
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpPhasesFixedPoint has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.fixedpointreflectionphases" instead.
    Please use
    @"microsoft.quantum.amplitudeamplification.fixedpointreflectionphases".
- uid: microsoft.quantum.amplitudeamplification.ampampphasesstandard
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpPhasesStandard has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.standardreflectionphases" instead.
    Please use
    @"microsoft.quantum.amplitudeamplification.standardreflectionphases".
- uid: microsoft.quantum.amplitudeamplification.ampamprotationtoreflectionphases
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpRotationToReflectionPhases has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases" instead.
    Please use
    @"microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases".
- uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfrompartialreflections
  summary: Amplitude amplification by partial reflections.
- uid: microsoft.quantum.amplitudeamplification.amplitudeamplificationfromstatepreparation
  summary: Amplitude amplification by oracles for partial reflections.
- uid: microsoft.quantum.amplitudeamplification.fixedpointreflectionphases
  summary: |-
    Computes partial reflection phases for fixed-point amplitude
    amplification.
- uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfrompartialreflections
  summary: Returns a unitary that implements oblivious amplitude amplification by specifying for partial reflections.
- uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
  summary: Oblivious amplitude amplification by oracles for partial reflections.
- uid: microsoft.quantum.amplitudeamplification.reflectionstart
  summary: Constructs a reflection about the all-zero string |0...0âŒª, which is the typical input state to amplitude amplification.
- uid: microsoft.quantum.amplitudeamplification.rotationphasesasreflectionphases
  summary: |-
    Converts phases specified as single-qubit rotations to phases
    specified as partial reflections.
- uid: microsoft.quantum.amplitudeamplification.standardamplitudeamplification
  summary: Standard Amplitude Amplification algorithm
- uid: microsoft.quantum.amplitudeamplification.standardreflectionphases
  summary: |-
    Computes partial reflection phases for standard amplitude
    amplification.
- uid: microsoft.quantum.amplitudeamplification.targetstatereflectionoracle
  summary: |-
    Constructs a `ReflectionOracle` about the target state uniquely marked by the flag qubit.

    The target state has a single qubit set to 1, and all others 0: $\ket{1}_f$.
operations:
- uid: microsoft.quantum.amplitudeamplification.ampamprusbyoracle
  summary: |2-

    > [!WARNING]
    > Deprecated

    AmpAmpRUSByOracle has been deprecated. Please use @"microsoft.quantum.amplitudeamplification.applyfixedpointamplification" instead.
    Please use @"microsoft.quantum.amplitudeamplification.applyfixedpointamplification".
- uid: microsoft.quantum.amplitudeamplification.applyamplitudeamplification
  summary: |-
    Applies amplitude amplification on a given register, using a given set
    of phases and oracles to reflect about the initial and final states.
- uid: microsoft.quantum.amplitudeamplification.applyfixedpointamplification
  summary: Fixed-Point Amplitude Amplification algorithm
- uid: microsoft.quantum.amplitudeamplification.applyobliviousamplitudeamplification
  summary: Oblivious amplitude amplification by specifying partial reflections.
newtypes:
- uid: microsoft.quantum.amplitudeamplification.reflectionphases
  summary: Phases for a sequence of partial reflections in amplitude amplification.
- uid: microsoft.quantum.amplitudeamplification.rotationphases
  summary: Phases for a sequence of single-qubit rotations in amplitude amplification.
...
