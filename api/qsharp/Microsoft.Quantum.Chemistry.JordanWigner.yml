### YamlMime:QSharpNamespace
uid: microsoft.quantum.chemistry.jordanwigner
name: Microsoft.Quantum.Chemistry.JordanWigner
functions:
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerblockencodinggeneratorsystem
  summary: |-
    Converts a Hamiltonian described by `JWOptimizedHTerms`
    to a `GeneratorSystem` expressed in terms of the Pauli
    `GeneratorIndex`.
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerfermionevolutionset
  summary: |-
    Represents a dynamical generator as a set of simulatable gates and an
    expansion in the JordanWigner basis.
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerfermionfunction
  summary: |-
    Represents a dynamical generator as a set of simulatable gates and an
    expansion in the JordanWigner basis.
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignergeneratorsystem
  summary: |-
    Converts a Hamiltonian described by `JWOptimizedHTerms`
    to a `GeneratorSystem` expressed in terms of the
    `GeneratorIndex` convention defined in this file.
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedblockencodinggeneratorsystem
  summary: |-
    Converts a Hamiltonian described by `JWOptimizedHTerms`
    to a `GeneratorSystem` expressed in terms of the Pauli
    `GeneratorIndex`.
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedqubitizationoracle
  summary: |-
    Returns T-count optimized Qubitization operation
    and the parameters necessary to run it.
- uid: microsoft.quantum.chemistry.jordanwigner.qubitizationoracle
  summary: Returns Qubitization operation and the parameters necessary to run it.
- uid: microsoft.quantum.chemistry.jordanwigner.trottersteporacle
  summary: Returns Trotter step operation and the parameters necessary to run it.
operations:
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbexy
  summary: |-
    A unitary $U$ that applies the Pauli string on $(X^{z+1}\_pY^{z}\_p)Z\_{p-1}...Z_0$ on qubits $0..p$ conditioned
    on an index $z\in\{0,1\}$ and $p$. That is,
    $$
    \begin{align}
    U\ket{z}\ket{p}\ket{\psi} = \ket{z}\ket{p}(X^{z+1}\_pY^{z}\_p)Z\_{p-1}...Z_0\ket{\psi}
    \end{align}
    $$
- uid: microsoft.quantum.chemistry.jordanwigner.preparetrialstate
  summary: ''
- uid: microsoft.quantum.chemistry.jordanwigner.preparetrialstatecoupledcluster
  summary: |-
    Coupled-cluster state preparation of trial state by adding excitations
    to initial trial state.
- uid: microsoft.quantum.chemistry.jordanwigner.preparetrialstatesinglesiteoccupation
  summary: |-
    Simple state preparation of trial state by occupying
    spin-orbitals
- uid: microsoft.quantum.chemistry.jordanwigner.selectz
  summary: |-
    A unitary $U$ that applies the Pauli $Z$ gate on a qubits $p$ conditioned
    on an index state $\ket{p}$. That is,
    $$
    \begin{align}
    U\ket{p}\ket{\psi} = \ket{p}Z\_p\ket{\psi}
    \end{align}
    $$
newtypes:
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerencodingdata
  summary: |-
    Format of data passed from C# to Q# to represent all information for Hamiltonian simulation.
    The meaning of the data represented is determined by the algorithm that receives it.
- uid: microsoft.quantum.chemistry.jordanwigner.jordanwignerinputstate
  summary: |-
    Format of data passed from C# to Q# to represent preparation of the initial state
    The meaning of the data represented is determined by the algorithm that receives it.
- uid: microsoft.quantum.chemistry.jordanwigner.jwoptimizedhterms
  summary: |-
    Format of data passed from C# to Q# to represent terms of the Hamiltonian.
    The meaning of the data represented is determined by the algorithm that receives it.
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbegeneratorsystem
  summary: |-
    Function that returns `OptimizedBETermIndex` data for term `n` given an
    integer `n`, together with the number of terms in the first `Int` and
    the sum of absolute-values of all term coefficients in the `Double`.
- uid: microsoft.quantum.chemistry.jordanwigner.optimizedbetermindex
  summary: Term data in the optimized block-encoding algorithm.
...
