### YamlMime:QSharpNamespace
uid: microsoft.quantum.math
name: Microsoft.Quantum.Math
functions:
- uid: microsoft.quantum.math.abscomplex
  summary: |-
    Returns the absolute value of a complex number of type
    `Complex`.
- uid: microsoft.quantum.math.abscomplexpolar
  summary: |-
    Returns the absolute value of a complex number of type
    `ComplexPolar`.
- uid: microsoft.quantum.math.absd
  summary: Returns the absolute value of a double-precision floating-point number.
- uid: microsoft.quantum.math.absi
  summary: Returns the absolute value of an integer.
- uid: microsoft.quantum.math.absl
  summary: Returns the absolute value of a big integer.
- uid: microsoft.quantum.math.abssquaredcomplex
  summary: |-
    Returns the squared absolute value of a complex number of type
    `Complex`.
- uid: microsoft.quantum.math.abssquaredcomplexpolar
  summary: |-
    Returns the squared absolute value of a complex number of type
    `ComplexPolar`.
- uid: microsoft.quantum.math.arccos
  summary: Returns the angle whose cosine is the specified number.
- uid: microsoft.quantum.math.arccosh
  summary: Computes the inverse hyperbolic cosine of a number.
- uid: microsoft.quantum.math.arcsin
  summary: Returns the angle whose sine is the specified number.
- uid: microsoft.quantum.math.arcsinh
  summary: Computes the inverse hyperbolic sine of a number.
- uid: microsoft.quantum.math.arctan
  summary: Returns the angle whose tangent is the specified number.
- uid: microsoft.quantum.math.arctan2
  summary: Returns the angle whose tangent is the quotient of two specified numbers.
- uid: microsoft.quantum.math.arctanh
  summary: Computes the inverse hyperbolic tangent of a number.
- uid: microsoft.quantum.math.argcomplex
  summary: |-
    Returns the phase of a complex number of type
    `Complex`.
- uid: microsoft.quantum.math.argcomplexpolar
  summary: |-
    Returns the phase of a complex number of type
    `ComplexPolar`.
- uid: microsoft.quantum.math.bitsizei
  summary: |-
    For a non-negative integer `a`, returns the number of bits required to represent `a`.

    That is, returns the smallest $n$ such
    that $a < 2^n$.
- uid: microsoft.quantum.math.bitsizel
  summary: |-
    For a non-negative integer `a`, returns the number of bits required to represent `a`.

    That is, returns the smallest $n$ such
    that $a < 2^n$.
- uid: microsoft.quantum.math.ceiling
  summary: Returns the smallest integer greater than or equal to the specified number.
- uid: microsoft.quantum.math.complexascomplexpolar
  summary: |-
    Converts a complex number of type `Complex` to a complex
    number of type `ComplexPolar`.
- uid: microsoft.quantum.math.complexpolarascomplex
  summary: |-
    Converts a complex number of type `ComplexPolar` to a complex
    number of type `Complex`.
- uid: microsoft.quantum.math.complexpolartocomplex
  summary: |2-

    > [!WARNING]
    > Deprecated

    ComplexPolarToComplex has been deprecated. Please use @"microsoft.quantum.math.complexpolarascomplex" instead.
- uid: microsoft.quantum.math.complextocomplexpolar
  summary: |2-

    > [!WARNING]
    > Deprecated

    ComplexToComplexPolar has been deprecated. Please use @"microsoft.quantum.math.complexascomplexpolar" instead.
- uid: microsoft.quantum.math.continuedfractionconvergenti
  summary: |-
    Finds the continued fraction convergent closest to `fraction`
    with the denominator less or equal to `denominatorBound`
- uid: microsoft.quantum.math.continuedfractionconvergentl
  summary: |-
    Finds the continued fraction convergent closest to `fraction`
    with the denominator less or equal to `denominatorBound`
- uid: microsoft.quantum.math.cos
  summary: Returns the cosine of the specified angle.
- uid: microsoft.quantum.math.cosh
  summary: Returns the hyperbolic cosine of the specified angle.
- uid: microsoft.quantum.math.dividedbyc
  summary: Returns the quotient of two inputs.
- uid: microsoft.quantum.math.dividedbycp
  summary: Returns the quotient of two inputs.
- uid: microsoft.quantum.math.dividedbyd
  summary: Returns the quotient of two inputs.
- uid: microsoft.quantum.math.dividedbyi
  summary: Returns the quotient of two inputs.
- uid: microsoft.quantum.math.dividedbyl
  summary: Returns the quotient of two inputs.
- uid: microsoft.quantum.math.divreml
  summary: Divides one BigInteger value by another, returns the result and the remainder as a tuple.
- uid: microsoft.quantum.math.e
  summary: Returns the natural logarithmic base $e$.
- uid: microsoft.quantum.math.expd
  summary: Returns $e$ raised to the specified power.
- uid: microsoft.quantum.math.expmodi
  summary: |-
    Returns an integer raised to a given power, with respect to a given
    modulus.
- uid: microsoft.quantum.math.expmodl
  summary: |-
    Returns an integer raised to a given power, with respect to a given
    modulus.
- uid: microsoft.quantum.math.extendedgreatestcommondivisori
  summary: |-
    Computes a tuple $(u,v)$ such that $u \cdot a + v \cdot b = \operatorname{GCD}(a, b)$,
    where $\operatorname{GCD}$ is $a$
    greatest common divisor of $a$ and $b$. The GCD is always positive.
- uid: microsoft.quantum.math.extendedgreatestcommondivisorl
  summary: |-
    Computes a tuple $(u,v)$ such that $u \cdot a + v \cdot b = \operatorname{GCD}(a, b)$,
    where $\operatorname{GCD}$ is $a$
    greatest common divisor of $a$ and $b$. The GCD is always positive.
- uid: microsoft.quantum.math.floor
  summary: Returns the largest integer less than or equal to the specified number.
- uid: microsoft.quantum.math.greatestcommondivisori
  summary: Computes the greatest common divisor of $a$ and $b$. The GCD is always positive.
- uid: microsoft.quantum.math.greatestcommondivisorl
  summary: Computes the greatest common divisor of $a$ and $b$. The GCD is always positive.
- uid: microsoft.quantum.math.ieeeremainder
  summary: Returns the remainder resulting from the division of a specified number by another specified number.
- uid: microsoft.quantum.math.inversemodi
  summary: Returns $b$ such that $a \cdot b = 1 (\operatorname{mod} \texttt{modulus})$.
- uid: microsoft.quantum.math.inversemodl
  summary: Returns $b$ such that $a \cdot b = 1 (\operatorname{mod} \texttt{modulus})$.
- uid: microsoft.quantum.math.iscoprimei
  summary: Returns true if $a$ and $b$ are co-prime and false otherwise.
- uid: microsoft.quantum.math.iscoprimel
  summary: Returns true if $a$ and $b$ are co-prime and false otherwise.
- uid: microsoft.quantum.math.lg
  summary: Computes the base-2 logarithm of a number.
- uid: microsoft.quantum.math.log
  summary: Returns the natural (base $e$) logarithm of a specified number.
- uid: microsoft.quantum.math.log10
  summary: Returns the base 10 logarithm of a specified number.
- uid: microsoft.quantum.math.logof2
  summary: Returns the natural logarithm of 2.
- uid: microsoft.quantum.math.max
  summary: Given an array of integers, returns the largest element.
- uid: microsoft.quantum.math.maxd
  summary: Returns the larger of two specified numbers.
- uid: microsoft.quantum.math.maxi
  summary: Returns the larger of two specified numbers.
- uid: microsoft.quantum.math.maxl
  summary: Returns the larger of two specified numbers.
- uid: microsoft.quantum.math.min
  summary: Given an array of integers, returns the smallest element.
- uid: microsoft.quantum.math.mind
  summary: Returns the smaller of two specified numbers.
- uid: microsoft.quantum.math.mini
  summary: Returns the smaller of two specified numbers.
- uid: microsoft.quantum.math.minl
  summary: Returns the smaller of two specified numbers.
- uid: microsoft.quantum.math.minusc
  summary: Returns the difference between two inputs.
- uid: microsoft.quantum.math.minuscp
  summary: Returns the difference between two inputs.
- uid: microsoft.quantum.math.minusd
  summary: Returns the difference between two inputs.
- uid: microsoft.quantum.math.minusi
  summary: Returns the difference between two inputs.
- uid: microsoft.quantum.math.minusl
  summary: Returns the difference between two inputs.
- uid: microsoft.quantum.math.modi
  summary: Returns the modulus of a number with respect to another number.
- uid: microsoft.quantum.math.modl
  summary: Returns the modulus of a number with respect to another number.
- uid: microsoft.quantum.math.modpowl
  summary: Performs modular division on a number raised to the power of another number.
- uid: microsoft.quantum.math.modulusi
  summary: Computes the canonical residue of `value` modulo `modulus`.
- uid: microsoft.quantum.math.modulusl
  summary: Computes the canonical residue of `value` modulo `modulus`.
- uid: microsoft.quantum.math.negationc
  summary: Returns the unary negation of an input.
- uid: microsoft.quantum.math.negationcp
  summary: Returns the unary negation of an input.
- uid: microsoft.quantum.math.negationd
  summary: Returns the unary negation of an input.
- uid: microsoft.quantum.math.negationi
  summary: Returns the unary negation of an input.
- uid: microsoft.quantum.math.negationl
  summary: Returns the unary negation of an input.
- uid: microsoft.quantum.math.pi
  summary: Represents the ratio of the circumference of a circle to its diameter, specified by the constant, Ï€.
- uid: microsoft.quantum.math.plusa
  summary: Returns the sum (concatenation) of two inputs.
- uid: microsoft.quantum.math.plusc
  summary: Returns the sum of two inputs.
- uid: microsoft.quantum.math.pluscp
  summary: Returns the sum of two inputs.
- uid: microsoft.quantum.math.plusd
  summary: Returns the sum of two inputs.
- uid: microsoft.quantum.math.plusi
  summary: Returns the sum of two inputs.
- uid: microsoft.quantum.math.plusl
  summary: Returns the sum of two inputs.
- uid: microsoft.quantum.math.pnorm
  summary: |-
    Returns the `L(p)` norm of a vector of `Double`s.

    That is, given an array $x$ of type `Double[]`, this returns the $p$-norm
    $\|x\|\_p= (\sum_{j}|x_j|^{p})^{1/p}$.
- uid: microsoft.quantum.math.pnormalized
  summary: |-
    Normalizes a vector of `Double`s in the `L(p)` norm.

    That is, given an array $x$ of type `Double[]`, this returns an array where
    all elements are divided by the $p$-norm $\|x\|_p$.
- uid: microsoft.quantum.math.powc
  summary: Returns a number raised to a given power.
- uid: microsoft.quantum.math.powcp
  summary: Returns a number raised to a given power.
- uid: microsoft.quantum.math.powd
  summary: Returns the number x raised to the power y.
- uid: microsoft.quantum.math.powi
  summary: Returns a number raised to a given power.
- uid: microsoft.quantum.math.powl
  summary: Returns a number raised to a given power.
- uid: microsoft.quantum.math.realmod
  summary: Computes the modulus between two real numbers.
- uid: microsoft.quantum.math.round
  summary: Rounds a value to the nearest integer.
- uid: microsoft.quantum.math.signd
  summary: Returns an integer that indicates the sign of a number.
- uid: microsoft.quantum.math.signi
  summary: Returns an integer that indicates the sign of a number.
- uid: microsoft.quantum.math.signl
  summary: Returns an integer that indicates the sign of a number.
- uid: microsoft.quantum.math.sin
  summary: Returns the sine of the specified angle.
- uid: microsoft.quantum.math.sinh
  summary: Returns the hyperbolic sine of the specified angle.
- uid: microsoft.quantum.math.sqrt
  summary: Returns the square root of a specified number.
- uid: microsoft.quantum.math.squarednorm
  summary: Returns the squared 2-norm of a vector.
- uid: microsoft.quantum.math.tan
  summary: Returns the tangent of the specified angle.
- uid: microsoft.quantum.math.tanh
  summary: Returns the hyperbolic tangent of the specified angle.
- uid: microsoft.quantum.math.timesc
  summary: Returns the product of two inputs.
- uid: microsoft.quantum.math.timescp
  summary: Returns the product of two inputs.
- uid: microsoft.quantum.math.timesd
  summary: Returns the product of two inputs.
- uid: microsoft.quantum.math.timesi
  summary: Returns the product of two inputs.
- uid: microsoft.quantum.math.timesl
  summary: Returns the product of two inputs.
- uid: microsoft.quantum.math.truncate
  summary: Calculates the integral part of a number.
newtypes:
- uid: microsoft.quantum.math.bigfraction
  summary: |-
    Represents a rational number of the form `p/q`. Integer `p` is
    the first element of the tuple and `q` is the second element
    of the tuple.
- uid: microsoft.quantum.math.complex
  summary: |-
    Represents a complex number by its real and imaginary components.
    The first element of the tuple is the real component, the second one - the imaginary component.
- uid: microsoft.quantum.math.complexpolar
  summary: |-
    Represents a complex number in polar form.

    The polar representation of a complex number is $c=r e^{i t}$.
- uid: microsoft.quantum.math.fraction
  summary: |-
    Represents a rational number of the form `p/q`. Integer `p` is
    the first element of the tuple and `q` is the second element
    of the tuple.
summary: |2-
   # Summary
   This namespace contains classical mathematical functions and data types.
operations:
- uid: microsoft.quantum.math.randomint
  summary: |-
    Generates a uniformly sampled random integer greater than or equal to zero
    and less than a provided upper bound.
- uid: microsoft.quantum.math.randomintpow2
  summary: |-
    Generates a random integer uniformly sampled from all integers that can be represented
    in a given number of bits.
- uid: microsoft.quantum.math.randomreal
  summary: |-
    Returns a random real number in the interval greater than or equal to zero
    and less than one.
- uid: microsoft.quantum.math.randomsinglequbitpauli
  summary: |-
    Returns one of the single-qubit Pauli operators uniformly
    at random.
...
