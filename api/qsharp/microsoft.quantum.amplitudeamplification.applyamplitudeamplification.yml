### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.applyamplitudeamplification
name: ApplyAmplitudeAmplification
type: operation
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: |-
  Applies amplitude amplification on a given register, using a given set
  of phases and oracles to reflect about the initial and final states.
syntax: 'operation ApplyAmplitudeAmplification (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, target : Qubit[]) : Unit'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, targetStateReflection : Microsoft.Quantum.Oracles.ReflectionOracle, target : Qubit[])'
  types:
  - name: phases
    summary: |-
      A set of phases describing the partial reflections at each step of the
      amplitude amplification algorithm. See
      @"microsoft.quantum.amplitudeamplification.standardreflectionphases"
      for an example.
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateReflection
    summary: An oracle that reflects about the initial state.
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: targetStateReflection
    summary: An oracle that reflects about the desired final state.
    uid: microsoft.quantum.oracles.reflectionoracle
  - name: target
    summary: A register to perform amplitude amplification on.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
