### YamlMime:QSharpType
uid: microsoft.quantum.amplitudeamplification.obliviousamplitudeamplificationfromstatepreparation
name: ObliviousAmplitudeAmplificationFromStatePreparation
type: function
namespace: Microsoft.Quantum.AmplitudeAmplification
summary: Oblivious amplitude amplification by oracles for partial reflections.
remarks: |-
  This imposes stricter conditions on form of the auxiliary start and target states than in `AmpAmpObliviousByReflectionPhases`.
  It is assumed that $A\ket{0}\_f\ket{0}\_a= \ket{\text{start}}\_{fa}$ prepares the auxiliary start state $\ket{\text{start}}\_{fa}$ from the computational basis $\ket{0}\_f\ket{0}$.
  It is assumed that the target state is marked by $\ket{1}\_f$.
  It is assumed that
  \begin{align}
  O\ket{\text{start}}\_{fa}\ket{\psi}\_s= \lambda\ket{1}\_f\ket{\text{anything}}\_a\ket{\text{target}}\_s U \ket{\psi}\_s + \sqrt{1-|\lambda|^2}\ket{0}\_f\cdots,
  \end{align}
  for some unitary $U$.
syntax: 'function ObliviousAmplitudeAmplificationFromStatePreparation (phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
input:
  content: '(phases : Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases, startStateOracle : Microsoft.Quantum.Oracles.DeterministicStateOracle, signalOracle : Microsoft.Quantum.Oracles.ObliviousOracle, idxFlagQubit : Int)'
  types:
  - name: phases
    summary: Phases of partial reflections
    uid: microsoft.quantum.amplitudeamplification.reflectionphases
  - name: startStateOracle
    summary: Unitary oracle $A$ that prepares auxiliary start state
    uid: microsoft.quantum.oracles.deterministicstateoracle
  - name: signalOracle
    summary: |-
      Unitary oracle $O$ of type `ObliviousOracle` that acts jointly on the
      auxiliary and system register
    uid: microsoft.quantum.oracles.obliviousoracle
  - name: idxFlagQubit
    summary: Index to single-qubit flag register
    isPrimitive: true
    uid: Int
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: An operation that implements oblivious amplitude amplification based on partial reflections.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
...
