### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.compareusingripplecarry
name: CompareUsingRippleCarry
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: |-
  This unitary tests if two integers `x` and `y` stored in equal-size qubit registers
  satisfy `x > y`. If true, 1 is XORed into an output
  qubit. Otherwise, 0 is XORed into an output qubit.

  In other words, this unitary $U$  satisfies:
  $$
  \begin{align}
  U\ket{x}\ket{y}\ket{z}=\ket{x}\ket{y}\ket{z\oplus (x>y)}.
  \end{align}
  $$.
syntax: 'operation CompareUsingRippleCarry (x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit) : Unit'
references: |-
  - A new quantum ripple-carry addition circuit
    Steven A. Cuccaro, Thomas G. Draper, Samuel A. Kutin, David Petrie Moulton
    https://arxiv.org/abs/quant-ph/0410184
input:
  content: '(x : Microsoft.Quantum.Arithmetic.LittleEndian, y : Microsoft.Quantum.Arithmetic.LittleEndian, output : Qubit)'
  types:
  - name: x
    summary: First number to be compared stored in `LittleEndian` format in a qubit register.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: y
    summary: Second number to be compared stored in `LittleEndian` format in a qubit register.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: output
    summary: Qubit that stores the result of the comparison $x>y$.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
