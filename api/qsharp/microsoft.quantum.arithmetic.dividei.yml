### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arithmetic.dividei
name: DivideI
type: operation
namespace: microsoft.quantum.arithmetic
summary: |-
  Divides two quantum integers.

  `xs` will hold the
  remainder `xs - floor(xs/ys) * ys` and `result` will hold
  `floor(xs/ys)`.
remarks: |-
  Uses a standard shift-and-subtract approach to implement the division.
  The controlled version is specialized such the subtraction does not
  require additional controls.
syntax: 'operation DivideI (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, result : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: $n$-bit dividend, will be replaced by the remainder.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: $n$-bit divisor
    uid: microsoft.quantum.arithmetic.littleendian
  - name: result
    summary: |-
      $n$-bit result, must be in state $\ket{0}$ initially
      and will be replaced by the result of the integer division.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
