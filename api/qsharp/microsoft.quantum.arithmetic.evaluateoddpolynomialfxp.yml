### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.evaluateoddpolynomialfxp
name: EvaluateOddPolynomialFxP
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: Evaluates an odd polynomial in a fixed-point representation.
syntax: 'operation EvaluateOddPolynomialFxP (coefficients : Double[], fpx : Microsoft.Quantum.Arithmetic.FixedPoint, result : Microsoft.Quantum.Arithmetic.FixedPoint) : Unit'
input:
  content: '(coefficients : Double[], fpx : Microsoft.Quantum.Arithmetic.FixedPoint, result : Microsoft.Quantum.Arithmetic.FixedPoint)'
  types:
  - name: coefficients
    summary: |-
      Coefficients of the odd polynomial as a double array, i.e., the array
      $[a_0, a_1, ..., a_k]$ for the odd polynomial
      $P(x) = a_0 x + a_1 x^3 + \cdots + a_k x^{2k+1}$.
    isArray: true
    isPrimitive: true
    uid: Double
  - name: fpx
    summary: Input fixed-point number for which to evaluate the polynomial.
    uid: microsoft.quantum.arithmetic.fixedpoint
  - name: result
    summary: |-
      Output fixed-point number which will hold P(x). Must be in state
      $\ket{0}$ initially.
    uid: microsoft.quantum.arithmetic.fixedpoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
