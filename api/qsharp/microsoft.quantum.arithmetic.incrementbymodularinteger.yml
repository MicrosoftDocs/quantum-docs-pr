### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementbymodularinteger
name: IncrementByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: |-
  Performs a modular increment of a qubit register by an integer constant.

  Let us denote `increment` by $a$, `modulus` by $N$ and integer encoded in `target` by $y$.
  Then the operation performs the following transformation:
  \begin{align}
  \ket{y} \mapsto \ket{(y + a) \operatorname{mod} N}
  \end{align}
  Integers are encoded in little-endian format.
remarks: |-
  Assumes that the initial value of target is less than $N$
  and that the increment $a$ is less than $N$.
  Note that
  <xref:microsoft.quantum.arithmetic.incrementphasebymodularinteger> implements
  the same operation in the `PhaseLittleEndian` basis.
syntax: 'operation IncrementByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: increment
    summary: Integer increment $a$ to be added to $y$.
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: Integer $N$ that mods $y + a$.
    isPrimitive: true
    uid: Int
  - name: target
    summary: Integer $y$ in `LittleEndian` format that `increment` $a$ is added to.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.arithmetic.incrementphasebymodularinteger
...
