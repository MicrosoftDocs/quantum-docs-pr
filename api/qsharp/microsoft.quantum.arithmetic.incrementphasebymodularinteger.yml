### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.incrementphasebymodularinteger
name: IncrementPhaseByModularInteger
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: |-
  Performs a modular increment of a qubit register by an integer constant.

  Let us denote `increment` by a, `modulus` by N and integer encoded in `target` by y
  Then the operation performs the following transformation:
  |y⟩ ↦ |y+a (mod N)⟩
  Integers are encoded in little-endian format in QFT basis
remarks: |-
  Assumes that `target` has the highest bit set to 0.
  Also assumes that the value of target is less than N.

  For the circuit diagram and explanation see Figure 5 on [Page 5
  of arXiv:quant-ph/0205095v3](https://arxiv.org/pdf/quant-ph/0205095v3.pdf#page=5).
syntax: 'operation IncrementPhaseByModularInteger (increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian) : Unit'
input:
  content: '(increment : Int, modulus : Int, target : Microsoft.Quantum.Arithmetic.PhaseLittleEndian)'
  types:
  - name: increment
    isPrimitive: true
    uid: Int
  - name: modulus
    isPrimitive: true
    uid: Int
  - name: target
    uid: microsoft.quantum.arithmetic.phaselittleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.modularincrementle
...
