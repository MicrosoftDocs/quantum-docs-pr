### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.ripplecarryaddercdkm
name: RippleCarryAdderCDKM
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: |-
  Reversible, in-place ripple-carry addition of two integers.

  Given two $n$-bit integers encoded in LittleEndian registers `xs` and `ys`,
  and a qubit carry, the operation computes the sum of the two integers
  where the $n$ least significant bits of the result are held in `ys` and
  the carry out bit is xored to the qubit `carry`.
remarks: |-
  This operation has the same functionality as RippleCarryAdderD, but
  only uses one ancilla qubit instead of $n$.
syntax: 'operation RippleCarryAdderCDKM (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, carry : Qubit) : Unit'
references: |-
  - Steven A. Cuccaro, Thomas G. Draper, Samuel A. Kutin, David
    Petrie Moulton: "A new quantum ripple-carry addition circuit", 2004.
    https://arxiv.org/abs/quant-ph/0410184v1
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian, carry : Qubit)'
  types:
  - name: xs
    summary: LittleEndian qubit register encoding the first integer summand.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: |-
      LittleEndian qubit register encoding the second integer summand, is
      modified to hold the n least significant bits of the sum.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: carry
    summary: Carry qubit, is xored with the most significant bit of the sum.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
