### YamlMime:QSharpType
uid: microsoft.quantum.arithmetic.ripplecarryaddernocarryttk
name: RippleCarryAdderNoCarryTTK
type: operation
namespace: Microsoft.Quantum.Arithmetic
summary: |-
  Reversible, in-place ripple-carry addition of two integers without carry out.

  Given two $n$-bit integers encoded in LittleEndian registers `xs` and `ys`,
  the operation computes the sum of the two integers modulo $2^n$,
  where $n$ is the bit size of the inputs `xs` and `ys`. It does not compute
  the carry out bit.
remarks: |-
  This operation has the same functionality as RippleCarryAdderTTK but does
  not return the carry bit.
syntax: 'operation RippleCarryAdderNoCarryTTK (xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: |-
  - Yasuhiro Takahashi, Seiichiro Tani, Noboru Kunihiro: "Quantum
    Addition Circuits and Unbounded Fan-Out", Quantum Information and
    Computation, Vol. 10, 2010.
    https://arxiv.org/abs/0910.2530
input:
  content: '(xs : Microsoft.Quantum.Arithmetic.LittleEndian, ys : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: xs
    summary: LittleEndian qubit register encoding the first integer summand.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: ys
    summary: |-
      LittleEndian qubit register encoding the second integer summand, is
      modified to hold the $n$ least significant bits of the sum.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
