### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.all
name: All
type: function
namespace: microsoft.quantum.arrays
summary: |-
  Given an array and a predicate that is defined
  for the elements of the array, and checks if all elements of the
  array satisfy the predicate.
remarks: |-
  The function is defined for generic types, i.e., whenever we have
  an array `'T[]` and a function `predicate: 'T -> Bool` we can produce
  a `Bool` value that indicates if all elements satisfy `predicate`.
examples: |-
  The following code checks whether all elements of the array are non-zero:

  ```qsharp
  open Microsoft.Quantum.Arrays;
  open Microsoft.Quantum.Logical;

  function AllDemo() : Unit {
      let predicate = NotEqualI(_, 0);
      let isNonZero = All(predicate, [2, 3, 4, 5, 6, 0]);
      Message($"{isNonZero}");
  }
  ```
syntax: "function All (predicate : ('T -> Bool), array : 'T[]) : Bool"
input:
  content: "(predicate : ('T -> Bool), array : 'T[])"
  types:
  - name: predicate
    summary: A function from `'T` to `Bool` that is used to check elements.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array
    summary: An array of elements over `'T`.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: A `Bool` value of the AND function of the predicate applied to all elements.
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: The type of `array` elements.
...
