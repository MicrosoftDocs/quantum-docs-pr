### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.elementsat
name: ElementsAt
type: function
namespace: microsoft.quantum.arrays
summary: |-
  Returns the array's elements at a given range
  of indices.
examples: |-
  Get the odd indexes in famous integer sequences. (note
  that the 0 index corresponds to the _first_ value of the sequence.)

  ```Q#
  let lucas = [2, 1, 3, 4, 7, 11, 18, 29, 47, 76];
  let prime = [2, 3, 5, 7, 11, 13, 17, 19, 23, 29];
  let fibonacci = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34];
  let catalan = [1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862];
  let famousOdd = Mapped(ElementsAt<Int>(0..2..9, _), [lucas, prime, fibonacci, catalan]);
  // same as: famousOdd = [[2, 3, 7, 18, 47], [2, 5, 11, 17, 23], [0, 1, 3, 8, 21], [1, 2, 14, 132, 1430]]
  ```
syntax: "function ElementsAt (range : Range, array : 'T[]) : 'T[]"
input:
  content: "(range : Range, array : 'T[])"
  types:
  - name: range
    summary: Range of array indexes
    isPrimitive: true
    uid: Range
  - name: array
    summary: Array
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: The type of each element of `array`.
seeAlso:
- microsoft.quantum.arrays.elementat
- microsoft.quantum.arrays.lookupfunction
...
