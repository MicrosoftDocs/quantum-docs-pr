### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.equala
name: EqualA
type: function
namespace: microsoft.quantum.arrays
summary: |-
  Given two arrays of the same type and a predicate that is defined
  for pairs of elements of the arrays, checks whether the arrays are equal.
remarks: |-
  This function is defined for generic types; i.e., whenever we have
  two arrays `'T[]` and a function `equal: ('T, 'T) -> Bool`, this function returns
  a `Bool` value that indicates whether the arrays are equal.
  For two arrays to be considered equal, they have to have equal length
  and the elements in the same positions in the arrays have to be equal.
examples: |-
  The following code checks whether different pairs of arrays are equal:

  ```qsharp
  open Microsoft.Quantum.Arrays;
  open Microsoft.Quantum.Logical;

  function EqualADemo() : Unit {
      let equalArrays = EqualA(EqualI, [2, 3, 4], [2, 3, 4]);
      let differentLength = EqualA(EqualD, [2.0, 3.0, 4.0], [2.0, 3.0]);
      let differentElements = EqualA(EqualR, [One, Zero], [One, One]);
      Message($"Equal arrays are {equalArrays ? "equal" | "not equal"}");
      Message($"Arrays of different length are {differentLength ? "equal" | "not equal"}");
      Message($"Arrays of the same length with different elements are {differentElements ? "equal" | "not equal"}");
  }
  ```
syntax: "function EqualA (equal : (('T, 'T) -> Bool), array1 : 'T[], array2 : 'T[]) : Bool"
input:
  content: "(equal : (('T, 'T) -> Bool), array1 : 'T[], array2 : 'T[])"
  types:
  - name: equal
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: array1
    summary: The first array to be compared.
    isArray: true
    uid: "'T"
    isLocal: true
  - name: array2
    summary: The second array to be compared.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Bool
  types:
  - summary: |-
      The value `true` if and only if `array1` and `array2` are equal.
      That is, if both arrays have the same length, and all elements are equal
      as defined by `equal`.
    isPrimitive: true
    uid: Bool
typeParameters:
- uid: "'T"
  summary: The type of each array's elements.
...
