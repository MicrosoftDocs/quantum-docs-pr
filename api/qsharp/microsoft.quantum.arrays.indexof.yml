### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.indexof
name: IndexOf
type: function
namespace: microsoft.quantum.arrays
summary: |-
  Returns the first index of the first element in an array that satisfies
  a given predicate. If no such element exists, returns -1.
examples: |-
  Suppose that `IsEven : Int -> Bool` is a function that returns `true`
  if and only if its input is even. Then, this can be used with `IndexOf`
  to find the first even element in an array:

  ```Q#
  let items = [1, 3, 17, 2, 21];
  let idx = IndexOf(IsEven, items); // returns 3
  ```
syntax: "function IndexOf (predicate : ('T -> Bool), arr : 'T[]) : Int"
input:
  content: "(predicate : ('T -> Bool), arr : 'T[])"
  types:
  - name: predicate
    summary: A predicate function acting on elements of the array.
    isFunction: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Bool
  - name: arr
    summary: An array to be searched using the given predicate.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: Int
  types:
  - summary: |-
      Either the smallest index `idx` such that `predicate(arr[idx])` is true,
      or -1 if no such element exists.
    isPrimitive: true
    uid: Int
...
