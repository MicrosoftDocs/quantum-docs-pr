### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.sequencel
name: SequenceL
type: function
namespace: microsoft.quantum.arrays
summary: Get an array of integers in a given interval.
remarks: The difference between `from` and `to` must fit into an `Int` value.
examples: |-
  ```qsharp
  let arr1 = SequenceL(0L, 3L); // [0L, 1L, 2L, 3L]
  let arr2 = SequenceL(23L, 29L); // [23L, 24L, 25L, 26L, 27L, 28L, 29L]
  let arr3 = SequenceL(-5L, -2L); // [-5L, -4L, -3L, -2L]
  ```
syntax: 'function SequenceL (from : BigInt, to : BigInt) : BigInt[]'
input:
  content: '(from : BigInt, to : BigInt)'
  types:
  - name: from
    summary: An inclusive start index of the interval.
    isPrimitive: true
    uid: BigInt
  - name: to
    summary: An inclusive end index of the interval that is not smaller than `from`.
    isPrimitive: true
    uid: BigInt
output:
  content: BigInt[]
  types:
  - summary: |-
      An array containing the sequence of numbers `from`, `from + 1`, ...,
      `to`.
    isArray: true
    isPrimitive: true
    uid: BigInt
...
