### YamlMime:QSharpType
uid: microsoft.quantum.arrays.subarray
name: Subarray
type: function
namespace: Microsoft.Quantum.Arrays
summary: |-
  Takes an array and a list of locations and
  produces a new array formed from the elements of the original
  array that match the given locations.
remarks: |-
  The function is defined for generic types, i.e., whenever we have
  an array `'T[]` and a list of locations `Int[]` defining the subarray.
  The construction of the subarray is a based on generating a new, deep
  copy of the given array as opposed to maintaining references.

  If `Length(indices) < Length(array)`, this function will return a
  subset of `array`. On the other hand, if `indices` contains repeated
  elements, the corresponding elements of `array` will likewise be
  repeated.
  If `indices` and `array` are the same length, this function
  provides permutations of `array`.
syntax: "function Subarray (indices : Int[], array : 'T[]) : 'T[]"
input:
  content: "(indices : Int[], array : 'T[])"
  types:
  - name: indices
    summary: A list of integers that is used to define the subarray.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: array
    summary: An array of elements over `'T`.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[]"
  types:
  - summary: |-
      An array `out` of elements whose indices correspond to the subarray,
      such that `out[idx] == array[indices[idx]]`.
    isArray: true
    uid: "'T"
    isLocal: true
typeParameters:
- uid: "'T"
  summary: The type of `array` elements.
...
