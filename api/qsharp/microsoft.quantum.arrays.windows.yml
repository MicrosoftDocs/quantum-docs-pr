### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.arrays.windows
name: Windows
type: function
namespace: microsoft.quantum.arrays
summary: |-
  Returns all consecutive subarrays of length `size`.

  This function returns all `n - size + 1` subarrays of
  length `size` in order, where `n` is the length of `arr`.
  The first subarrays are `arr[0..size - 1], arr[1..size], arr[2..size + 1]`
  until the last subarray `arr[n - size..n - 1]`.

  If `size <= 0` or `size > n`, an empty array is returned.
examples: |-
  ```Q#
  // same as [[1, 2, 3], [2, 3, 4], [3, 4, 5]]
  let windows = Windows(3, [1, 2, 3, 4, 5]);
  ```
syntax: "function Windows (size : Int, array : 'T[]) : 'T[][]"
input:
  content: "(size : Int, array : 'T[])"
  types:
  - name: size
    summary: Length of the subarrays.
    isPrimitive: true
    uid: Int
  - name: array
    summary: An array of elements.
    isArray: true
    uid: "'T"
    isLocal: true
output:
  content: "'T[][]"
  types:
  - isArray: true
    types:
    - isArray: true
      uid: "'T"
      isLocal: true
typeParameters:
- uid: "'T"
  summary: The type of `array` elements.
...
