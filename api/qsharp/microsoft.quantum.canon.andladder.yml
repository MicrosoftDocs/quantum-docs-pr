### YamlMime:QSharpType
uid: microsoft.quantum.canon.andladder
name: AndLadder
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Performs a controlled "AND ladder" on a register of target qubits.

  This operation applies a transformation described by the following
  mapping of the computational basis,
  $$
  \begin{align}
  \ket{x\_1, \dots, x\_n} \ket{y\_1, \dots, y\_{n - 1}} \mapsto
  \ket{x\_1, \dots, x\_n} \ket{
  y\_1 \oplus (x\_1 \land x\_2), \dots, y\_{n - 1} \oplus (x\_1 \land x\_2 \land \cdots \land x\_{n - 1}
  },
  \end{align}
  $$
  where $\ket{x\_1, \dots, x\_n}$ refers to the computational basis
  states of `controls`, and where $\ket{y\_1, \dots, y\_{n - 1}}$
  refers to the computational basis states of `targets`.
remarks: |-
  - Used as a part of <xref:microsoft.quantum.canon.applymulticontrolledc>
    and <xref:microsoft.quantum.canon.applymulticontrolledca>.
  - For the explanation and circuit diagram see Figure 4.10, Section 4.3 in Nielsen & Chuang.
syntax: 'operation AndLadder (ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[]) : Unit'
references: |-
  - [ *Michael A. Nielsen , Isaac L. Chuang*,
    Quantum Computation and Quantum Information ](http://doi.org/10.1017/CBO9780511976667)
input:
  content: '(ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[])'
  types:
  - name: ccnot
    summary: The CCNOT gate to use for the construction.
    uid: microsoft.quantum.canon.ccnotop
  - name: controls
    summary: |-
      A register of qubits to be used as controls for the and ladder.
      This operation leaves computational basis states of `controls`
      invariant.
      The length of `controls` must be at least 2, and must
      be equal to one plus the length of `targets`.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: |-
      The length of `targets` must be at least 1 and equal to the length
      of `controls` minus one.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
...
