### YamlMime:QSharpType
uid: microsoft.quantum.canon.applycnotchainwithtarget
name: ApplyCNOTChainWithTarget
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Computes the parity of an array of qubits into a target qubit.

  If the array is initially in the state
  $\ket{q_0} \ket{q_1} \cdots \ket{q_{\text{target}}}$,
  the final state is given by
  $\ket{q_0} \ket{q_1 \oplus q_0} \cdots \ket{q_{n - 1} \oplus \cdots \oplus q_0 \oplus q_{\text{target}}}$.
remarks: |-
  The following are equivalent:

  ```qsharp
  ApplyCNOTChainWithTarget(Most(qs), Last(qs));
  ```

  and

  ```qsharp
  ApplyCNOTChain(qs);
  ```
syntax: 'operation ApplyCNOTChainWithTarget (qubits : Qubit[], targetQubit : Qubit) : Unit'
input:
  content: '(qubits : Qubit[], targetQubit : Qubit)'
  types:
  - name: qubits
    summary: Array of qubits on which the parity is computed.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targetQubit
    summary: Final qubit into which the parity of 'qubits' is XORed.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
