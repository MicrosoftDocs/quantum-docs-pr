### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.applycontrolledonbitstring
name: ApplyControlledOnBitString
type: operation
namespace: microsoft.quantum.canon
summary: |-
  Applies a unitary operation on the target register, controlled on a a state specified by a given
  bit mask.
remarks: |-
  The pattern given by `bits` may be shorter than `controlRegister`,
  in which case additional control qubits are ignored (that is, neither
  controlled on $\ket{0}$ nor $\ket{1}$).
  If `bits` is longer than `controlRegister`, an error is raised.

  For example, `bits = [0,1,0,0,1]` means that `oracle` is applied if and only if `controlRegister`
  is in the state $\ket{0}\ket{1}\ket{0}\ket{0}\ket{1}$.
syntax: "operation ApplyControlledOnBitString (bits : Bool[], oracle : ('T => Unit is Adj + Ctl), controlRegister : Qubit[], targetRegister : 'T) : Unit"
input:
  content: "(bits : Bool[], oracle : ('T => Unit is Adj + Ctl), controlRegister : Qubit[], targetRegister : 'T)"
  types:
  - name: bits
    summary: The bit string to control the given unitary operation on.
    isArray: true
    isPrimitive: true
    uid: Bool
  - name: oracle
    summary: The unitary operation to be applied on the target register.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: controlRegister
    summary: A quantum register that controls application of `oracle`.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targetRegister
    summary: The target register to be passed to `oracle` as an input.
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
