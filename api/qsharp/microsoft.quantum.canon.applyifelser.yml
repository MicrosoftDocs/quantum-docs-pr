### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.applyifelser
name: ApplyIfElseR
type: operation
namespace: microsoft.quantum.canon
summary: |-
  Applies one of two operations, depending on the value of a classical
  result.

  Given a result `result`, applies the operation `zeroOp` with `zeroInput` as
  its input when `result` is equal to `Zero`, and applies `oneOp(oneInput)`
  when `result == One`.
syntax: "operation ApplyIfElseR (result : Result, (zeroOp : ('T => Unit), zeroInput : 'T), (oneOp : ('U => Unit), oneInput : 'U)) : Unit"
input:
  content: "(result : Result, (zeroOp : ('T => Unit), zeroInput : 'T), (oneOp : ('U => Unit), oneInput : 'U))"
  types:
  - name: result
    summary: |-
      The measurement result used to determine if `zeroOp` or `oneOp` is
      applied.
    isPrimitive: true
    uid: Result
  - name: zeroOp
    summary: The operation to be applied when `result == Zero`.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: zeroInput
    summary: The input to be provided to `zeroOp` when `result == Zero`.
    uid: "'T"
    isLocal: true
  - name: oneOp
    summary: The operation to be applied when `result == One`.
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: oneInput
    summary: The input to be provided to `oneOp` when `result == One`.
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
typeParameters:
- uid: "'T"
  summary: The input type of the operation `zeroOp` to be conditionally applied.
- uid: "'U"
  summary: The input type of the operation `oneOp` to be conditionally applied.
seeAlso:
- microsoft.quantum.canon.applyifzero
- microsoft.quantum.canon.applyifone
- microsoft.quantum.canon.applyifelserc
- microsoft.quantum.canon.applyifelsera
- microsoft.quantum.canon.applyifelserca
...
