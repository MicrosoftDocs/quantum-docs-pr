### YamlMime:QSharpType
uid: microsoft.quantum.canon.applymulticontrolledc
name: ApplyMultiControlledC
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Applies a multiply controlled version of a singly controlled
  operation.
  The modifier `C` indicates that the single-qubit operation is controllable.
remarks: |-
  This operation uses only clean ancilla qubits.

  For the explanation and circuit diagram see Figure 4.10, Section 4.3 in Nielsen & Chuang
syntax: 'operation ApplyMultiControlledC (singlyControlledOp : (Qubit[] => Unit), ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[]) : Unit'
references: |-
  - [ *Michael A. Nielsen , Isaac L. Chuang*,
    Quantum Computation and Quantum Information ](http://doi.org/10.1017/CBO9780511976667)
input:
  content: '(singlyControlledOp : (Qubit[] => Unit), ccnot : Microsoft.Quantum.Canon.CCNOTop, controls : Qubit[], targets : Qubit[])'
  types:
  - name: singlyControlledOp
    summary: |-
      An operation controlled on a single qubit.
      The first qubit in the argument of the operation is
      assumed to be a control and the rest are assumed to be target qubits.
      `ApplyMultiControlled` always calls `singlyControlledOp` with an argument of
      length at least 1.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: ccnot
    summary: The controlled-controlled-NOT gate to use for the construction.
    uid: microsoft.quantum.canon.ccnotop
  - name: controls
    summary: |-
      The qubits that `singlyControlledOp` is to be controlled on.
      The length of `controls` must be at least 1.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: targets
    summary: The target qubits that `singlyControlledOp` acts upon.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Controlled
seeAlso:
- microsoft.quantum.canon.applymulticontrolledca
...
