### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.applytopartitionca
name: ApplyToPartitionCA
type: operation
namespace: microsoft.quantum.canon
summary: |-
  Applies a pair of operations to a given partition of a register into two parts.
  The modifier `CA` indicates that the operation is controllable and adjointable.
syntax: 'operation ApplyToPartitionCA (op : ((Qubit[], Qubit[]) => Unit is Ctl + Adj), numberOfQubitsToFirstArgument : Int, target : Qubit[]) : Unit'
input:
  content: '(op : ((Qubit[], Qubit[]) => Unit is Ctl + Adj), numberOfQubitsToFirstArgument : Int, target : Qubit[])'
  types:
  - name: op
    summary: The pair of operations to be applied to the given partition.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: numberOfQubitsToFirstArgument
    summary: |-
      Number of qubits from target to put into the first part of the partition.
      The remaining qubits constitute the second part of the partition.
    isPrimitive: true
    uid: Int
  - name: target
    summary: |-
      A register of qubits that are being partitioned and operated on by the
      given two operation.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.canon.applytopartition
...
