### YamlMime:QSharpType
uid: microsoft.quantum.canon.applywithinputtransformationc
name: ApplyWithInputTransformationC
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Given an operation that accepts some input, a function that
  returns an output compatible with that operation, and an input to that
  function, applies the operation using the function to transform the
  input to a form expected by the operation.
examples: |-
  The following call uses
  @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" to apply
  an operation designed for
  @"Microsoft.Quantum.Arithmetic.BigEndian" inputs to an input of type
  @"Microsoft.Quantum.Arithmetic.LittleEndian":

  ```qsharp
  ApplyWithInputTransformation(LittleEndianAsBigEndian, ApplyXorInPlaceBE, LittleEndian(qubits));
  ```
syntax: "operation ApplyWithInputTransformationC (fn : ('U -> 'T), op : ('T => Unit is Ctl), input : 'U) : Unit"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit is Ctl), input : 'U)"
  types:
  - name: fn
    summary: |-
      A function that transforms the given input into a form expected by the
      operation.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: The operation to be applied.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Controlled
  - name: input
    summary: An input to the function.
    uid: "'U"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Controlled
seeAlso:
- applywithinputtransformation
- applywithinputtransformationa
- applywithinputtransformationca
- transformedoperation
...
