### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.approximateqft
name: ApproximateQFT
type: operation
namespace: microsoft.quantum.canon
summary: Apply the Approximate Quantum Fourier Transform (AQFT) to a quantum register.
remarks: |-
  AQFT requires Z-rotation gates of the form 2π/2ᵏ and Hadamard gates.

  The input and output are assumed to be encoded in big endian encoding.
syntax: 'operation ApproximateQFT (a : Int, qs : Microsoft.Quantum.Arithmetic.BigEndian) : Unit'
references: |-
  - [ *M. Roetteler, Th. Beth*,
    Appl. Algebra Eng. Commun. Comput.
    19(3): 177-193 (2008) ](http://doi.org/10.1007/s00200-008-0072-2)
  - [ *D. Coppersmith* arXiv:quant-ph/0201067v1 ](https://arxiv.org/abs/quant-ph/0201067)
input:
  content: '(a : Int, qs : Microsoft.Quantum.Arithmetic.BigEndian)'
  types:
  - name: a
    summary: |-
      approximation parameter which determines at which level the controlled Z-rotations that
      occur in the QFT circuit are pruned.

      The approximation parameter a determines the pruning level of the Z-rotations, i.e.,
      a ∈ {0..n} and all Z-rotations 2π/2ᵏ where k>a are
      removed from the QFT circuit. It is known that for k >= log₂(n)+log₂(1/ε)+3
      one can bound ||QFT-AQFT||<ε.
    isPrimitive: true
    uid: Int
  - name: qs
    summary: quantum register of n qubits to which the Approximate Quantum Fourier Transform is applied.
    uid: microsoft.quantum.arithmetic.bigendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
