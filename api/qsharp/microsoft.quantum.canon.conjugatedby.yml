### YamlMime:QSharpType
uid: microsoft.quantum.canon.conjugatedby
name: ConjugatedBy
type: function
namespace: Microsoft.Quantum.Canon
summary: |-
  Given outer and inner operations, returns a new operation that
  conjugates the inner operation by the outer operation.
remarks: |-
  The outer operation is always assumed to be adjointable, but does not
  need to be controllable in order for the combined operation to be
  controllable.
syntax: "function ConjugatedBy (outerOperation : ('T => Unit is Adj), innerOperation : ('T => Unit)) : ('T => Unit)"
input:
  content: "(outerOperation : ('T => Unit is Adj), innerOperation : ('T => Unit))"
  types:
  - name: outerOperation
    summary: |-
      The operation $U$ that should be used to conjugate $V$. Note that the
      outer operation $U$ needs to be adjointable, but does not
      need to be controllable.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: innerOperation
    summary: The operation $V$ being conjugated.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('T => Unit)
  types:
  - summary: |-
      A new operation whose action is represented by the unitary
      $U^{\dagger} V U$.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
typeParameters:
- uid: "'T"
  summary: |-
    The type of the target on which each of the inner and outer operations
    act.
seeAlso:
- conjugatedbya
- conjugatedbyc
- conjugatedbyca
- applywith
...
