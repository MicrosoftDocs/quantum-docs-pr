### YamlMime:QSharpType
uid: microsoft.quantum.canon.multiplexoperations
name: MultiplexOperations
type: operation
namespace: Microsoft.Quantum.Canon
summary: |-
  Applies an array of operations controlled by an array of number states.

  That is, applies Multiply-controlled unitary operation $U$ that applies a
  unitary $V_j$ when controlled by $n$-qubit number state $\ket{j}$.

  $U = \sum^{2^n-1}_{j=0}\ket{j}\bra{j}\otimes V_j$.
remarks: |-
  `coefficients` will be padded with identity elements if
  fewer than $2^n$ are specified. This implementation uses
  $n - 1$ auxillary qubits.
syntax: "operation MultiplexOperations (unitaries : ('T => Unit is Adj + Ctl)[], index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T) : Unit"
references: |-
  - Toward the first quantum simulation with quantum speedup
    Andrew M. Childs, Dmitri Maslov, Yunseong Nam, Neil J. Ross, Yuan Su
    https://arxiv.org/abs/1711.10980
input:
  content: "(unitaries : ('T => Unit is Adj + Ctl)[], index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T)"
  types:
  - name: unitaries
    summary: |-
      Array of up to $2^n$ unitary operations. The $j$th operation
      is indexed by the number state $\ket{j}$ encoded in little-endian format.
    isArray: true
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: index
    summary: |-
      $n$-qubit control register that encodes number states $\ket{j}$ in
      little-endian format.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: Generic qubit register that $V_j$ acts on.
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
