### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.multiplexoperationsbruteforcefromgenerator
name: MultiplexOperationsBruteForceFromGenerator
type: operation
namespace: microsoft.quantum.canon
summary: |-
  Applies multiply-controlled unitary operation $U$ that applies a
  unitary $V_j$ when controlled by n-qubit number state $\ket{j}$.

  $U = \sum^{N-1}_{j=0}\ket{j}\bra{j}\otimes V_j$.
remarks: |-
  `coefficients` will be padded with identity elements if
  fewer than $2^n$ are specified. This version is implemented
  directly by looping through n-controlled unitary operators.
syntax: "operation MultiplexOperationsBruteForceFromGenerator (unitaryGenerator : (Int, (Int -> ('T => Unit is Adj + Ctl))), index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T) : Unit"
input:
  content: "(unitaryGenerator : (Int, (Int -> ('T => Unit is Adj + Ctl))), index : Microsoft.Quantum.Arithmetic.LittleEndian, target : 'T)"
  types:
  - name: unitaryGenerator
    summary: |-
      A tuple where the first element `Int` is the number of unitaries $N$,
      and the second element `(Int -> ('T => () is Adj + Ctl))`
      is a function that takes an integer $j$ in $[0,N-1]$ and outputs the unitary
      operation $V_j$.
    types:
    - isPrimitive: true
      uid: Int
    - isFunction: true
      input:
        types:
        - isPrimitive: true
          uid: Int
      output:
        types:
        - isOperation: true
          input:
            types:
            - uid: "'T"
              isLocal: true
          output:
            types:
            - isPrimitive: true
              uid: Unit
          functors:
          - Adjoint
          - Controlled
  - name: index
    summary: |-
      $n$-qubit control register that encodes number states $\ket{j}$ in
      little-endian format.
    uid: microsoft.quantum.arithmetic.littleendian
  - name: target
    summary: Generic qubit register that $V_j$ acts on.
    uid: "'T"
    isLocal: true
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
