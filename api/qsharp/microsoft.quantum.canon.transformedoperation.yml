### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.canon.transformedoperation
name: TransformedOperation
type: function
namespace: microsoft.quantum.canon
summary: |-
  Given a function and an operation, returns a new operation whose
  input is transformed by the given function.
examples: |-
  The following call uses
  @"Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian" to transform
  an operation designed for
  @"Microsoft.Quantum.Arithmetic.BigEndian" inputs into an operation
  that accepts inputs of type
  @"Microsoft.Quantum.Arithmetic.LittleEndian":

  ```qsharp
  let leOp = TransformedOperation(LittleEndianAsBigEndian, ApplyXorInPlaceBE);
  ```
syntax: "function TransformedOperation (fn : ('U -> 'T), op : ('T => Unit)) : ('U => Unit)"
input:
  content: "(fn : ('U -> 'T), op : ('T => Unit))"
  types:
  - name: fn
    summary: |-
      A function that transforms the given input into a form expected by the
      operation.
    isFunction: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - uid: "'T"
        isLocal: true
  - name: op
    summary: The operation to be transformed.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
output:
  content: ('U => Unit)
  types:
  - summary: |-
      A new operation tbat calls `fn` with its input, then passes the
      resulting output to `op`.
    isOperation: true
    input:
      types:
      - uid: "'U"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
seeAlso:
- transformedoperationa
- transformedoperationc
- transformedoperationca
- applywithinputtransformation
- compose
...
