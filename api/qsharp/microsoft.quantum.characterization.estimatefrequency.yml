### YamlMime:QSharpType
uid: microsoft.quantum.characterization.estimatefrequency
name: EstimateFrequency
type: operation
namespace: Microsoft.Quantum.Characterization
summary: |-
  Given a preparation and measurement, estimates the frequency
  with which that measurement succeeds (returns `Zero`) by
  performing a given number of trials.
syntax: 'operation EstimateFrequency (preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int) : Double'
input:
  content: '(preparation : (Qubit[] => Unit), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int)'
  types:
  - name: preparation
    summary: |-
      An operation $P$ that prepares a given state $\rho$ on
      its input register.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: measurement
    summary: An operation $M$ representing the measurement of interest.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Result
  - name: nQubits
    summary: |-
      The number of qubits on which the preparation and measurement
      each act.
    isPrimitive: true
    uid: Int
  - name: nMeasurements
    summary: |-
      The number of times that the measurement should be performed
      in order to estimate the frequency of interest.
    isPrimitive: true
    uid: Int
output:
  content: Double
  types:
  - summary: |-
      An estimate $\hat{p}$ of the frequency with which
      $M(P(\ket{00 \cdots 0}\bra{00 \cdots 0}))$ returns `Zero`,
      obtained using the unbiased binomial estimator $\hat{p} =
      n\_{\uparrow} / n\_{\text{measurements}}$, where $n\_{\uparrow}$ is
      the number of `Zero` results observed.

      This is particularly important on target machines which respect
      physical limitations, such that probabilities cannot be measured.
    isPrimitive: true
    uid: Double
...
