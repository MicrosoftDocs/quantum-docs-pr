### YamlMime:QSharpType
uid: microsoft.quantum.characterization.estimatefrequencya
name: EstimateFrequencyA
type: operation
namespace: Microsoft.Quantum.Characterization
summary: |-
  Given a preparation that is adjointable and measurement, estimates the frequency
  with which that measurement succeeds (returns `Zero`) by
  performing a given number of trials.
remarks: |-
  For adjointable operations, certain assumptions can be made such like
  calling the operation will prepare the qubits to exactly the same state,
  which allow target machines to make some performance optimizations.
syntax: 'operation EstimateFrequencyA (preparation : (Qubit[] => Unit is Adj), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int) : Double'
input:
  content: '(preparation : (Qubit[] => Unit is Adj), measurement : (Qubit[] => Result), nQubits : Int, nMeasurements : Int)'
  types:
  - name: preparation
    summary: |-
      An adjointable operation $P$ that prepares a given state $\rho$ on
      its input register.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
  - name: measurement
    summary: An operation $M$ representing the measurement of interest.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Result
  - name: nQubits
    summary: |-
      The number of qubits on which the preparation and measurement
      each act.
    isPrimitive: true
    uid: Int
  - name: nMeasurements
    summary: |-
      The number of times that the measurement should be performed
      in order to estimate the frequency of interest.
    isPrimitive: true
    uid: Int
output:
  content: Double
  types:
  - summary: |-
      An estimate $\hat{p}$ of the frequency with which
      $M(P(\ket{00 \cdots 0}\bra{00 \cdots 0}))$ returns `Zero`,
      obtained using the unbiased binomial estimator $\hat{p} =
      n\_{\uparrow} / n\_{\text{measurements}}$, where $n\_{\uparrow}$ is
      the number of `Zero` results observed.
    isPrimitive: true
    uid: Double
...
