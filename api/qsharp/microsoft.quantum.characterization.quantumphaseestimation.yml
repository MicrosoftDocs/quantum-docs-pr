### YamlMime:QSharpType
uid: microsoft.quantum.characterization.quantumphaseestimation
name: QuantumPhaseEstimation
type: operation
namespace: Microsoft.Quantum.Characterization
summary: |-
  Performs the quantum phase estimation algorithm for a given oracle `U` and `targetState`,
  reading the phase into a big-endian quantum register.
syntax: 'operation QuantumPhaseEstimation (oracle : Microsoft.Quantum.Oracles.DiscreteOracle, targetState : Qubit[], controlRegister : Microsoft.Quantum.Arithmetic.BigEndian) : Unit'
input:
  content: '(oracle : Microsoft.Quantum.Oracles.DiscreteOracle, targetState : Qubit[], controlRegister : Microsoft.Quantum.Arithmetic.BigEndian)'
  types:
  - name: oracle
    summary: An operation implementing $U^m$ for given integer powers m.
    uid: microsoft.quantum.oracles.discreteoracle
  - name: targetState
    summary: |-
      A quantum register representing the state $\ket{\phi}$ acted on by $U$. If $\ket{\phi}$ is an
      eigenstate of $U$, $U\ket{\phi} = e^{i\phi} \ket{\phi}$ for $\phi \in [0, 2\pi)$ an unknown phase.
    isArray: true
    isPrimitive: true
    uid: Qubit
  - name: controlRegister
    summary: |-
      A big-endian representation integer register that can be used
      to control the provided oracle, and that will contain the a representation of $\phi$ following
      the application of this operation. The controlRegister is assumed to start in the initial
      state $\ket{00\cdots 0}$, where the length of the register indicates the desired precision.
    uid: microsoft.quantum.arithmetic.bigendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
