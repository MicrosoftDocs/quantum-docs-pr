### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.convert.pauliarrayasint
name: PauliArrayAsInt
type: function
namespace: microsoft.quantum.convert
summary: |-
  Encodes a multi-qubit Pauli operator represented as an array of
  single-qubit Pauli operators into an integer.
remarks: |-
  Each Pauli operator can be encoded using two bits:
  $$
  \begin{align}
  \boldone \mapsto 00, \quad X \mapsto 01, \quad Y \mapsto 11,
  \quad Z \mapsto 10.
  \end{align}
  $$

  Given an array of Pauli operators `[P0, ..., Pn]`, this function returns an
  integer with binary expansion formed by concatenating
  the mappings of each Pauli operator in big-endian order
  `bits(Pn) ... bits(P0)`.
syntax: 'function PauliArrayAsInt (paulis : Pauli[]) : Int'
input:
  content: '(paulis : Pauli[])'
  types:
  - name: paulis
    summary: An array of at most 31 single-qubit Pauli operators.
    isArray: true
    isPrimitive: true
    uid: Pauli
output:
  content: Int
  types:
  - summary: An integer uniquely identifying `paulis`, as described below.
    isPrimitive: true
    uid: Int
...
