### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.diagnostics.assertoperationsequalinplace
name: AssertOperationsEqualInPlace
type: operation
namespace: microsoft.quantum.diagnostics
summary: |-
  Given two operations, asserts that they act identically for all input states.

  This assertion is implemented by checking the action of the operations
  on all states of the form $V_0 \otimes ... \otimes V_{n-1}$, where
  $V_k$ is one of the states $\ket{0}$, $\ket{1}$, $\ket{+}$ and $\ket{i}$ (+1 eigenstate of Pauli Y operator).

  This assertion uses $n$ qubits and requires multiple calls of the operations being compared.
syntax: 'operation AssertOperationsEqualInPlace (nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj)) : Unit'
references: |-
  The basis of states $\ket{0}$, $\ket{1}$, $\ket{+}$ and $\ket{i}$ is the Chuang-Nielsen basis,
  described in [ *I. L. Chuang, M. A. Nielsen* ](https://arxiv.org/abs/quant-ph/9610001).
input:
  content: '(nQubits : Int, givenU : (Qubit[] => Unit), expectedU : (Qubit[] => Unit is Adj))'
  types:
  - name: nQubits
    summary: The number of qubits $n$ that the operations `givenU` and `expectedU` operate on.
    isPrimitive: true
    uid: Int
  - name: givenU
    summary: Operation on $n$ qubits to be checked.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
  - name: expectedU
    summary: Reference operation on $n$ qubits that `givenU` is to be compared against.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
seeAlso:
- assertoperationsequalreferenced
...
