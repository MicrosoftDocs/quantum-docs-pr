### YamlMime:QSharpType
uid: microsoft.quantum.errorcorrection.injectpi4yrotation
name: InjectPi4YRotation
type: operation
namespace: Microsoft.Quantum.ErrorCorrection
summary: |-
  Rotates a single qubit by π/4 about the Y-axis.

  Performs a π/4 rotation about `Y`.

  The rotation is performed by consuming a magic
  state; that is, a copy of the state
  $$
  \begin{align}
  \cos\frac{\pi}{8} \ket{0} + \sin \frac{\pi}{8} \ket{1}.
  \end{align}
  $$
remarks: |-
  The following are equivalent:

  ```qsharp
  Ry(PI() / 4.0, data);
  ```

  and

  ```qsharp
  using (magic = Qubit()) {
      Ry(PI() / 4.0, magic);
      InjectPi4YRotation(data, magic);
      Reset(magic);
  }
  ```

  This operation supports the `Adjoint` functor, in which
  case the same magic state is consumed, but the effect
  on the data qubit is a $-\pi/4$ $Y$-rotation.
syntax: 'operation InjectPi4YRotation (data : Qubit, magic : Qubit) : Unit'
input:
  content: '(data : Qubit, magic : Qubit)'
  types:
  - name: data
    summary: A qubit to be rotated about $Y$ by $\pi / 4$.
    isPrimitive: true
    uid: Qubit
  - name: magic
    summary: |-
      A qubit initially in the magic state. Following application
      of this operation, `magic` is returned to the $\ket{0}$ state.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
...
