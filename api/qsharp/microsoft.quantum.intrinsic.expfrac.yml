### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.intrinsic.expfrac
name: ExpFrac
type: operation
namespace: microsoft.quantum.intrinsic
summary: |-
  Applies the exponential of a multi-qubit Pauli operator
  with an argument given by a dyadic fraction.

  \begin{align}
  e^{i \pi k [P_0 \otimes P_1 \cdots P_{N-1}] / 2^n},
  \end{align}
  where $P_i$ is the $i$th element of `paulis`, and where
  $N = $`Length(paulis)`.
syntax: 'operation ExpFrac (paulis : Pauli[], numerator : Int, power : Int, qubits : Qubit[]) : Unit'
input:
  content: '(paulis : Pauli[], numerator : Int, power : Int, qubits : Qubit[])'
  types:
  - name: paulis
    summary: |-
      Array of single-qubit Pauli values indicating the tensor product
      factors on each qubit.
    isArray: true
    isPrimitive: true
    uid: Pauli
  - name: numerator
    summary: |-
      Numerator ($k$) in the dyadic fraction representation of the angle
      by which the qubit register is to be rotated.
    isPrimitive: true
    uid: Int
  - name: power
    summary: |-
      Power of two ($n$) specifying the denominator of the angle by which
      the qubit register is to be rotated.
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: Register to apply the given rotation to.
    isArray: true
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
