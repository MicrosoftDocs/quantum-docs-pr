### YamlMime:QSharpType
uid: microsoft.quantum.intrinsic.r1frac
name: R1Frac
type: operation
namespace: Microsoft.Quantum.Intrinsic
summary: |-
  Applies a rotation about the $\ket{1}$ state by an angle specified
  as a dyadic fraction.

  \begin{align}
  R_1(n, k) \mathrel{:=}
  \operatorname{diag}(1, e^{i \pi k / 2^n}).
  \end{align}

  > [!WARNING]
  > This operation uses the **opposite** sign convention from
  > @"microsoft.quantum.intrinsic.r", and does not include the
  > factor of $1/ 2$ included by @"microsoft.quantum.intrinsic.r1".
remarks: |-
  Equivalent to:

  ```qsharp
  RFrac(PauliZ, -numerator, denominator + 1, qubit);
  RFrac(PauliI, numerator, denominator + 1, qubit);
  ```
syntax: 'operation R1Frac (numerator : Int, power : Int, qubit : Qubit) : Unit'
input:
  content: '(numerator : Int, power : Int, qubit : Qubit)'
  types:
  - name: numerator
    summary: |-
      Numerator in the dyadic fraction representation of the angle
      by which the qubit is to be rotated.
    isPrimitive: true
    uid: Int
  - name: power
    summary: |-
      Power of two specifying the denominator of the angle by which
      the qubit is to be rotated.
    isPrimitive: true
    uid: Int
  - name: qubit
    summary: Qubit to which the gate should be applied.
    isPrimitive: true
    uid: Qubit
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
