### YamlMime:QSharpNamespace
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.
functions:
- {summary: Logs a message., uid: Microsoft.Quantum.Intrinsic.Message}
name: Microsoft.Quantum.Intrinsic
newtypes: []
operations:
- {summary: "> [!WARNING]\n> Assert has been deprecated. Please use <xref:Microsoft.Quantum.Diagnostics.AssertMeasurement>\
    \ instead.\n\n", uid: Microsoft.Quantum.Intrinsic.Assert}
- {summary: "> [!WARNING]\n> AssertProb has been deprecated. Please use <xref:Microsoft.Quantum.Diagnostics.AssertMeasurementProbability>\
    \ instead.\n\n", uid: Microsoft.Quantum.Intrinsic.AssertProb}
- {summary: "Applies the doubly controlled\u2013NOT (CCNOT) gate to three qubits.",
  uid: Microsoft.Quantum.Intrinsic.CCNOT}
- {summary: "Applies the controlled-NOT (CNOT) gate to a pair of qubits.\n\\begin{align}\
    \ \\operatorname{CNOT} \\mathrel{:=} \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\\\\\ 0\
    \ & 1 & 0 & 0 \\\\\\\\ 0 & 0 & 0 & 1 \\\\\\\\ 0 & 0 & 1 & 0 \\end{bmatrix}, \\\
    end{align}\nwhere rows and columns are ordered as in the quantum concepts guide.",
  uid: Microsoft.Quantum.Intrinsic.CNOT}
- {summary: "Applies the exponential of a multi-qubit Pauli operator.\n\\begin{align}\
    \ e^{i \\theta [P_0 \\otimes P_1 \\cdots P_{N-1}]}, \\end{align} where $P_i$ is\
    \ the $i$th element of `paulis`, and where $N = $`Length(paulis)`.", uid: Microsoft.Quantum.Intrinsic.Exp}
- {summary: "Applies the exponential of a multi-qubit Pauli operator with an argument\
    \ given by a dyadic fraction.\n\\begin{align} e^{i \\pi k [P_0 \\otimes P_1 \\\
    cdots P_{N-1}] / 2^n}, \\end{align} where $P_i$ is the $i$th element of `paulis`,\
    \ and where $N = $`Length(paulis)`.", uid: Microsoft.Quantum.Intrinsic.ExpFrac}
- {summary: "Applies the Hadamard transformation to a single qubit.\n\\begin{align}\
    \ H \\mathrel{:=} \\frac{1}{\\sqrt{2}} \\begin{bmatrix} 1 & 1 \\\\\\\\ 1 & -1\
    \ \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.H}
- {summary: Performs the identity operation (no-op) on a single qubit., uid: Microsoft.Quantum.Intrinsic.I}
- {summary: "Performs a measurement of a single qubit in the Pauli $Z$ basis.\nThe\
    \ output result is given by the distribution \\begin{align} \\Pr(\\texttt{Zero}\
    \ | \\ket{\\psi}) = \\braket{\\psi | 0} \\braket{0 | \\psi}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.M}
- {summary: "Performs a joint measurement of one or more qubits in the specified Pauli\
    \ bases.\nThe output result is given by the distribution: \\begin{align} \\Pr(\\\
    texttt{Zero} | \\ket{\\psi}) = \\frac12 \\braket{ \\psi \\mid| \\left( \\boldone\
    \ + P_0 \\otimes P_1 \\otimes \\cdots \\otimes P_{N-1} \\right) \\mid| \\psi },\
    \ \\end{align} where $P_i$ is the $i$th element of `bases`, and where $N = \\\
    texttt{Length}(\\texttt{bases})$. That is, measurement returns a `Result` $d$\
    \ such that the eigenvalue of the observed measurement effect is $(-1)^d$.", uid: Microsoft.Quantum.Intrinsic.Measure}
- {summary: "Applies a rotation about the given Pauli axis.\n\\begin{align} R_{\\\
    mu}(\\theta) \\mathrel{:=} e^{-i \\theta \\sigma_{\\mu} / 2}, \\end{align} where\
    \ $\\mu \\in \\{I, X, Y, Z\\}$.", uid: Microsoft.Quantum.Intrinsic.R}
- {summary: "Applies a rotation about the $\\ket{1}$ state by a given angle.\n\\begin{align}\
    \ R_1(\\theta) \\mathrel{:=} \\operatorname{diag}(1, e^{i\\theta}). \\end{align}",
  uid: Microsoft.Quantum.Intrinsic.R1}
- {summary: "Applies a rotation about the $\\ket{1}$ state by an angle specified as\
    \ a dyadic fraction.\n\\begin{align} R_1(n, k) \\mathrel{:=} \\operatorname{diag}(1,\
    \ e^{i \\pi k / 2^n}). \\end{align}\n> [!WARNING] > This operation uses the **opposite**\
    \ sign convention from > @\"microsoft.quantum.intrinsic.r\", and does not include\
    \ the > factor of $1/ 2$ included by @\"microsoft.quantum.intrinsic.r1\".", uid: Microsoft.Quantum.Intrinsic.R1Frac}
- {summary: "Applies a rotation about the given Pauli axis by an angle specified as\
    \ a dyadic fraction.\n\\begin{align} R_{\\mu}(n, k) \\mathrel{:=} e^{i \\pi n\
    \ \\sigma_{\\mu} / 2^k}, \\end{align} where $\\mu \\in \\{I, X, Y, Z\\}$.\n> [!WARNING]\
    \ > This operation uses the **opposite** sign convention from > @\"microsoft.quantum.intrinsic.r\"\
    .", uid: Microsoft.Quantum.Intrinsic.RFrac}
- {summary: "> [!WARNING]\n> Random has been deprecated. Please use <xref:Microsoft.Quantum.Random.DrawCategorical>\
    \ instead.\n\n", uid: Microsoft.Quantum.Intrinsic.Random}
- {summary: "Given a single qubit, measures it and ensures it is in the |0\u27E9 state\
    \ such that it can be safely released.", uid: Microsoft.Quantum.Intrinsic.Reset}
- {summary: "Given an array of qubits, measure them and ensure they are in the |0\u27E9\
    \ state such that they can be safely released.", uid: Microsoft.Quantum.Intrinsic.ResetAll}
- {summary: "Applies a rotation about the $x$-axis by a given angle.\n\\begin{align}\
    \ R_x(\\theta) \\mathrel{:=} e^{-i \\theta \\sigma_x / 2} = \\begin{bmatrix} \\\
    cos \\frac{\\theta}{2} & -i\\sin \\frac{\\theta}{2}  \\\\\\\\ -i\\sin \\frac{\\\
    theta}{2} & \\cos \\frac{\\theta}{2} \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.Rx}
- {summary: "Applies a rotation about the $y$-axis by a given angle.\n\\begin{align}\
    \ R_y(\\theta) \\mathrel{:=} e^{-i \\theta \\sigma_y / 2} = \\begin{bmatrix} \\\
    cos \\frac{\\theta}{2} & -\\sin \\frac{\\theta}{2}  \\\\\\\\ \\sin \\frac{\\theta}{2}\
    \ & \\cos \\frac{\\theta}{2} \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.Ry}
- {summary: "Applies a rotation about the $z$-axis by a given angle.\n\\begin{align}\
    \ R_z(\\theta) \\mathrel{:=} e^{-i \\theta \\sigma_z / 2} = \\begin{bmatrix} e^{-i\
    \ \\theta / 2} & 0 \\\\\\\\ 0 & e^{i \\theta / 2} \\end{bmatrix}. \\end{align}",
  uid: Microsoft.Quantum.Intrinsic.Rz}
- {summary: Applies the S gate to a single qubit., uid: Microsoft.Quantum.Intrinsic.S}
- {summary: "Applies the SWAP gate to a pair of qubits.\n\\begin{align} \\operatorname{SWAP}\
    \ \\mathrel{:=} \\begin{bmatrix} 1 & 0 & 0 & 0 \\\\\\\\ 0 & 0 & 1 & 0 \\\\\\\\\
    \ 0 & 1 & 0 & 0 \\\\\\\\ 0 & 0 & 0 & 1 \\end{bmatrix}, \\end{align}\nwhere rows\
    \ and columns are ordered as in the quantum concepts guide.", uid: Microsoft.Quantum.Intrinsic.SWAP}
- {summary: Applies the T gate to a single qubit., uid: Microsoft.Quantum.Intrinsic.T}
- {summary: "Applies the Pauli $X$ gate.\n\\begin{align} \\sigma_x \\mathrel{:=} \\\
    begin{bmatrix} 0 & 1 \\\\\\\\ 1 & 0 \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.X}
- {summary: "Applies the Pauli $Y$ gate.\n\\begin{align} \\sigma_y \\mathrel{:=} \\\
    begin{bmatrix} 0 & -i \\\\\\\\ i & 0 \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.Y}
- {summary: "Applies the Pauli $Z$ gate.\n\\begin{align} \\sigma_z \\mathrel{:=} \\\
    begin{bmatrix} 1 & 0 \\\\\\\\ 0 & -1 \\end{bmatrix}. \\end{align}", uid: Microsoft.Quantum.Intrinsic.Z}
summary: ''
uid: Microsoft.Quantum.Intrinsic
