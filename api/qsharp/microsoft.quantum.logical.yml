### YamlMime:QSharpNamespace
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.
functions:
- {summary: Returns the Boolean conjunction of two values., uid: Microsoft.Quantum.Logical.And}
- {summary: 'Returns one of two values, depending on the value of a Boolean condition.',
  uid: Microsoft.Quantum.Logical.Conditioned}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualB}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualC}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualCP}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualD}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualI}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualL}
- {summary: Returns true if and only if two inputs are equal., uid: Microsoft.Quantum.Logical.EqualR}
- {summary: Returns true if and only if a number is greater than another number.,
  uid: Microsoft.Quantum.Logical.GreaterThanD}
- {summary: Returns true if and only if a number is greater than another number.,
  uid: Microsoft.Quantum.Logical.GreaterThanI}
- {summary: Returns true if and only if a number is greater than another number.,
  uid: Microsoft.Quantum.Logical.GreaterThanL}
- {summary: Returns true if and only if a number is greater than or equal to another
    number., uid: Microsoft.Quantum.Logical.GreaterThanOrEqualD}
- {summary: Returns true if and only if a number is greater than or equal to another
    number., uid: Microsoft.Quantum.Logical.GreaterThanOrEqualI}
- {summary: Returns true if and only if a number is greater than or equal to another
    number., uid: Microsoft.Quantum.Logical.GreaterThanOrEqualL}
- {summary: Returns true if and only if a number is less than another number., uid: Microsoft.Quantum.Logical.LessThanD}
- {summary: Returns true if and only if a number is less than another number., uid: Microsoft.Quantum.Logical.LessThanI}
- {summary: Returns true if and only if a number is less than another number., uid: Microsoft.Quantum.Logical.LessThanL}
- {summary: Used to implement `LexographicComparison`., uid: Microsoft.Quantum.Logical.LessThanLexographic}
- {summary: Returns true if and only if a number is less than or equal to another
    number., uid: Microsoft.Quantum.Logical.LessThanOrEqualD}
- {summary: Returns true if and only if a number is less than or equal to another
    number., uid: Microsoft.Quantum.Logical.LessThanOrEqualI}
- {summary: Returns true if and only if a number is less than or equal to another
    number., uid: Microsoft.Quantum.Logical.LessThanOrEqualL}
- {summary: 'Given a comparison function, returns a new function that lexographically
    compares two arrays.', uid: Microsoft.Quantum.Logical.LexographicComparison}
- {summary: 'Returns true if and only if two inputs are nearly equal (that is, within
    a tolerance of 1e-12).', uid: Microsoft.Quantum.Logical.NearlyEqualD}
- {summary: Returns the Boolean negation of a value., uid: Microsoft.Quantum.Logical.Not}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualB}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualC}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualCP}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualD}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualI}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualL}
- {summary: Returns true if and only if two inputs are not equal., uid: Microsoft.Quantum.Logical.NotEqualR}
- {summary: 'Returns true if and only if two inputs are not nearly equal (that is,
    are not within a tolerance of 1e-12).', uid: Microsoft.Quantum.Logical.NotNearlyEqualD}
- {summary: Returns the Boolean disjunction of two values., uid: Microsoft.Quantum.Logical.Or}
- {summary: Returns the Boolean exclusive disjunction of two values., uid: Microsoft.Quantum.Logical.Xor}
name: Microsoft.Quantum.Logical
newtypes: []
operations: []
summary: Contains functions for working with logical expressions and Boolean logic.
uid: Microsoft.Quantum.Logical
