### YamlMime:QSharpType
uid: microsoft.quantum.machinelearning.combinedstructure
name: CombinedStructure
type: function
namespace: Microsoft.Quantum.MachineLearning
summary: |-
  Given one or more layers of controlled rotations, returns a single
  layer with model parameter index shifted such that distinct layers
  are parameterized by distinct model parameters.
examples: |-
  The following are equivalent:

  ```Q#
  let structure = CombinedStructure([
      LocalRotationLayer(2, PauliY),
      CyclicEntanglingLayer(3, PauliX, 2)
  ]);
  let structure = [
      ControlledRotation((0, new Int[0]), PauliY, 0),
      ControlledRotation((1, new Int[0]), PauliY, 1),
      ControlledRotation((0, [2]), PauliX, 2),
      ControlledRotation((1, [0]), PauliX, 3),
      ControlledRotation((2, [1]), PauliX, 4)
  ];
  ```
syntax: 'function CombinedStructure (layers : Microsoft.Quantum.MachineLearning.ControlledRotation[][]) : Microsoft.Quantum.MachineLearning.ControlledRotation[]'
input:
  content: '(layers : Microsoft.Quantum.MachineLearning.ControlledRotation[][])'
  types:
  - name: layers
    summary: The layers to be combined.
    isArray: true
    types:
    - isArray: true
      uid: microsoft.quantum.machinelearning.controlledrotation
output:
  content: Microsoft.Quantum.MachineLearning.ControlledRotation[]
  types:
  - summary: |-
      A single layer of controlled rotations, representing the concatenation
      of all other layers.
    isArray: true
    uid: microsoft.quantum.machinelearning.controlledrotation
...
