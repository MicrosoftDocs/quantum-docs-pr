### YamlMime:QSharpType
uid: microsoft.quantum.math.modulusi
name: ModulusI
type: function
namespace: Microsoft.Quantum.Math
summary: Computes the canonical residue of `value` modulo `modulus`.
remarks: |-
  This function behaves different to how the operator `%` behaves in C# and Q# as in the result
  is always a positive integer between 0 and `modulus - 1`, even if value is negative.
syntax: 'function ModulusI (value : Int, modulus : Int) : Int'
input:
  content: '(value : Int, modulus : Int)'
  types:
  - name: value
    summary: The value of which residue is computed
    isPrimitive: true
    uid: Int
  - name: modulus
    summary: The modulus by which residues are take, must be positive
    isPrimitive: true
    uid: Int
output:
  content: Int
  types:
  - summary: Integer $r$ between 0 and `modulus - 1` such that `value - r` is divisible by modulus
    isPrimitive: true
    uid: Int
...
