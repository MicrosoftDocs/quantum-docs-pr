### YamlMime:QSharpType
uid: microsoft.quantum.preparation.approximatelypreparearbitrarystate
name: ApproximatelyPrepareArbitraryState
type: operation
namespace: Microsoft.Quantum.Preparation
summary: |-
  Given a set of coefficients and a little-endian encoded quantum register,
  prepares an state on that register described by the given coefficients,
  up to a given approximation tolerance.

  This operation prepares an arbitrary quantum
  state $\ket{\psi}$ with complex coefficients $r_j e^{i t_j}$ from
  the $n$-qubit computational basis state $\ket{0 \cdots 0}$.
  In particular, the action of this operation can be simulated by the
  a unitary transformation $U$ which acts on the all-zeros state as

  $$
  \begin{align}
  U\ket{0...0}
  & = \ket{\psi} \\\\
  & = \frac{
  \sum_{j=0}^{2^n-1} r_j e^{i t_j} \ket{j}
  }{
  \sqrt{\sum_{j=0}^{2^n-1} |r_j|^2}
  }.
  \end{align}
  $$
remarks: |-
  Negative input coefficients $r_j < 0$ will be treated as though
  positive with value $|r_j|$. `coefficients` will be padded with
  elements $(r_j, t_j) = (0.0, 0.0)$ if fewer than $2^n$ are
  specified.
syntax: 'operation ApproximatelyPrepareArbitraryState (tolerance : Double, coefficients : Microsoft.Quantum.Math.ComplexPolar[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: |-
  - Synthesis of Quantum Logic Circuits
    Vivek V. Shende, Stephen S. Bullock, Igor L. Markov
    https://arxiv.org/abs/quant-ph/0406176
input:
  content: '(tolerance : Double, coefficients : Microsoft.Quantum.Math.ComplexPolar[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: tolerance
    summary: The approximation tolerance to be used when preparing the given state.
    isPrimitive: true
    uid: Double
  - name: coefficients
    summary: |-
      Array of up to $2^n$ complex coefficients represented by their
      absolute value and phase $(r_j, t_j)$. The $j$th coefficient
      indexes the number state $\ket{j}$ encoded in little-endian format.
    isArray: true
    uid: microsoft.quantum.math.complexpolar
  - name: qubits
    summary: |-
      Qubit register encoding number states in little-endian format. This is
      expected to be initialized in the computational basis state
      $\ket{0...0}$.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.preparation.approximatelypreparearbitrarystate
...
