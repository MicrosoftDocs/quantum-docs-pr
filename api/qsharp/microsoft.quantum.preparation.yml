### YamlMime:QSharpNamespace
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.
functions:
- {summary: Implementation step of arbitrary state preparation procedure., uid: Microsoft.Quantum.Preparation.ApproximatelyUnprepareArbitraryStatePlan}
- {summary: "Computes the Bloch sphere coordinates for a single-qubit state.\nGiven\
    \ two complex numbers $a0, a1$ that represent the qubit state, computes coordinates\
    \ on the Bloch sphere such that $a0 \\ket{0} + a1 \\ket{1} = r e^{it}(e^{-i \\\
    phi /2}\\cos{(\\theta/2)}\\ket{0}+e^{i \\phi /2}\\sin{(\\theta/2)}\\ket{1})$.",
  uid: Microsoft.Quantum.Preparation.BlochSphereCoordinates}
- {summary: "Returns an operation that prepares a a purification of a given mixed\
    \ state.\rA \"purified mixed state\" refers to states of the form |\u03C8\u27E9\
    \ = \u03A3\u1D62 \u221A\U0001D45D\u1D62 |\U0001D456\u27E9 |garbage\u1D62\u27E9\
    \ specified by a vector of\rcoefficients {\U0001D45D\u1D62}. States of this form\
    \ can be reduced to mixed states \u03C1 \u2254 \U0001D45D\u1D62 |\U0001D456\u27E9\
    \u27E8\U0001D456| by tracing over the \"garbage\"\rregister (that is, a mixed\
    \ state that is diagonal in the computational basis).\r\rSee https://arxiv.org/pdf/1805.03662.pdf?page=15\
    \ for further discussion.", uid: Microsoft.Quantum.Preparation.PurifiedMixedState}
- {summary: Returns the total number of qubits that must be allocated in order to
    apply the operation returned by @"microsoft.quantum.preparation.purifiedmixedstate".,
  uid: Microsoft.Quantum.Preparation.PurifiedMixedStateRequirements}
- {summary: "Returns an operation that prepares a a purification of a given mixed\r\
    state, entangled with a register representing a given collection of data.\rA \"\
    purified mixed state with data\" refers to a state of the form \u03A3\u1D62 \u221A\
    \U0001D45D\u1D62 |\U0001D456\u27E9 |\U0001D465\u1D62\u27E9 |garbage\u1D62\u27E9\
    ,\rwhere each \U0001D465\u1D62 is a bitstring encoding additional data associated\
    \ with the register |\U0001D456\u27E9.\r\rSee https://arxiv.org/pdf/1805.03662.pdf?page=15\
    \ for further discussion.", uid: Microsoft.Quantum.Preparation.PurifiedMixedStateWithData}
- {summary: "> [!WARNING]\n> QuantumROM has been deprecated. Please use <xref:Microsoft.Quantum.Preparation.PurifiedMixedState>\
    \ instead.\n\nUses the Quantum ROM technique to represent a given density matrix.\n\
    Given a list of $N$ coefficients $\\alpha_j$, this returns a unitary $U$ that\
    \ uses the Quantum-ROM technique to prepare an approximation  $\\tilde\\rho\\\
    sum_{j=0}^{N-1}p_j\\ket{j}\\bra{j}$ of the purification of the density matrix\
    \ $\\rho=\\sum_{j=0}^{N-1}\\frac{|alpha_j|}{\\sum_k |\\alpha_k|}\\ket{j}\\bra{j}$.\
    \ In this approximation, the error $\\epsilon$ is such that $|p_j-\\frac{|alpha_j|}{\\\
    sum_k |\\alpha_k|}|\\le \\epsilon / N$ and $\\|\\tilde\\rho - \\rho\\| \\le \\\
    epsilon$. In other words, $$ \\begin{align} U\\ket{0}^{\\lceil\\log_2 N\\rceil}\\\
    ket{0}^{m}=\\sum_{j=0}^{N-1}\\sqrt{p_j} \\ket{j}\\ket{\\text{garbage}_j}. \\end{align}\
    \ $$", uid: Microsoft.Quantum.Preparation.QuantumROM}
- {summary: '', uid: Microsoft.Quantum.Preparation.QuantumROMBitStringWriterByIndex}
- {summary: "> [!WARNING]\n> QuantumROMQubitCount has been deprecated. Please use\
    \ <xref:Microsoft.Quantum.Preparation.PurifiedMixedStateRequirements> instead.\n\
    \nReturns the total number of qubits that must be allocated to the operation returned\
    \ by `QuantumROM`.", uid: Microsoft.Quantum.Preparation.QuantumROMQubitCount}
- {summary: '', uid: Microsoft.Quantum.Preparation.RoundedDiscretizationCoefficients}
- {summary: '', uid: Microsoft.Quantum.Preparation.SplitSign}
- {summary: "> [!WARNING]\n> StatePreparationComplexCoefficients has been deprecated.\
    \ Please use <xref:Microsoft.Quantum.Preparation.PrepareArbitraryStateCP> instead.\n\
    \nReturns an operation that prepares a specific quantum state.\nThe returned operation\
    \ $U$ prepares an arbitrary quantum state $\\ket{\\psi}$ with complex coefficients\
    \ $r_j e^{i t_j}$ from the $n$-qubit computational basis state $\\ket{0...0}$.\n\
    The action of U on a newly-allocated register is given by $$ \\begin{align} U\\\
    ket{0...0}=\\ket{\\psi}=\\frac{\\sum_{j=0}^{2^n-1}r_j e^{i t_j}\\ket{j}}{\\sqrt{\\\
    sum_{j=0}^{2^n-1}|r_j|^2}}. \\end{align} $$", uid: Microsoft.Quantum.Preparation.StatePreparationComplexCoefficients}
- {summary: "> [!WARNING]\n> StatePreparationPositiveCoefficients has been deprecated.\
    \ Please use <xref:Microsoft.Quantum.Preparation.PrepareArbitraryStateD> instead.\n\
    \nReturns an operation that prepares the given quantum state.\nThe returned operation\
    \ $U$ prepares an arbitrary quantum state $\\ket{\\psi}$ with positive coefficients\
    \ $\\alpha_j\\ge 0$ from the $n$-qubit computational basis state $\\ket{0...0}$.\n\
    The action of U on a newly-allocated register is given by $$ \\begin{align} U\
    \ \\ket{0\\cdots 0} = \\ket{\\psi} = \\frac{\\sum_{j=0}^{2^n-1}\\alpha_j \\ket{j}}{\\\
    sqrt{\\sum_{j=0}^{2^n-1}|\\alpha_j|^2}}. \\end{align} $$", uid: Microsoft.Quantum.Preparation.StatePreparationPositiveCoefficients}
- {summary: Implementation step of arbitrary state preparation procedure., uid: Microsoft.Quantum.Preparation.StatePreparationSBMComputeCoefficients}
- {summary: '', uid: Microsoft.Quantum.Preparation._CompileApproximateArbitraryStatePreparation}
- {summary: '', uid: Microsoft.Quantum.Preparation._QuantumROMDiscretization}
name: Microsoft.Quantum.Preparation
newtypes:
- {summary: Represents a particular mixed state that can be prepared on an index and
    a garbage register., uid: Microsoft.Quantum.Preparation.MixedStatePreparation}
- {summary: Represents the number of qubits required in order to prepare a given mixed
    state., uid: Microsoft.Quantum.Preparation.MixedStatePreparationRequirements}
operations:
- {summary: '', uid: Microsoft.Quantum.Preparation.ApplyGlobalRotationStep}
- {summary: '', uid: Microsoft.Quantum.Preparation.ApplyMultiplexStep}
- {summary: 'Applies an operation to the underlying qubits making up a little-endian
    register. This operation is marked as internal, as a little-endian register is
    intended to be "opaque," such that this is an implementation detail only.', uid: Microsoft.Quantum.Preparation.ApplyToLittleEndian}
- {summary: "> [!WARNING]\n> ApproximatelyPrepareArbitraryState has been deprecated.\
    \ Please use <xref:Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryStateCP>\
    \ instead.\n\nGiven a set of coefficients and a little-endian encoded quantum\
    \ register, prepares an state on that register described by the given coefficients,\
    \ up to a given approximation tolerance.", uid: Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryState}
- {summary: 'Given a set of coefficients and a little-endian encoded quantum register,
    prepares an state on that register described by the given coefficients, up to
    a given approximation tolerance.', uid: Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryStateCP}
- {summary: 'Given a set of coefficients and a little-endian encoded quantum register,
    prepares an state on that register described by the given coefficients, up to
    a given approximation tolerance.', uid: Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryStateD}
- {summary: '', uid: Microsoft.Quantum.Preparation.IgnoreDataRegister}
- {summary: "> [!WARNING]\n> PrepareArbitraryState has been deprecated. Please use\
    \ <xref:Microsoft.Quantum.Preparation.PrepareArbitraryStateCP> instead.\n\nGiven\
    \ a set of coefficients and a little-endian encoded quantum register, prepares\
    \ an state on that register described by the given coefficients.", uid: Microsoft.Quantum.Preparation.PrepareArbitraryState}
- {summary: 'Given a set of coefficients and a little-endian encoded quantum register,
    prepares an state on that register described by the given coefficients.', uid: Microsoft.Quantum.Preparation.PrepareArbitraryStateCP}
- {summary: 'Given a set of coefficients and a little-endian encoded quantum register,
    prepares an state on that register described by the given coefficients.', uid: Microsoft.Quantum.Preparation.PrepareArbitraryStateD}
- {summary: "Prepares the Choi\u2013Jamio\u0142kowski state for a given operation\
    \ onto given reference and target registers.", uid: Microsoft.Quantum.Preparation.PrepareChoiState}
- {summary: "Prepares the Choi\u2013Jamio\u0142kowski state for a given operation\
    \ with an adjoint variant onto given reference and target registers.", uid: Microsoft.Quantum.Preparation.PrepareChoiStateA}
- {summary: "Prepares the Choi\u2013Jamio\u0142kowski state for a given operation\
    \ with a controlled variant onto given reference and target registers.", uid: Microsoft.Quantum.Preparation.PrepareChoiStateC}
- {summary: "Prepares the Choi\u2013Jamio\u0142kowski state for a given operation\
    \ with both controlled and adjoint variants onto given reference and target registers.",
  uid: Microsoft.Quantum.Preparation.PrepareChoiStateCA}
- {summary: "Pairwise entangles two qubit registers.\nThat is, given two registers,\
    \ prepares the maximally entangled state $\\frac{1}{\\sqrt{2}} \\left(\\ket{00}\
    \ + \\ket{11} \\right)$ between each pair of qubits on the respective registers,\
    \ assuming that each register starts in the $\\ket{0\\cdots 0}$ state.", uid: Microsoft.Quantum.Preparation.PrepareEntangledState}
- {summary: "Given a register, prepares that register in the maximally mixed state.\n\
    The register is prepared in the $\\boldone / 2^N$ state by applying the complete\
    \ depolarizing channel to each qubit, where $N$ is the length of the register.",
  uid: Microsoft.Quantum.Preparation.PrepareIdentity}
- {summary: 'Prepares a qubit in the positive eigenstate of a given Pauli operator.
    If the identity operator is given, then the qubit is prepared in the maximally
    mixed state.', uid: Microsoft.Quantum.Preparation.PreparePauliEigenstate}
- {summary: '', uid: Microsoft.Quantum.Preparation.PrepareQuantumROMState}
- {summary: "> [!WARNING]\n> PrepareQubit has been deprecated. Please use <xref:Microsoft.Quantum.Preparation.PreparePauliEigenstate>\
    \ instead.\n\nPrepares a qubit in the +1 (`Zero`) eigenstate of the given Pauli\
    \ operator. If the identity operator is given, then the qubit is prepared in the\
    \ maximally mixed state.\nIf the qubit was initially in the $\\ket{0}$ state,\
    \ this operation prepares the qubit in the $+1$ eigenstate of a given Pauli operator,\
    \ or, for `PauliI`, in the maximally mixed state instead (see <xref:microsoft.quantum.preparation.preparesinglequbitidentity>).\n\
    If the qubit was in a state other than $\\ket{0}$, this operation applies the\
    \ following gates: $H$ for `PauliX`, $HS$ for `PauliY`, $I$ for `PauliZ` and <xref:microsoft.quantum.preparation.preparesinglequbitidentity>\
    \ for `PauliI`.", uid: Microsoft.Quantum.Preparation.PrepareQubit}
- {summary: "Prepares a qubit in the maximally mixed state.\nIt prepares the given\
    \ qubit in the $\\boldone / 2$ state by applying the depolarizing channel $$ \\\
    begin{align} \\Omega(\\rho) \\mathrel{:=} \\frac{1}{4} \\sum_{\\mu \\in \\{0,\
    \ 1, 2, 3\\}} \\sigma\\_{\\mu} \\rho \\sigma\\_{\\mu}^{\\dagger}, \\end{align}\
    \ $$ where $\\sigma\\_i$ is the $i$th Pauli operator, and where $\\rho$ is a density\
    \ operator representing a mixed state.", uid: Microsoft.Quantum.Preparation.PrepareSingleQubitIdentity}
- {summary: "Creates a uniform superposition over states that encode 0 through `nIndices\
    \ - 1`.\nThat is, this unitary $U$ creates a uniform superposition over all number\
    \ states $0$ to $M-1$, given an input state $\\ket{0\\cdots 0}$. In other words,\
    \ $$ \\begin{align} U\\ket{0}=\\frac{1}{\\sqrt{M}}\\sum_{j=0}^{M-1}\\ket{j}. \\\
    end{align} $$.", uid: Microsoft.Quantum.Preparation.PrepareUniformSuperposition}
- {summary: Implementation step of <xref:microsoft.quantum.canon.prepareuniformsuperposition>,
  uid: Microsoft.Quantum.Preparation.PrepareUniformSuperpositionOracle}
- {summary: '', uid: Microsoft.Quantum.Preparation.WriteQuantumROMBitString}
- {summary: 'Given a set of coefficients and a little-endian encoded quantum register
    of unentangled qubits, all of which are in zero state, prepares a state on that
    register described by the given coefficients. Uses state emulation if supported
    by the target.', uid: Microsoft.Quantum.Preparation._PrepareAmplitudesFromZeroState}
summary: This namespace contains functions and operations for preparing qubits into
  arbitrary initial states.
uid: Microsoft.Quantum.Preparation
