### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.simulation.blockencodingbylcu
name: BlockEncodingByLCU
type: function
namespace: microsoft.quantum.simulation
summary: |-
  Encodes an operator of interest into a `BlockEncoding`.

  This constructs a `BlockEncoding` unitary $U=P\cdot V\cdot P^\dagger$ that encodes some
  operator $H=\sum_{j}|\alpha_j|U_j$ of interest that is a linear combination of
  unitaries. Typically, $P$ is a state preparation unitary such that
  $P\ket{0}\_a=\sum_j\sqrt{\alpha_j/\|\vec\alpha\|\_2}\ket{j}\_a$,
  and $V=\sum_{j}\ket{j}\bra{j}\_a\otimes U_j$.
remarks: |-
  This `BlockEncoding` implementation gives it the properties of a
  `BlockEncodingReflection`.
syntax: "function BlockEncodingByLCU (statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl)) : (('T, 'S) => Unit is Adj + Ctl)"
input:
  content: "(statePreparation : ('T => Unit is Adj + Ctl), selector : (('T, 'S) => Unit is Adj + Ctl))"
  types:
  - name: statePreparation
    summary: A unitary $P$ that prepares some target state.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
  - name: selector
    summary: A unitary $V$ that encodes the component unitaries of $H$.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
output:
  content: (('T, 'S) => Unit is Adj + Ctl)
  types:
  - summary: |-
      A unitary $U$ acting jointly on registers `a` and `s` that block-
      encodes $H$, and satisfies $U^\dagger = U$.
    isOperation: true
    input:
      types:
      - uid: "'T"
        isLocal: true
      - uid: "'S"
        isLocal: true
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
...
