### YamlMime:QSharpNamespace
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.
functions: []
name: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions
newtypes: []
operations:
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionally}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsic}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsic}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseR}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOne}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZero}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.Delay}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayC}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayCA}
- {summary: '', uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.NoOp}
summary: ''
uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions
