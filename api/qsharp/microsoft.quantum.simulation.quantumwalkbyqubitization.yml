### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.simulation.quantumwalkbyqubitization
name: QuantumWalkByQubitization
type: function
namespace: microsoft.quantum.simulation
summary: |-
  Converts a block-encoding reflection into a quantum walk.

  Given a `BlockEncodingReflection` represented by a unitary $U$
  that encodes some operator $H$ of interest, converts it into a quantum
  walk $W$ containing the spectrum of $\pm e^{\pm i\sin^{-1}(H)}$.
syntax: 'function QuantumWalkByQubitization (blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection) : ((Qubit[], Qubit[]) => Unit is Adj + Ctl)'
references: |-
  - Hamiltonian Simulation by Qubitization
    Guang Hao Low, Isaac L. Chuang
    https://arxiv.org/abs/1610.06546
input:
  content: '(blockEncoding : Microsoft.Quantum.Simulation.BlockEncodingReflection)'
  types:
  - name: blockEncoding
    uid: microsoft.quantum.simulation.blockencodingreflection
output:
  content: ((Qubit[], Qubit[]) => Unit is Adj + Ctl)
  types:
  - summary: |-
      A quantum walk $W$ acting jointly on registers `a` and `s` that block-
      encodes $H$, and contains the spectrum of $\pm e^{\pm i\sin^{-1}(H)}$.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
seeAlso:
- microsoft.quantum.canon.blockencoding
- microsoft.quantum.canon.blockencodingreflection
...
