### YamlMime:QSharpType
uid: microsoft.quantum.simulation.trotterstep
name: TrotterStep
type: function
namespace: Microsoft.Quantum.Simulation
summary: |-
  Implements a single time-step of time-evolution by the system
  described in an `EvolutionGenerator` using a Trotter–Suzuki
  decomposition.
remarks: |-
  For more on the Trotter–Suzuki decomposition, see
  [Time-Ordered Composition](/quantum/libraries/control-flow#time-ordered-composition).
syntax: 'function TrotterStep (evolutionGenerator : Microsoft.Quantum.Simulation.EvolutionGenerator, trotterOrder : Int, trotterStepSize : Double) : (Qubit[] => Unit is Adj + Ctl)'
input:
  content: '(evolutionGenerator : Microsoft.Quantum.Simulation.EvolutionGenerator, trotterOrder : Int, trotterStepSize : Double)'
  types:
  - name: evolutionGenerator
    summary: A complete description of the system to be simulated.
    uid: microsoft.quantum.simulation.evolutiongenerator
  - name: trotterOrder
    summary: Order of Trotter integrator. This must be either 1 or an even number.
    isPrimitive: true
    uid: Int
  - name: trotterStepSize
    summary: Duration of simulated time-evolution in single Trotter step.
    isPrimitive: true
    uid: Double
output:
  content: (Qubit[] => Unit is Adj + Ctl)
  types:
  - summary: |-
      Unitary operation that approximates a single step of time-evolution
      for duration `trotterStepSize`.
    isOperation: true
    input:
      types:
      - isArray: true
        isPrimitive: true
        uid: Qubit
    output:
      types:
      - isPrimitive: true
        uid: Unit
    functors:
    - Adjoint
    - Controlled
...
