### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.synthesis.applypermutationusingdecomposition
name: ApplyPermutationUsingDecomposition
type: operation
namespace: microsoft.quantum.synthesis
summary: |-
  Permutes the amplitudes in a quantum state given a permutation
  using decomposition-based synthesis.

  This procedure implements the decomposition based
  synthesis approach.  The input is a permutation $\pi$ over $2^n$ elements
  $\{0, \dots, 2^n-1\}$, which represents an $n$-variable reversible Boolean function.
  The algorithm iteratively performs the following steps for each variable
  index $i$:

  1. Compute $((\pi_l, \pi_r), \pi')$ such that the images
     of $\pi_l$ and $\pi_r$ do not change bits in their elements at indexes other
     than $i$ and images of $\pi'$ do not change bit $i$ in their elements.
  2. Set $\pi \leftarrow \pi'$, and derive truth tables from $\pi_l$ and $\pi_r$
     based on elements that are not fixed-points.

  After applying these steps for all variable indexes, the remaining
  permutation $\pi$ will be the identity, and based on the collected truth
  tables and indexes, one can apply truth-table controlled @"microsoft.quantum.intrinsic.x"
  operations using the @"microsoft.quantum.synthesis.applyxcontrolledontruthtable" operation.

  The variable order is $0, \dots, n - 1$.  A custom variable order can be specified
  in the operation @"microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder".
examples: |-
  To synthesize a `SWAP` operation:

  ```Q#
  using (qubits = Qubit[2]) {
    ApplyPermutationUsingDecomposition([0, 2, 1, 3], LittleEndian(qubits));
  }
  ```
syntax: 'operation ApplyPermutationUsingDecomposition (perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: |-
  - [*Alexis De Vos*, *Yvan Van Rentergem*,
    Adv. in Math. of Comm. 2(2), 2008, pp. 183--200](http://www.aimsciences.org/article/doi/10.3934/amc.2008.2.183)
  - [*Mathias Soeken*, *Laura Tague*, *Gerhard W. Dueck*, *Rolf Drechsler*,
    Journal of Symbolic Computation 73 (2016), pp. 1--26](https://www.sciencedirect.com/science/article/pii/S0747717115000188?via%3Dihub)
input:
  content: '(perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: perm
    summary: A permutation of $2^n$ elements starting from 0.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: A list of $n$ qubits to which the permutation is applied to.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.synthesis.applypermutationusingdecompositionwithvariableorder
- microsoft.quantum.synthesis.applypermutationusingtransformation
...
