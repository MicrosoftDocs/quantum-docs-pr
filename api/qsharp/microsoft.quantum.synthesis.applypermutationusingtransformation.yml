### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.synthesis.applypermutationusingtransformation
name: ApplyPermutationUsingTransformation
type: operation
namespace: microsoft.quantum.synthesis
summary: |-
  Permutes the amplitudes in a quantum state given a permutation
  using transformation-based synthesis.

  This procedure implements the unidirectional transformation based
  synthesis approach.  Input is a permutation $\pi$ over $2^n$ elements
  $\{0, \dots, 2^n-1\}$, which represents an $n$-variable reversible Boolean function.
  The algorithm performs iteratively the following steps:

  1. Find smallest $x$ such that $x \ne \pi(x) = y$.
  2. Find multiple-controlled Toffoli operations, which applied to the outputs
     make $\pi(x) = x$ and do not change $\pi(x')$ for all $x' < x$
examples: |-
  To synthesize a `SWAP` operation:

  ```Q#
  using (qubits = Qubit[2]) {
    ApplyPermutationUsingTransformation([0, 2, 1, 3], LittleEndian(qubits));
  }
  ```
syntax: 'operation ApplyPermutationUsingTransformation (perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
references: |-
  - [*D. Michael Miller*, *Dmitri Maslov*, *Gerhard W. Dueck*,
    Proc. DAC 2003, IEEE, pp. 318-323,
    2003](https://doi.org/10.1145/775832.775915)
  - [*Mathias Soeken*, *Gerhard W. Dueck*, *D. Michael Miller*,
    Proc. RC 2016, Springer, pp. 307-321,
    2016](https://doi.org/10.1007/978-3-319-40578-0_22)
input:
  content: '(perm : Int[], qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: perm
    summary: A permutation of $2^n$ elements starting from 0.
    isArray: true
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: A list of $n$ qubits to which the permutation is applied to.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
seeAlso:
- microsoft.quantum.synthesis.applypermutationusingdecomposition
...
