### YamlMime:QSharpType
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.

uid: microsoft.quantum.synthesis.applytransposition
name: ApplyTransposition
type: operation
namespace: microsoft.quantum.synthesis
summary: |-
  This operation swaps the amplitude at index `a` with the
  amplitude at index `b` in the given state-vector of
  `register` of length $n$.  If `a` equals `b`, the state-vector
  is not changed.
examples: |-
  Prepare a uniform superposition of number states $|1\rangle$, $|2\rangle$, and
  $|3\rangle$ on 2 qubits.

  ```Q#
  using (qubits = Qubit[2]) {
    let register = LittleEndian(qubits);
    PrepareUniformSuperposition(3, register);
    ApplyTransposition(0, 3, register);
  }
  ```
syntax: 'operation ApplyTransposition (a : Int, b : Int, qubits : Microsoft.Quantum.Arithmetic.LittleEndian) : Unit'
input:
  content: '(a : Int, b : Int, qubits : Microsoft.Quantum.Arithmetic.LittleEndian)'
  types:
  - name: a
    summary: First index (must be a value from 0 to $2^n - 1$)
    isPrimitive: true
    uid: Int
  - name: b
    summary: Second index (must be a value from 0 to $2^n - 1$)
    isPrimitive: true
    uid: Int
  - name: qubits
    summary: A list of $n$ qubits to which the transposition is applied to.
    uid: microsoft.quantum.arithmetic.littleendian
output:
  content: Unit
  types:
  - isPrimitive: true
    uid: Unit
functors:
- Adjoint
- Controlled
...
