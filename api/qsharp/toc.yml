
# This file is automatically generated.
# Please do not modify this file manually, or your changes may be lost when
# documentation is rebuilt.
- items:
  - {name: AmpAmpByOracle, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpByOracle}
  - {name: AmpAmpByOraclePhases, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpByOraclePhases}
  - {name: AmpAmpByReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpByReflectionPhases}
  - {name: AmpAmpObliviousByOraclePhases, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpObliviousByOraclePhases}
  - {name: AmpAmpObliviousByReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpObliviousByReflectionPhases}
  - {name: AmpAmpPhasesFixedPoint, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpPhasesFixedPoint}
  - {name: AmpAmpPhasesStandard, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpPhasesStandard}
  - {name: AmpAmpRUSByOracle, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpRUSByOracle}
  - {name: AmpAmpRotationToReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.AmpAmpRotationToReflectionPhases}
  - {name: AmplitudeAmplificationFromPartialReflections, uid: Microsoft.Quantum.AmplitudeAmplification.AmplitudeAmplificationFromPartialReflections}
  - {name: AmplitudeAmplificationFromStatePreparation, uid: Microsoft.Quantum.AmplitudeAmplification.AmplitudeAmplificationFromStatePreparation}
  - {name: ApplyAmplitudeAmplification, uid: Microsoft.Quantum.AmplitudeAmplification.ApplyAmplitudeAmplification}
  - {name: ApplyFixedPointAmplification, uid: Microsoft.Quantum.AmplitudeAmplification.ApplyFixedPointAmplification}
  - {name: ApplyObliviousAmplitudeAmplification, uid: Microsoft.Quantum.AmplitudeAmplification.ApplyObliviousAmplitudeAmplification}
  - {name: ApplyTargetStateReflectionOracle, uid: Microsoft.Quantum.AmplitudeAmplification.ApplyTargetStateReflectionOracle}
  - {name: FixedPointReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.FixedPointReflectionPhases}
  - {name: ObliviousAmplitudeAmplificationFromPartialReflections, uid: Microsoft.Quantum.AmplitudeAmplification.ObliviousAmplitudeAmplificationFromPartialReflections}
  - {name: ObliviousAmplitudeAmplificationFromStatePreparation, uid: Microsoft.Quantum.AmplitudeAmplification.ObliviousAmplitudeAmplificationFromStatePreparation}
  - {name: ReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.ReflectionPhases}
  - {name: ReflectionStart, uid: Microsoft.Quantum.AmplitudeAmplification.ReflectionStart}
  - {name: RotationPhases, uid: Microsoft.Quantum.AmplitudeAmplification.RotationPhases}
  - {name: RotationPhasesAsReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.RotationPhasesAsReflectionPhases}
  - {name: StandardAmplitudeAmplification, uid: Microsoft.Quantum.AmplitudeAmplification.StandardAmplitudeAmplification}
  - {name: StandardReflectionPhases, uid: Microsoft.Quantum.AmplitudeAmplification.StandardReflectionPhases}
  - {name: TargetStateReflectionOracle, uid: Microsoft.Quantum.AmplitudeAmplification.TargetStateReflectionOracle}
  name: Microsoft.Quantum.AmplitudeAmplification
  uid: Microsoft.Quantum.AmplitudeAmplification
- items:
  - {name: AddConstantFxP, uid: Microsoft.Quantum.Arithmetic.AddConstantFxP}
  - {name: AddFxP, uid: Microsoft.Quantum.Arithmetic.AddFxP}
  - {name: AddI, uid: Microsoft.Quantum.Arithmetic.AddI}
  - {name: ApplyInnerTTKAdder, uid: Microsoft.Quantum.Arithmetic.ApplyInnerTTKAdder}
  - {name: ApplyInnerTTKAdderWithoutCarry, uid: Microsoft.Quantum.Arithmetic.ApplyInnerTTKAdderWithoutCarry}
  - {name: ApplyLEOperationOnPhaseLE, uid: Microsoft.Quantum.Arithmetic.ApplyLEOperationOnPhaseLE}
  - {name: ApplyLEOperationOnPhaseLEA, uid: Microsoft.Quantum.Arithmetic.ApplyLEOperationOnPhaseLEA}
  - {name: ApplyLEOperationOnPhaseLEC, uid: Microsoft.Quantum.Arithmetic.ApplyLEOperationOnPhaseLEC}
  - {name: ApplyLEOperationOnPhaseLECA, uid: Microsoft.Quantum.Arithmetic.ApplyLEOperationOnPhaseLECA}
  - {name: ApplyMajorityInPlace, uid: Microsoft.Quantum.Arithmetic.ApplyMajorityInPlace}
  - {name: ApplyOuterCDKMAdder, uid: Microsoft.Quantum.Arithmetic.ApplyOuterCDKMAdder}
  - {name: ApplyOuterTTKAdder, uid: Microsoft.Quantum.Arithmetic.ApplyOuterTTKAdder}
  - {name: ApplyPhaseLEOperationOnLE, uid: Microsoft.Quantum.Arithmetic.ApplyPhaseLEOperationOnLE}
  - {name: ApplyPhaseLEOperationOnLEA, uid: Microsoft.Quantum.Arithmetic.ApplyPhaseLEOperationOnLEA}
  - {name: ApplyPhaseLEOperationOnLEC, uid: Microsoft.Quantum.Arithmetic.ApplyPhaseLEOperationOnLEC}
  - {name: ApplyPhaseLEOperationOnLECA, uid: Microsoft.Quantum.Arithmetic.ApplyPhaseLEOperationOnLECA}
  - {name: ApplyReversedOpBE, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpBE}
  - {name: ApplyReversedOpBEA, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpBEA}
  - {name: ApplyReversedOpBEC, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpBEC}
  - {name: ApplyReversedOpBECA, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpBECA}
  - {name: ApplyReversedOpLE, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpLE}
  - {name: ApplyReversedOpLEA, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpLEA}
  - {name: ApplyReversedOpLEC, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpLEC}
  - {name: ApplyReversedOpLECA, uid: Microsoft.Quantum.Arithmetic.ApplyReversedOpLECA}
  - {name: ApplyXorInPlace, uid: Microsoft.Quantum.Arithmetic.ApplyXorInPlace}
  - {name: AssertAllZeroFxP, uid: Microsoft.Quantum.Arithmetic.AssertAllZeroFxP}
  - {name: AssertMostSignificantBit, uid: Microsoft.Quantum.Arithmetic.AssertMostSignificantBit}
  - {name: AssertPhaseLessThan, uid: Microsoft.Quantum.Arithmetic.AssertPhaseLessThan}
  - {name: AssertProbInt, uid: Microsoft.Quantum.Arithmetic.AssertProbInt}
  - {name: BigEndian, uid: Microsoft.Quantum.Arithmetic.BigEndian}
  - {name: BigEndianAsLittleEndian, uid: Microsoft.Quantum.Arithmetic.BigEndianAsLittleEndian}
  - {name: Carry, uid: Microsoft.Quantum.Arithmetic.Carry}
  - {name: CarryOutCoreCDKM, uid: Microsoft.Quantum.Arithmetic.CarryOutCoreCDKM}
  - {name: CompareGTI, uid: Microsoft.Quantum.Arithmetic.CompareGTI}
  - {name: CompareGTSI, uid: Microsoft.Quantum.Arithmetic.CompareGTSI}
  - {name: CompareGreaterThanFxP, uid: Microsoft.Quantum.Arithmetic.CompareGreaterThanFxP}
  - {name: CompareUsingRippleCarry, uid: Microsoft.Quantum.Arithmetic.CompareUsingRippleCarry}
  - {name: ComputeReciprocalFxP, uid: Microsoft.Quantum.Arithmetic.ComputeReciprocalFxP}
  - {name: ComputeReciprocalI, uid: Microsoft.Quantum.Arithmetic.ComputeReciprocalI}
  - {name: CopyMostSignificantBit, uid: Microsoft.Quantum.Arithmetic.CopyMostSignificantBit}
  - {name: DivideI, uid: Microsoft.Quantum.Arithmetic.DivideI}
  - {name: EvaluateEvenPolynomialFxP, uid: Microsoft.Quantum.Arithmetic.EvaluateEvenPolynomialFxP}
  - {name: EvaluateOddPolynomialFxP, uid: Microsoft.Quantum.Arithmetic.EvaluateOddPolynomialFxP}
  - {name: EvaluatePolynomialFxP, uid: Microsoft.Quantum.Arithmetic.EvaluatePolynomialFxP}
  - {name: ExtraArithmeticAssertionsEnabled, uid: Microsoft.Quantum.Arithmetic.ExtraArithmeticAssertionsEnabled}
  - {name: FixedPoint, uid: Microsoft.Quantum.Arithmetic.FixedPoint}
  - {name: GreaterThan, uid: Microsoft.Quantum.Arithmetic.GreaterThan}
  - {name: IdenticalFormatFactFxP, uid: Microsoft.Quantum.Arithmetic.IdenticalFormatFactFxP}
  - {name: IdenticalPointPosFactFxP, uid: Microsoft.Quantum.Arithmetic.IdenticalPointPosFactFxP}
  - {name: IncrementByInteger, uid: Microsoft.Quantum.Arithmetic.IncrementByInteger}
  - {name: IncrementByModularInteger, uid: Microsoft.Quantum.Arithmetic.IncrementByModularInteger}
  - {name: IncrementPhaseByInteger, uid: Microsoft.Quantum.Arithmetic.IncrementPhaseByInteger}
  - {name: IncrementPhaseByModularInteger, uid: Microsoft.Quantum.Arithmetic.IncrementPhaseByModularInteger}
  - {name: Invert2sSI, uid: Microsoft.Quantum.Arithmetic.Invert2sSI}
  - {name: LittleEndian, uid: Microsoft.Quantum.Arithmetic.LittleEndian}
  - {name: LittleEndianAsBigEndian, uid: Microsoft.Quantum.Arithmetic.LittleEndianAsBigEndian}
  - {name: MAJ, uid: Microsoft.Quantum.Arithmetic.MAJ}
  - {name: MeasureFxP, uid: Microsoft.Quantum.Arithmetic.MeasureFxP}
  - {name: MeasureInteger, uid: Microsoft.Quantum.Arithmetic.MeasureInteger}
  - {name: MultiplyAndAddByModularInteger, uid: Microsoft.Quantum.Arithmetic.MultiplyAndAddByModularInteger}
  - {name: MultiplyAndAddPhaseByModularInteger, uid: Microsoft.Quantum.Arithmetic.MultiplyAndAddPhaseByModularInteger}
  - {name: MultiplyByModularInteger, uid: Microsoft.Quantum.Arithmetic.MultiplyByModularInteger}
  - {name: MultiplyFxP, uid: Microsoft.Quantum.Arithmetic.MultiplyFxP}
  - {name: MultiplyI, uid: Microsoft.Quantum.Arithmetic.MultiplyI}
  - {name: MultiplySI, uid: Microsoft.Quantum.Arithmetic.MultiplySI}
  - {name: PhaseLittleEndian, uid: Microsoft.Quantum.Arithmetic.PhaseLittleEndian}
  - {name: PrepareFxP, uid: Microsoft.Quantum.Arithmetic.PrepareFxP}
  - {name: ReflectAboutInteger, uid: Microsoft.Quantum.Arithmetic.ReflectAboutInteger}
  - {name: ReversedOpBE, uid: Microsoft.Quantum.Arithmetic.ReversedOpBE}
  - {name: ReversedOpBEA, uid: Microsoft.Quantum.Arithmetic.ReversedOpBEA}
  - {name: ReversedOpBEC, uid: Microsoft.Quantum.Arithmetic.ReversedOpBEC}
  - {name: ReversedOpBECA, uid: Microsoft.Quantum.Arithmetic.ReversedOpBECA}
  - {name: ReversedOpLE, uid: Microsoft.Quantum.Arithmetic.ReversedOpLE}
  - {name: ReversedOpLEA, uid: Microsoft.Quantum.Arithmetic.ReversedOpLEA}
  - {name: ReversedOpLEC, uid: Microsoft.Quantum.Arithmetic.ReversedOpLEC}
  - {name: ReversedOpLECA, uid: Microsoft.Quantum.Arithmetic.ReversedOpLECA}
  - {name: RippleCarryAdderCDKM, uid: Microsoft.Quantum.Arithmetic.RippleCarryAdderCDKM}
  - {name: RippleCarryAdderD, uid: Microsoft.Quantum.Arithmetic.RippleCarryAdderD}
  - {name: RippleCarryAdderNoCarryTTK, uid: Microsoft.Quantum.Arithmetic.RippleCarryAdderNoCarryTTK}
  - {name: RippleCarryAdderTTK, uid: Microsoft.Quantum.Arithmetic.RippleCarryAdderTTK}
  - {name: SignedLittleEndian, uid: Microsoft.Quantum.Arithmetic.SignedLittleEndian}
  - {name: SquareFxP, uid: Microsoft.Quantum.Arithmetic.SquareFxP}
  - {name: SquareI, uid: Microsoft.Quantum.Arithmetic.SquareI}
  - {name: SquareSI, uid: Microsoft.Quantum.Arithmetic.SquareSI}
  - {name: Sum, uid: Microsoft.Quantum.Arithmetic.Sum}
  name: Microsoft.Quantum.Arithmetic
  uid: Microsoft.Quantum.Arithmetic
- items:
  - {name: All, uid: Microsoft.Quantum.Arrays.All}
  - {name: Any, uid: Microsoft.Quantum.Arrays.Any}
  - {name: Chunks, uid: Microsoft.Quantum.Arrays.Chunks}
  - {name: ColumnAt, uid: Microsoft.Quantum.Arrays.ColumnAt}
  - {name: ColumnAtUnchecked, uid: Microsoft.Quantum.Arrays.ColumnAtUnchecked}
  - {name: ConstantArray, uid: Microsoft.Quantum.Arrays.ConstantArray}
  - {name: Count, uid: Microsoft.Quantum.Arrays.Count}
  - {name: CumulativeFolded, uid: Microsoft.Quantum.Arrays.CumulativeFolded}
  - {name: Diagonal, uid: Microsoft.Quantum.Arrays.Diagonal}
  - {name: DrawMany, uid: Microsoft.Quantum.Arrays.DrawMany}
  - {name: ElementAt, uid: Microsoft.Quantum.Arrays.ElementAt}
  - {name: ElementAtDiagonal, uid: Microsoft.Quantum.Arrays.ElementAtDiagonal}
  - {name: ElementsAt, uid: Microsoft.Quantum.Arrays.ElementsAt}
  - {name: EmptyArray, uid: Microsoft.Quantum.Arrays.EmptyArray}
  - {name: Enumerated, uid: Microsoft.Quantum.Arrays.Enumerated}
  - {name: EqualA, uid: Microsoft.Quantum.Arrays.EqualA}
  - {name: Exclude, uid: Microsoft.Quantum.Arrays.Exclude}
  - {name: Excluding, uid: Microsoft.Quantum.Arrays.Excluding}
  - {name: Filtered, uid: Microsoft.Quantum.Arrays.Filtered}
  - {name: FlatMapped, uid: Microsoft.Quantum.Arrays.FlatMapped}
  - {name: Flattened, uid: Microsoft.Quantum.Arrays.Flattened}
  - {name: Fold, uid: Microsoft.Quantum.Arrays.Fold}
  - {name: ForEach, uid: Microsoft.Quantum.Arrays.ForEach}
  - {name: Head, uid: Microsoft.Quantum.Arrays.Head}
  - {name: HeadAndRest, uid: Microsoft.Quantum.Arrays.HeadAndRest}
  - {name: Identity, uid: Microsoft.Quantum.Arrays.Identity}
  - {name: IndexOf, uid: Microsoft.Quantum.Arrays.IndexOf}
  - {name: IndexRange, uid: Microsoft.Quantum.Arrays.IndexRange}
  - {name: Interleaved, uid: Microsoft.Quantum.Arrays.Interleaved}
  - {name: IsEmpty, uid: Microsoft.Quantum.Arrays.IsEmpty}
  - {name: IsPermutation, uid: Microsoft.Quantum.Arrays.IsPermutation}
  - {name: IsSorted, uid: Microsoft.Quantum.Arrays.IsSorted}
  - {name: IsValuePresent, uid: Microsoft.Quantum.Arrays.IsValuePresent}
  - {name: LookupFunction, uid: Microsoft.Quantum.Arrays.LookupFunction}
  - {name: Mapped, uid: Microsoft.Quantum.Arrays.Mapped}
  - {name: MappedByIndex, uid: Microsoft.Quantum.Arrays.MappedByIndex}
  - {name: MappedOverRange, uid: Microsoft.Quantum.Arrays.MappedOverRange}
  - {name: Merged, uid: Microsoft.Quantum.Arrays.Merged}
  - {name: Most, uid: Microsoft.Quantum.Arrays.Most}
  - {name: MostAndTail, uid: Microsoft.Quantum.Arrays.MostAndTail}
  - {name: Padded, uid: Microsoft.Quantum.Arrays.Padded}
  - {name: Partitioned, uid: Microsoft.Quantum.Arrays.Partitioned}
  - {name: Prefix, uid: Microsoft.Quantum.Arrays.Prefix}
  - {name: Prefixes, uid: Microsoft.Quantum.Arrays.Prefixes}
  - {name: RectangularArrayFact, uid: Microsoft.Quantum.Arrays.RectangularArrayFact}
  - {name: Rest, uid: Microsoft.Quantum.Arrays.Rest}
  - {name: Reversed, uid: Microsoft.Quantum.Arrays.Reversed}
  - {name: SequenceI, uid: Microsoft.Quantum.Arrays.SequenceI}
  - {name: SequenceL, uid: Microsoft.Quantum.Arrays.SequenceL}
  - {name: Sorted, uid: Microsoft.Quantum.Arrays.Sorted}
  - {name: SquareArrayFact, uid: Microsoft.Quantum.Arrays.SquareArrayFact}
  - {name: Subarray, uid: Microsoft.Quantum.Arrays.Subarray}
  - {name: Swapped, uid: Microsoft.Quantum.Arrays.Swapped}
  - {name: Tail, uid: Microsoft.Quantum.Arrays.Tail}
  - {name: Transposed, uid: Microsoft.Quantum.Arrays.Transposed}
  - {name: TupleArrayAsNestedArray, uid: Microsoft.Quantum.Arrays.TupleArrayAsNestedArray}
  - {name: Unique, uid: Microsoft.Quantum.Arrays.Unique}
  - {name: Unzipped, uid: Microsoft.Quantum.Arrays.Unzipped}
  - {name: Where, uid: Microsoft.Quantum.Arrays.Where}
  - {name: Windows, uid: Microsoft.Quantum.Arrays.Windows}
  - {name: Zip, uid: Microsoft.Quantum.Arrays.Zip}
  - {name: Zip3, uid: Microsoft.Quantum.Arrays.Zip3}
  - {name: Zip4, uid: Microsoft.Quantum.Arrays.Zip4}
  - {name: Zipped, uid: Microsoft.Quantum.Arrays.Zipped}
  - {name: Zipped3, uid: Microsoft.Quantum.Arrays.Zipped3}
  - {name: Zipped4, uid: Microsoft.Quantum.Arrays.Zipped4}
  - {name: _SwapOrderToPermuteArray, uid: Microsoft.Quantum.Arrays._SwapOrderToPermuteArray}
  name: Microsoft.Quantum.Arrays
  uid: Microsoft.Quantum.Arrays
- items:
  - {name: And, uid: Microsoft.Quantum.Bitwise.And}
  - {name: LeftShiftedI, uid: Microsoft.Quantum.Bitwise.LeftShiftedI}
  - {name: LeftShiftedL, uid: Microsoft.Quantum.Bitwise.LeftShiftedL}
  - {name: Not, uid: Microsoft.Quantum.Bitwise.Not}
  - {name: Or, uid: Microsoft.Quantum.Bitwise.Or}
  - {name: Parity, uid: Microsoft.Quantum.Bitwise.Parity}
  - {name: RightShiftedI, uid: Microsoft.Quantum.Bitwise.RightShiftedI}
  - {name: RightShiftedL, uid: Microsoft.Quantum.Bitwise.RightShiftedL}
  - {name: XBits, uid: Microsoft.Quantum.Bitwise.XBits}
  - {name: Xor, uid: Microsoft.Quantum.Bitwise.Xor}
  - {name: ZBits, uid: Microsoft.Quantum.Bitwise.ZBits}
  name: Microsoft.Quantum.Bitwise
  uid: Microsoft.Quantum.Bitwise
- items:
  - {name: AndLadder, uid: Microsoft.Quantum.Canon.AndLadder}
  - {name: Angle, uid: Microsoft.Quantum.Canon.Angle}
  - {name: AnyOutsideToleranceCP, uid: Microsoft.Quantum.Canon.AnyOutsideToleranceCP}
  - {name: AnyOutsideToleranceD, uid: Microsoft.Quantum.Canon.AnyOutsideToleranceD}
  - {name: ApplyAnd, uid: Microsoft.Quantum.Canon.ApplyAnd}
  - {name: ApplyBound, uid: Microsoft.Quantum.Canon.ApplyBound}
  - {name: ApplyBoundA, uid: Microsoft.Quantum.Canon.ApplyBoundA}
  - {name: ApplyBoundC, uid: Microsoft.Quantum.Canon.ApplyBoundC}
  - {name: ApplyBoundCA, uid: Microsoft.Quantum.Canon.ApplyBoundCA}
  - {name: ApplyCCNOTChain, uid: Microsoft.Quantum.Canon.ApplyCCNOTChain}
  - {name: ApplyCNOTChain, uid: Microsoft.Quantum.Canon.ApplyCNOTChain}
  - {name: ApplyCNOTChainWithTarget, uid: Microsoft.Quantum.Canon.ApplyCNOTChainWithTarget}
  - {name: ApplyControlledOnBitString, uid: Microsoft.Quantum.Canon.ApplyControlledOnBitString}
  - {name: ApplyControlledOnInt, uid: Microsoft.Quantum.Canon.ApplyControlledOnInt}
  - {name: ApplyCurriedOp, uid: Microsoft.Quantum.Canon.ApplyCurriedOp}
  - {name: ApplyCurriedOpA, uid: Microsoft.Quantum.Canon.ApplyCurriedOpA}
  - {name: ApplyCurriedOpC, uid: Microsoft.Quantum.Canon.ApplyCurriedOpC}
  - {name: ApplyCurriedOpCA, uid: Microsoft.Quantum.Canon.ApplyCurriedOpCA}
  - {name: ApplyDiagonalUnitary, uid: Microsoft.Quantum.Canon.ApplyDiagonalUnitary}
  - {name: ApplyFermionicSWAP, uid: Microsoft.Quantum.Canon.ApplyFermionicSWAP}
  - {name: ApplyIf, uid: Microsoft.Quantum.Canon.ApplyIf}
  - {name: ApplyIfA, uid: Microsoft.Quantum.Canon.ApplyIfA}
  - {name: ApplyIfC, uid: Microsoft.Quantum.Canon.ApplyIfC}
  - {name: ApplyIfCA, uid: Microsoft.Quantum.Canon.ApplyIfCA}
  - {name: ApplyIfElseB, uid: Microsoft.Quantum.Canon.ApplyIfElseB}
  - {name: ApplyIfElseBA, uid: Microsoft.Quantum.Canon.ApplyIfElseBA}
  - {name: ApplyIfElseBC, uid: Microsoft.Quantum.Canon.ApplyIfElseBC}
  - {name: ApplyIfElseBCA, uid: Microsoft.Quantum.Canon.ApplyIfElseBCA}
  - {name: ApplyIfElseR, uid: Microsoft.Quantum.Canon.ApplyIfElseR}
  - {name: ApplyIfElseRA, uid: Microsoft.Quantum.Canon.ApplyIfElseRA}
  - {name: ApplyIfElseRC, uid: Microsoft.Quantum.Canon.ApplyIfElseRC}
  - {name: ApplyIfElseRCA, uid: Microsoft.Quantum.Canon.ApplyIfElseRCA}
  - {name: ApplyIfOne, uid: Microsoft.Quantum.Canon.ApplyIfOne}
  - {name: ApplyIfOneA, uid: Microsoft.Quantum.Canon.ApplyIfOneA}
  - {name: ApplyIfOneC, uid: Microsoft.Quantum.Canon.ApplyIfOneC}
  - {name: ApplyIfOneCA, uid: Microsoft.Quantum.Canon.ApplyIfOneCA}
  - {name: ApplyIfZero, uid: Microsoft.Quantum.Canon.ApplyIfZero}
  - {name: ApplyIfZeroA, uid: Microsoft.Quantum.Canon.ApplyIfZeroA}
  - {name: ApplyIfZeroC, uid: Microsoft.Quantum.Canon.ApplyIfZeroC}
  - {name: ApplyIfZeroCA, uid: Microsoft.Quantum.Canon.ApplyIfZeroCA}
  - {name: ApplyLowDepthAnd, uid: Microsoft.Quantum.Canon.ApplyLowDepthAnd}
  - {name: ApplyMultiControlledC, uid: Microsoft.Quantum.Canon.ApplyMultiControlledC}
  - {name: ApplyMultiControlledCA, uid: Microsoft.Quantum.Canon.ApplyMultiControlledCA}
  - {name: ApplyMultiplyControlledAnd, uid: Microsoft.Quantum.Canon.ApplyMultiplyControlledAnd}
  - {name: ApplyMultiplyControlledLowDepthAnd, uid: Microsoft.Quantum.Canon.ApplyMultiplyControlledLowDepthAnd}
  - {name: ApplyOpRepeatedlyOver, uid: Microsoft.Quantum.Canon.ApplyOpRepeatedlyOver}
  - {name: ApplyOpRepeatedlyOverA, uid: Microsoft.Quantum.Canon.ApplyOpRepeatedlyOverA}
  - {name: ApplyOpRepeatedlyOverC, uid: Microsoft.Quantum.Canon.ApplyOpRepeatedlyOverC}
  - {name: ApplyOpRepeatedlyOverCA, uid: Microsoft.Quantum.Canon.ApplyOpRepeatedlyOverCA}
  - {name: ApplyOperationRepeatedly, uid: Microsoft.Quantum.Canon.ApplyOperationRepeatedly}
  - {name: ApplyOperationRepeatedlyA, uid: Microsoft.Quantum.Canon.ApplyOperationRepeatedlyA}
  - {name: ApplyOperationRepeatedlyC, uid: Microsoft.Quantum.Canon.ApplyOperationRepeatedlyC}
  - {name: ApplyOperationRepeatedlyCA, uid: Microsoft.Quantum.Canon.ApplyOperationRepeatedlyCA}
  - {name: ApplyPauli, uid: Microsoft.Quantum.Canon.ApplyPauli}
  - {name: ApplyPauliFromBitString, uid: Microsoft.Quantum.Canon.ApplyPauliFromBitString}
  - {name: ApplyQuantumFourierTransform, uid: Microsoft.Quantum.Canon.ApplyQuantumFourierTransform}
  - {name: ApplyQuantumFourierTransformBE, uid: Microsoft.Quantum.Canon.ApplyQuantumFourierTransformBE}
  - {name: ApplyReversedOpBigEndianA, uid: Microsoft.Quantum.Canon.ApplyReversedOpBigEndianA}
  - {name: ApplyReversedOpBigEndianC, uid: Microsoft.Quantum.Canon.ApplyReversedOpBigEndianC}
  - {name: ApplyReversedOpBigEndianCA, uid: Microsoft.Quantum.Canon.ApplyReversedOpBigEndianCA}
  - {name: ApplyReversedOpLittleEndianA, uid: Microsoft.Quantum.Canon.ApplyReversedOpLittleEndianA}
  - {name: ApplyReversedOpLittleEndianC, uid: Microsoft.Quantum.Canon.ApplyReversedOpLittleEndianC}
  - {name: ApplyReversedOpLittleEndianCA, uid: Microsoft.Quantum.Canon.ApplyReversedOpLittleEndianCA}
  - {name: ApplyRippleCarryComparatorLE, uid: Microsoft.Quantum.Canon.ApplyRippleCarryComparatorLE}
  - {name: ApplySeriesOfOps, uid: Microsoft.Quantum.Canon.ApplySeriesOfOps}
  - {name: ApplySeriesOfOpsA, uid: Microsoft.Quantum.Canon.ApplySeriesOfOpsA}
  - {name: ApplySeriesOfOpsC, uid: Microsoft.Quantum.Canon.ApplySeriesOfOpsC}
  - {name: ApplySeriesOfOpsCA, uid: Microsoft.Quantum.Canon.ApplySeriesOfOpsCA}
  - {name: ApplyToEach, uid: Microsoft.Quantum.Canon.ApplyToEach}
  - {name: ApplyToEachA, uid: Microsoft.Quantum.Canon.ApplyToEachA}
  - {name: ApplyToEachC, uid: Microsoft.Quantum.Canon.ApplyToEachC}
  - {name: ApplyToEachCA, uid: Microsoft.Quantum.Canon.ApplyToEachCA}
  - {name: ApplyToEachIndex, uid: Microsoft.Quantum.Canon.ApplyToEachIndex}
  - {name: ApplyToEachIndexA, uid: Microsoft.Quantum.Canon.ApplyToEachIndexA}
  - {name: ApplyToEachIndexC, uid: Microsoft.Quantum.Canon.ApplyToEachIndexC}
  - {name: ApplyToEachIndexCA, uid: Microsoft.Quantum.Canon.ApplyToEachIndexCA}
  - {name: ApplyToElement, uid: Microsoft.Quantum.Canon.ApplyToElement}
  - {name: ApplyToElementA, uid: Microsoft.Quantum.Canon.ApplyToElementA}
  - {name: ApplyToElementC, uid: Microsoft.Quantum.Canon.ApplyToElementC}
  - {name: ApplyToElementCA, uid: Microsoft.Quantum.Canon.ApplyToElementCA}
  - {name: ApplyToFirstQubit, uid: Microsoft.Quantum.Canon.ApplyToFirstQubit}
  - {name: ApplyToFirstQubitA, uid: Microsoft.Quantum.Canon.ApplyToFirstQubitA}
  - {name: ApplyToFirstQubitC, uid: Microsoft.Quantum.Canon.ApplyToFirstQubitC}
  - {name: ApplyToFirstQubitCA, uid: Microsoft.Quantum.Canon.ApplyToFirstQubitCA}
  - {name: ApplyToFirstThreeQubits, uid: Microsoft.Quantum.Canon.ApplyToFirstThreeQubits}
  - {name: ApplyToFirstThreeQubitsA, uid: Microsoft.Quantum.Canon.ApplyToFirstThreeQubitsA}
  - {name: ApplyToFirstThreeQubitsC, uid: Microsoft.Quantum.Canon.ApplyToFirstThreeQubitsC}
  - {name: ApplyToFirstThreeQubitsCA, uid: Microsoft.Quantum.Canon.ApplyToFirstThreeQubitsCA}
  - {name: ApplyToFirstTwoQubits, uid: Microsoft.Quantum.Canon.ApplyToFirstTwoQubits}
  - {name: ApplyToFirstTwoQubitsA, uid: Microsoft.Quantum.Canon.ApplyToFirstTwoQubitsA}
  - {name: ApplyToFirstTwoQubitsC, uid: Microsoft.Quantum.Canon.ApplyToFirstTwoQubitsC}
  - {name: ApplyToFirstTwoQubitsCA, uid: Microsoft.Quantum.Canon.ApplyToFirstTwoQubitsCA}
  - {name: ApplyToHead, uid: Microsoft.Quantum.Canon.ApplyToHead}
  - {name: ApplyToHeadA, uid: Microsoft.Quantum.Canon.ApplyToHeadA}
  - {name: ApplyToHeadC, uid: Microsoft.Quantum.Canon.ApplyToHeadC}
  - {name: ApplyToHeadCA, uid: Microsoft.Quantum.Canon.ApplyToHeadCA}
  - {name: ApplyToMost, uid: Microsoft.Quantum.Canon.ApplyToMost}
  - {name: ApplyToMostA, uid: Microsoft.Quantum.Canon.ApplyToMostA}
  - {name: ApplyToMostC, uid: Microsoft.Quantum.Canon.ApplyToMostC}
  - {name: ApplyToMostCA, uid: Microsoft.Quantum.Canon.ApplyToMostCA}
  - {name: ApplyToPartition, uid: Microsoft.Quantum.Canon.ApplyToPartition}
  - {name: ApplyToPartitionA, uid: Microsoft.Quantum.Canon.ApplyToPartitionA}
  - {name: ApplyToPartitionC, uid: Microsoft.Quantum.Canon.ApplyToPartitionC}
  - {name: ApplyToPartitionCA, uid: Microsoft.Quantum.Canon.ApplyToPartitionCA}
  - {name: ApplyToRest, uid: Microsoft.Quantum.Canon.ApplyToRest}
  - {name: ApplyToRestA, uid: Microsoft.Quantum.Canon.ApplyToRestA}
  - {name: ApplyToRestC, uid: Microsoft.Quantum.Canon.ApplyToRestC}
  - {name: ApplyToRestCA, uid: Microsoft.Quantum.Canon.ApplyToRestCA}
  - {name: ApplyToSubregister, uid: Microsoft.Quantum.Canon.ApplyToSubregister}
  - {name: ApplyToSubregisterA, uid: Microsoft.Quantum.Canon.ApplyToSubregisterA}
  - {name: ApplyToSubregisterC, uid: Microsoft.Quantum.Canon.ApplyToSubregisterC}
  - {name: ApplyToSubregisterCA, uid: Microsoft.Quantum.Canon.ApplyToSubregisterCA}
  - {name: ApplyToTail, uid: Microsoft.Quantum.Canon.ApplyToTail}
  - {name: ApplyToTailA, uid: Microsoft.Quantum.Canon.ApplyToTailA}
  - {name: ApplyToTailC, uid: Microsoft.Quantum.Canon.ApplyToTailC}
  - {name: ApplyToTailCA, uid: Microsoft.Quantum.Canon.ApplyToTailCA}
  - {name: ApplyWith, uid: Microsoft.Quantum.Canon.ApplyWith}
  - {name: ApplyWithA, uid: Microsoft.Quantum.Canon.ApplyWithA}
  - {name: ApplyWithC, uid: Microsoft.Quantum.Canon.ApplyWithC}
  - {name: ApplyWithCA, uid: Microsoft.Quantum.Canon.ApplyWithCA}
  - {name: ApplyWithInputTransformation, uid: Microsoft.Quantum.Canon.ApplyWithInputTransformation}
  - {name: ApplyWithInputTransformationA, uid: Microsoft.Quantum.Canon.ApplyWithInputTransformationA}
  - {name: ApplyWithInputTransformationC, uid: Microsoft.Quantum.Canon.ApplyWithInputTransformationC}
  - {name: ApplyWithInputTransformationCA, uid: Microsoft.Quantum.Canon.ApplyWithInputTransformationCA}
  - {name: ApproximateQFT, uid: Microsoft.Quantum.Canon.ApproximateQFT}
  - {name: ApproximatelyApplyDiagonalUnitary, uid: Microsoft.Quantum.Canon.ApproximatelyApplyDiagonalUnitary}
  - {name: ApproximatelyMultiplexPauli, uid: Microsoft.Quantum.Canon.ApproximatelyMultiplexPauli}
  - {name: ApproximatelyMultiplexZ, uid: Microsoft.Quantum.Canon.ApproximatelyMultiplexZ}
  - {name: ArrangedQubits, uid: Microsoft.Quantum.Canon.ArrangedQubits}
  - {name: AssertHighestBit, uid: Microsoft.Quantum.Canon.AssertHighestBit}
  - {name: AssertLessThanPhaseLE, uid: Microsoft.Quantum.Canon.AssertLessThanPhaseLE}
  - {name: AssertPhase, uid: Microsoft.Quantum.Canon.AssertPhase}
  - {name: BigEndianToLittleEndian, uid: Microsoft.Quantum.Canon.BigEndianToLittleEndian}
  - {name: Bound, uid: Microsoft.Quantum.Canon.Bound}
  - {name: BoundA, uid: Microsoft.Quantum.Canon.BoundA}
  - {name: BoundC, uid: Microsoft.Quantum.Canon.BoundC}
  - {name: BoundCA, uid: Microsoft.Quantum.Canon.BoundCA}
  - {name: CCNOTop, uid: Microsoft.Quantum.Canon.CCNOTop}
  - {name: CControlled, uid: Microsoft.Quantum.Canon.CControlled}
  - {name: CControlledA, uid: Microsoft.Quantum.Canon.CControlledA}
  - {name: CControlledC, uid: Microsoft.Quantum.Canon.CControlledC}
  - {name: CControlledCA, uid: Microsoft.Quantum.Canon.CControlledCA}
  - {name: CNOTChain, uid: Microsoft.Quantum.Canon.CNOTChain}
  - {name: CNOTChainTarget, uid: Microsoft.Quantum.Canon.CNOTChainTarget}
  - {name: CX, uid: Microsoft.Quantum.Canon.CX}
  - {name: CY, uid: Microsoft.Quantum.Canon.CY}
  - {name: CZ, uid: Microsoft.Quantum.Canon.CZ}
  - {name: CascadeCCNOT, uid: Microsoft.Quantum.Canon.CascadeCCNOT}
  - {name: CascadeCNOT, uid: Microsoft.Quantum.Canon.CascadeCNOT}
  - {name: Compose, uid: Microsoft.Quantum.Canon.Compose}
  - {name: ComposedOutput, uid: Microsoft.Quantum.Canon.ComposedOutput}
  - {name: ConjugatedBy, uid: Microsoft.Quantum.Canon.ConjugatedBy}
  - {name: ConjugatedByA, uid: Microsoft.Quantum.Canon.ConjugatedByA}
  - {name: ConjugatedByC, uid: Microsoft.Quantum.Canon.ConjugatedByC}
  - {name: ConjugatedByCA, uid: Microsoft.Quantum.Canon.ConjugatedByCA}
  - {name: ControlledOnBitString, uid: Microsoft.Quantum.Canon.ControlledOnBitString}
  - {name: ControlledOnInt, uid: Microsoft.Quantum.Canon.ControlledOnInt}
  - {name: CurriedOp, uid: Microsoft.Quantum.Canon.CurriedOp}
  - {name: DecomposeIntoTimeStepsCA, uid: Microsoft.Quantum.Canon.DecomposeIntoTimeStepsCA}
  - {name: DecomposedIntoTimeStepsCA, uid: Microsoft.Quantum.Canon.DecomposedIntoTimeStepsCA}
  - {name: Delay, uid: Microsoft.Quantum.Canon.Delay}
  - {name: DelayA, uid: Microsoft.Quantum.Canon.DelayA}
  - {name: DelayC, uid: Microsoft.Quantum.Canon.DelayC}
  - {name: DelayCA, uid: Microsoft.Quantum.Canon.DelayCA}
  - {name: Delayed, uid: Microsoft.Quantum.Canon.Delayed}
  - {name: DelayedA, uid: Microsoft.Quantum.Canon.DelayedA}
  - {name: DelayedC, uid: Microsoft.Quantum.Canon.DelayedC}
  - {name: DelayedCA, uid: Microsoft.Quantum.Canon.DelayedCA}
  - {name: EmbedPauli, uid: Microsoft.Quantum.Canon.EmbedPauli}
  - {name: Fst, uid: Microsoft.Quantum.Canon.Fst}
  - {name: GrayCode, uid: Microsoft.Quantum.Canon.GrayCode}
  - {name: HY, uid: Microsoft.Quantum.Canon.HY}
  - {name: HammingWeightI, uid: Microsoft.Quantum.Canon.HammingWeightI}
  - {name: Ignore, uid: Microsoft.Quantum.Canon.Ignore}
  - {name: InPlaceMajority, uid: Microsoft.Quantum.Canon.InPlaceMajority}
  - {name: InPlaceXorBE, uid: Microsoft.Quantum.Canon.InPlaceXorBE}
  - {name: InPlaceXorLE, uid: Microsoft.Quantum.Canon.InPlaceXorLE}
  - {name: IntegerIncrementLE, uid: Microsoft.Quantum.Canon.IntegerIncrementLE}
  - {name: IntegerIncrementPhaseLE, uid: Microsoft.Quantum.Canon.IntegerIncrementPhaseLE}
  - {name: IsResultOne, uid: Microsoft.Quantum.Canon.IsResultOne}
  - {name: IsResultZero, uid: Microsoft.Quantum.Canon.IsResultZero}
  - {name: IterateThroughCartesianPower, uid: Microsoft.Quantum.Canon.IterateThroughCartesianPower}
  - {name: IterateThroughCartesianProduct, uid: Microsoft.Quantum.Canon.IterateThroughCartesianProduct}
  - {name: LittleEndianToBigEndian, uid: Microsoft.Quantum.Canon.LittleEndianToBigEndian}
  - {name: LogicalANDMeasAndFix, uid: Microsoft.Quantum.Canon.LogicalANDMeasAndFix}
  - {name: ModularAddProductLE, uid: Microsoft.Quantum.Canon.ModularAddProductLE}
  - {name: ModularAddProductPhaseLE, uid: Microsoft.Quantum.Canon.ModularAddProductPhaseLE}
  - {name: ModularIncrementLE, uid: Microsoft.Quantum.Canon.ModularIncrementLE}
  - {name: ModularIncrementPhaseLE, uid: Microsoft.Quantum.Canon.ModularIncrementPhaseLE}
  - {name: ModularMultiplyByConstantLE, uid: Microsoft.Quantum.Canon.ModularMultiplyByConstantLE}
  - {name: MultiplexOperations, uid: Microsoft.Quantum.Canon.MultiplexOperations}
  - {name: MultiplexOperationsBruteForceFromGenerator, uid: Microsoft.Quantum.Canon.MultiplexOperationsBruteForceFromGenerator}
  - {name: MultiplexOperationsFromGenerator, uid: Microsoft.Quantum.Canon.MultiplexOperationsFromGenerator}
  - {name: MultiplexOperationsWithAuxRegister, uid: Microsoft.Quantum.Canon.MultiplexOperationsWithAuxRegister}
  - {name: MultiplexPauli, uid: Microsoft.Quantum.Canon.MultiplexPauli}
  - {name: MultiplexZ, uid: Microsoft.Quantum.Canon.MultiplexZ}
  - {name: MultiplexZCoefficients, uid: Microsoft.Quantum.Canon.MultiplexZCoefficients}
  - {name: MultiplexerBruteForceFromGenerator, uid: Microsoft.Quantum.Canon.MultiplexerBruteForceFromGenerator}
  - {name: MultiplexerFromGenerator, uid: Microsoft.Quantum.Canon.MultiplexerFromGenerator}
  - {name: NoOp, uid: Microsoft.Quantum.Canon.NoOp}
  - {name: OperationPow, uid: Microsoft.Quantum.Canon.OperationPow}
  - {name: OperationPowA, uid: Microsoft.Quantum.Canon.OperationPowA}
  - {name: OperationPowC, uid: Microsoft.Quantum.Canon.OperationPowC}
  - {name: OperationPowCA, uid: Microsoft.Quantum.Canon.OperationPowCA}
  - {name: PermuteQubits, uid: Microsoft.Quantum.Canon.PermuteQubits}
  - {name: QFT, uid: Microsoft.Quantum.Canon.QFT}
  - {name: QFTLE, uid: Microsoft.Quantum.Canon.QFTLE}
  - {name: RAll0, uid: Microsoft.Quantum.Canon.RAll0}
  - {name: RAll1, uid: Microsoft.Quantum.Canon.RAll1}
  - {name: Repeat, uid: Microsoft.Quantum.Canon.Repeat}
  - {name: RepeatA, uid: Microsoft.Quantum.Canon.RepeatA}
  - {name: RepeatC, uid: Microsoft.Quantum.Canon.RepeatC}
  - {name: RepeatCA, uid: Microsoft.Quantum.Canon.RepeatCA}
  - {name: RestrictedToSubregister, uid: Microsoft.Quantum.Canon.RestrictedToSubregister}
  - {name: RestrictedToSubregisterA, uid: Microsoft.Quantum.Canon.RestrictedToSubregisterA}
  - {name: RestrictedToSubregisterC, uid: Microsoft.Quantum.Canon.RestrictedToSubregisterC}
  - {name: RestrictedToSubregisterCA, uid: Microsoft.Quantum.Canon.RestrictedToSubregisterCA}
  - {name: ResultStack, uid: Microsoft.Quantum.Canon.ResultStack}
  - {name: Snd, uid: Microsoft.Quantum.Canon.Snd}
  - {name: StackCapacity, uid: Microsoft.Quantum.Canon.StackCapacity}
  - {name: StackLength, uid: Microsoft.Quantum.Canon.StackLength}
  - {name: StackNew, uid: Microsoft.Quantum.Canon.StackNew}
  - {name: StackPeek, uid: Microsoft.Quantum.Canon.StackPeek}
  - {name: StackPop, uid: Microsoft.Quantum.Canon.StackPop}
  - {name: StackPush, uid: Microsoft.Quantum.Canon.StackPush}
  - {name: SwapReverseRegister, uid: Microsoft.Quantum.Canon.SwapReverseRegister}
  - {name: TransformedOperation, uid: Microsoft.Quantum.Canon.TransformedOperation}
  - {name: TransformedOperationA, uid: Microsoft.Quantum.Canon.TransformedOperationA}
  - {name: TransformedOperationC, uid: Microsoft.Quantum.Canon.TransformedOperationC}
  - {name: TransformedOperationCA, uid: Microsoft.Quantum.Canon.TransformedOperationCA}
  - {name: Trotter1ImplCA, uid: Microsoft.Quantum.Canon.Trotter1ImplCA}
  - {name: Trotter2ImplCA, uid: Microsoft.Quantum.Canon.Trotter2ImplCA}
  - {name: TrotterArbitraryImplCA, uid: Microsoft.Quantum.Canon.TrotterArbitraryImplCA}
  - {name: TrotterStepSize, uid: Microsoft.Quantum.Canon.TrotterStepSize}
  - {name: UncurriedOp, uid: Microsoft.Quantum.Canon.UncurriedOp}
  - {name: UncurriedOpA, uid: Microsoft.Quantum.Canon.UncurriedOpA}
  - {name: UncurriedOpC, uid: Microsoft.Quantum.Canon.UncurriedOpC}
  - {name: UncurriedOpCA, uid: Microsoft.Quantum.Canon.UncurriedOpCA}
  - {name: WeightOnePaulis, uid: Microsoft.Quantum.Canon.WeightOnePaulis}
  - {name: WithFirstInputApplied, uid: Microsoft.Quantum.Canon.WithFirstInputApplied}
  - {name: XOR, uid: Microsoft.Quantum.Canon.XOR}
  - {name: _MultiplexOperationsFromGenerator, uid: Microsoft.Quantum.Canon._MultiplexOperationsFromGenerator}
  name: Microsoft.Quantum.Canon
  uid: Microsoft.Quantum.Canon
- items:
  - {name: ApplyHadamardTest, uid: Microsoft.Quantum.Characterization.ApplyHadamardTest}
  - {name: ApplyHadamardTestOnSingleRegister, uid: Microsoft.Quantum.Characterization.ApplyHadamardTestOnSingleRegister}
  - {name: ApplySwapTest, uid: Microsoft.Quantum.Characterization.ApplySwapTest}
  - {name: ApplySwapTestOnSingleRegister, uid: Microsoft.Quantum.Characterization.ApplySwapTestOnSingleRegister}
  - {name: ContinuousPhaseEstimationIteration, uid: Microsoft.Quantum.Characterization.ContinuousPhaseEstimationIteration}
  - {name: DiscretePhaseEstimationIteration, uid: Microsoft.Quantum.Characterization.DiscretePhaseEstimationIteration}
  - {name: EstimateFrequency, uid: Microsoft.Quantum.Characterization.EstimateFrequency}
  - {name: EstimateFrequencyA, uid: Microsoft.Quantum.Characterization.EstimateFrequencyA}
  - {name: EstimateImagOverlapBetweenStates, uid: Microsoft.Quantum.Characterization.EstimateImagOverlapBetweenStates}
  - {name: EstimateOverlapBetweenStates, uid: Microsoft.Quantum.Characterization.EstimateOverlapBetweenStates}
  - {name: EstimateRealOverlapBetweenStates, uid: Microsoft.Quantum.Characterization.EstimateRealOverlapBetweenStates}
  - {name: HeadMeasurement, uid: Microsoft.Quantum.Characterization.HeadMeasurement}
  - {name: MeasureAllZ, uid: Microsoft.Quantum.Characterization.MeasureAllZ}
  - {name: MeasureIdentity, uid: Microsoft.Quantum.Characterization.MeasureIdentity}
  - {name: QuantumPhaseEstimation, uid: Microsoft.Quantum.Characterization.QuantumPhaseEstimation}
  - {name: RobustPhaseEstimation, uid: Microsoft.Quantum.Characterization.RobustPhaseEstimation}
  - {name: SingleQubitProcessTomographyMeasurement, uid: Microsoft.Quantum.Characterization.SingleQubitProcessTomographyMeasurement}
  name: Microsoft.Quantum.Characterization
  uid: Microsoft.Quantum.Characterization
- items:
  - {name: HTerm, uid: Microsoft.Quantum.Chemistry.HTerm}
  - {name: HTermToGenIdx, uid: Microsoft.Quantum.Chemistry.HTermToGenIdx}
  - {name: HTermsToGenIdx, uid: Microsoft.Quantum.Chemistry.HTermsToGenIdx}
  - {name: HTermsToGenSys, uid: Microsoft.Quantum.Chemistry.HTermsToGenSys}
  - {name: IsNotZero, uid: Microsoft.Quantum.Chemistry.IsNotZero}
  name: Microsoft.Quantum.Chemistry
  uid: Microsoft.Quantum.Chemistry
- items:
  - {name: JWOptimizedHTerms, uid: Microsoft.Quantum.Chemistry.JordanWigner.JWOptimizedHTerms}
  - {name: JordanWignerBlockEncodingGeneratorSystem, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerBlockEncodingGeneratorSystem}
  - {name: JordanWignerClusterOperatorEvolutionSet, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerClusterOperatorEvolutionSet}
  - {name: JordanWignerClusterOperatorGeneratorSystem, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerClusterOperatorGeneratorSystem}
  - {name: JordanWignerEncodingData, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerEncodingData}
  - {name: JordanWignerFermionEvolutionSet, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerFermionEvolutionSet}
  - {name: JordanWignerFermionFunction, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerFermionFunction}
  - {name: JordanWignerFermionImpl, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerFermionImpl}
  - {name: JordanWignerGeneratorSystem, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerGeneratorSystem}
  - {name: JordanWignerInputState, uid: Microsoft.Quantum.Chemistry.JordanWigner.JordanWignerInputState}
  - {name: OptimizedBEGeneratorSystem, uid: Microsoft.Quantum.Chemistry.JordanWigner.OptimizedBEGeneratorSystem}
  - {name: OptimizedBETermIndex, uid: Microsoft.Quantum.Chemistry.JordanWigner.OptimizedBETermIndex}
  - {name: OptimizedBEXY, uid: Microsoft.Quantum.Chemistry.JordanWigner.OptimizedBEXY}
  - {name: OptimizedBlockEncodingGeneratorSystem, uid: Microsoft.Quantum.Chemistry.JordanWigner.OptimizedBlockEncodingGeneratorSystem}
  - {name: OptimizedQubitizationOracle, uid: Microsoft.Quantum.Chemistry.JordanWigner.OptimizedQubitizationOracle}
  - {name: PrepareSingleConfigurationalStateSingleSiteOccupation, uid: Microsoft.Quantum.Chemistry.JordanWigner.PrepareSingleConfigurationalStateSingleSiteOccupation}
  - {name: PrepareSparseMultiConfigurationalState, uid: Microsoft.Quantum.Chemistry.JordanWigner.PrepareSparseMultiConfigurationalState}
  - {name: PrepareTrialState, uid: Microsoft.Quantum.Chemistry.JordanWigner.PrepareTrialState}
  - {name: PrepareUnitaryCoupledClusterState, uid: Microsoft.Quantum.Chemistry.JordanWigner.PrepareUnitaryCoupledClusterState}
  - {name: QubitizationOracle, uid: Microsoft.Quantum.Chemistry.JordanWigner.QubitizationOracle}
  - {name: SelectZ, uid: Microsoft.Quantum.Chemistry.JordanWigner.SelectZ}
  - {name: TrotterStepOracle, uid: Microsoft.Quantum.Chemistry.JordanWigner.TrotterStepOracle}
  - {name: _ApplyJordanWigner0123Term_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWigner0123Term_}
  - {name: _ApplyJordanWignerClusterOperatorPQRSTerm, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerClusterOperatorPQRSTerm}
  - {name: _ApplyJordanWignerClusterOperatorPQTerm, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerClusterOperatorPQTerm}
  - {name: _ApplyJordanWignerPQTerm_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerPQTerm_}
  - {name: _ApplyJordanWignerPQandPQQRTerm_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerPQandPQQRTerm_}
  - {name: _ApplyJordanWignerZTerm_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerZTerm_}
  - {name: _ApplyJordanWignerZZTerm_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ApplyJordanWignerZZTerm_}
  - {name: _ComputeJordanWignerBitString, uid: Microsoft.Quantum.Chemistry.JordanWigner._ComputeJordanWignerBitString}
  - {name: _ComputeJordanWignerPauliString, uid: Microsoft.Quantum.Chemistry.JordanWigner._ComputeJordanWignerPauliString}
  - {name: _ComputeJordanWignerPauliZString, uid: Microsoft.Quantum.Chemistry.JordanWigner._ComputeJordanWignerPauliZString}
  - {name: _GetOptimizedBETermIndexCoeff_, uid: Microsoft.Quantum.Chemistry.JordanWigner._GetOptimizedBETermIndexCoeff_}
  - {name: _JordanWignerClusterOperatorFunction, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerClusterOperatorFunction}
  - {name: _JordanWignerClusterOperatorGeneratorIndex, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerClusterOperatorGeneratorIndex}
  - {name: _JordanWignerClusterOperatorGeneratorSystemImpl, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerClusterOperatorGeneratorSystemImpl}
  - {name: _JordanWignerClusterOperatorImpl, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerClusterOperatorImpl}
  - {name: _JordanWignerClusterOperatorPQRSTermSigns, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerClusterOperatorPQRSTermSigns}
  - {name: _JordanWignerOptimizedBlockEncodingQubitCount_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncodingQubitCount_}
  - {name: _JordanWignerOptimizedBlockEncodingQubitManager_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncodingQubitManager_}
  - {name: _JordanWignerOptimizedBlockEncodingSelect_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncodingSelect_}
  - {name: _JordanWignerOptimizedBlockEncodingStatePrep, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncodingStatePrep}
  - {name: _JordanWignerOptimizedBlockEncodingStatePrep_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncodingStatePrep_}
  - {name: _JordanWignerOptimizedBlockEncoding_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedBlockEncoding_}
  - {name: _JordanWignerOptimizedQuantumWalkByQubitization_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerOptimizedQuantumWalkByQubitization_}
  - {name: _JordanWignerSelectQubitCount_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerSelectQubitCount_}
  - {name: _JordanWignerSelectQubitManager_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerSelectQubitManager_}
  - {name: _JordanWignerSelect_, uid: Microsoft.Quantum.Chemistry.JordanWigner._JordanWignerSelect_}
  - {name: _MergeTwoRegisters_, uid: Microsoft.Quantum.Chemistry.JordanWigner._MergeTwoRegisters_}
  - {name: _OptimizedBEGeneratorSystemCoeff_, uid: Microsoft.Quantum.Chemistry.JordanWigner._OptimizedBEGeneratorSystemCoeff_}
  - {name: _OptimizedBEXY, uid: Microsoft.Quantum.Chemistry.JordanWigner._OptimizedBEXY}
  - {name: _OptimizedBEXY_, uid: Microsoft.Quantum.Chemistry.JordanWigner._OptimizedBEXY_}
  - {name: _OptimizedQubitizationOracleSeperatedRegisters_, uid: Microsoft.Quantum.Chemistry.JordanWigner._OptimizedQubitizationOracleSeperatedRegisters_}
  - {name: _PQTermToPauliGenIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._PQTermToPauliGenIdx_}
  - {name: _PQTermToPauliMajIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._PQTermToPauliMajIdx_}
  - {name: _PQandPQQRTermToPauliGenIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._PQandPQQRTermToPauliGenIdx_}
  - {name: _PQandPQQRTermToPauliMajIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._PQandPQQRTermToPauliMajIdx_}
  - {name: _PrepareSingleConfigurationalStateSingleSiteOccupation, uid: Microsoft.Quantum.Chemistry.JordanWigner._PrepareSingleConfigurationalStateSingleSiteOccupation}
  - {name: _QubitizationOracleSeperatedRegisters, uid: Microsoft.Quantum.Chemistry.JordanWigner._QubitizationOracleSeperatedRegisters}
  - {name: _SelectZ, uid: Microsoft.Quantum.Chemistry.JordanWigner._SelectZ}
  - {name: _SelectZ_, uid: Microsoft.Quantum.Chemistry.JordanWigner._SelectZ_}
  - {name: _ToJordanWignerSelectInput, uid: Microsoft.Quantum.Chemistry.JordanWigner._ToJordanWignerSelectInput}
  - {name: _ToJordanWignerSelectInput_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ToJordanWignerSelectInput_}
  - {name: _ToPauliBases, uid: Microsoft.Quantum.Chemistry.JordanWigner._ToPauliBases}
  - {name: _ToPauliBases_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ToPauliBases_}
  - {name: _V0123TermToPauliGenIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._V0123TermToPauliGenIdx_}
  - {name: _V0123TermToPauliMajIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._V0123TermToPauliMajIdx_}
  - {name: _ZTermToPauliGenIdx, uid: Microsoft.Quantum.Chemistry.JordanWigner._ZTermToPauliGenIdx}
  - {name: _ZTermToPauliMajIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ZTermToPauliMajIdx_}
  - {name: _ZZTermToPauliGenIdx, uid: Microsoft.Quantum.Chemistry.JordanWigner._ZZTermToPauliGenIdx}
  - {name: _ZZTermToPauliMajIdx_, uid: Microsoft.Quantum.Chemistry.JordanWigner._ZZTermToPauliMajIdx_}
  name: Microsoft.Quantum.Chemistry.JordanWigner
  uid: Microsoft.Quantum.Chemistry.JordanWigner
- items:
  - {name: EstimateEnergy, uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE.EstimateEnergy}
  - {name: EstimateTermExpectation, uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE.EstimateTermExpectation}
  - {name: ExpandedCoefficients, uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE.ExpandedCoefficients}
  - {name: MeasurementOperators, uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE.MeasurementOperators}
  - {name: _prepareTrialStateWrapper, uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE._prepareTrialStateWrapper}
  name: Microsoft.Quantum.Chemistry.JordanWigner.VQE
  uid: Microsoft.Quantum.Chemistry.JordanWigner.VQE
- items:
  - {name: BigIntAsBoolArray, uid: Microsoft.Quantum.Convert.BigIntAsBoolArray}
  - {name: BoolArrayAsBigInt, uid: Microsoft.Quantum.Convert.BoolArrayAsBigInt}
  - {name: BoolArrayAsInt, uid: Microsoft.Quantum.Convert.BoolArrayAsInt}
  - {name: BoolArrayAsPauli, uid: Microsoft.Quantum.Convert.BoolArrayAsPauli}
  - {name: BoolArrayAsResultArray, uid: Microsoft.Quantum.Convert.BoolArrayAsResultArray}
  - {name: BoolAsResult, uid: Microsoft.Quantum.Convert.BoolAsResult}
  - {name: BoolAsString, uid: Microsoft.Quantum.Convert.BoolAsString}
  - {name: Call, uid: Microsoft.Quantum.Convert.Call}
  - {name: DoubleAsString, uid: Microsoft.Quantum.Convert.DoubleAsString}
  - {name: DoubleAsStringWithFormat, uid: Microsoft.Quantum.Convert.DoubleAsStringWithFormat}
  - {name: FunctionAsOperation, uid: Microsoft.Quantum.Convert.FunctionAsOperation}
  - {name: IntAsBigInt, uid: Microsoft.Quantum.Convert.IntAsBigInt}
  - {name: IntAsBoolArray, uid: Microsoft.Quantum.Convert.IntAsBoolArray}
  - {name: IntAsDouble, uid: Microsoft.Quantum.Convert.IntAsDouble}
  - {name: IntAsString, uid: Microsoft.Quantum.Convert.IntAsString}
  - {name: IntAsStringWithFormat, uid: Microsoft.Quantum.Convert.IntAsStringWithFormat}
  - {name: MaybeBigIntAsInt, uid: Microsoft.Quantum.Convert.MaybeBigIntAsInt}
  - {name: PauliArrayAsInt, uid: Microsoft.Quantum.Convert.PauliArrayAsInt}
  - {name: RangeAsIntArray, uid: Microsoft.Quantum.Convert.RangeAsIntArray}
  - {name: ResultArrayAsBoolArray, uid: Microsoft.Quantum.Convert.ResultArrayAsBoolArray}
  - {name: ResultArrayAsInt, uid: Microsoft.Quantum.Convert.ResultArrayAsInt}
  - {name: ResultAsBool, uid: Microsoft.Quantum.Convert.ResultAsBool}
  name: Microsoft.Quantum.Convert
  uid: Microsoft.Quantum.Convert
- items:
  - {name: Attribute, uid: Microsoft.Quantum.Core.Attribute}
  - {name: Default, uid: Microsoft.Quantum.Core.Default}
  - {name: Deprecated, uid: Microsoft.Quantum.Core.Deprecated}
  - {name: EntryPoint, uid: Microsoft.Quantum.Core.EntryPoint}
  - {name: Length, uid: Microsoft.Quantum.Core.Length}
  - {name: RangeEnd, uid: Microsoft.Quantum.Core.RangeEnd}
  - {name: RangeReverse, uid: Microsoft.Quantum.Core.RangeReverse}
  - {name: RangeStart, uid: Microsoft.Quantum.Core.RangeStart}
  - {name: RangeStep, uid: Microsoft.Quantum.Core.RangeStep}
  name: Microsoft.Quantum.Core
  uid: Microsoft.Quantum.Core
- items:
  - {name: AllEqualityFactB, uid: Microsoft.Quantum.Diagnostics.AllEqualityFactB}
  - {name: AllEqualityFactI, uid: Microsoft.Quantum.Diagnostics.AllEqualityFactI}
  - {name: AllowAtMostNCallsCA, uid: Microsoft.Quantum.Diagnostics.AllowAtMostNCallsCA}
  - {name: AllowAtMostNQubits, uid: Microsoft.Quantum.Diagnostics.AllowAtMostNQubits}
  - {name: AssertAllZero, uid: Microsoft.Quantum.Diagnostics.AssertAllZero}
  - {name: AssertAllZeroWithinTolerance, uid: Microsoft.Quantum.Diagnostics.AssertAllZeroWithinTolerance}
  - {name: AssertMeasurement, uid: Microsoft.Quantum.Diagnostics.AssertMeasurement}
  - {name: AssertMeasurementProbability, uid: Microsoft.Quantum.Diagnostics.AssertMeasurementProbability}
  - {name: AssertOperationsEqualInPlace, uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlace}
  - {name: AssertOperationsEqualInPlaceCompBasis, uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualInPlaceCompBasis}
  - {name: AssertOperationsEqualReferenced, uid: Microsoft.Quantum.Diagnostics.AssertOperationsEqualReferenced}
  - {name: AssertPhase, uid: Microsoft.Quantum.Diagnostics.AssertPhase}
  - {name: AssertQubit, uid: Microsoft.Quantum.Diagnostics.AssertQubit}
  - {name: AssertQubitIsInStateWithinTolerance, uid: Microsoft.Quantum.Diagnostics.AssertQubitIsInStateWithinTolerance}
  - {name: AssertQubitWithinTolerance, uid: Microsoft.Quantum.Diagnostics.AssertQubitWithinTolerance}
  - {name: Contradiction, uid: Microsoft.Quantum.Diagnostics.Contradiction}
  - {name: DumpMachine, uid: Microsoft.Quantum.Diagnostics.DumpMachine}
  - {name: DumpOperation, uid: Microsoft.Quantum.Diagnostics.DumpOperation}
  - {name: DumpReferenceAndTarget, uid: Microsoft.Quantum.Diagnostics.DumpReferenceAndTarget}
  - {name: DumpRegister, uid: Microsoft.Quantum.Diagnostics.DumpRegister}
  - {name: EnableTestingViaName, uid: Microsoft.Quantum.Diagnostics.EnableTestingViaName}
  - {name: EqualityFactB, uid: Microsoft.Quantum.Diagnostics.EqualityFactB}
  - {name: EqualityFactC, uid: Microsoft.Quantum.Diagnostics.EqualityFactC}
  - {name: EqualityFactCP, uid: Microsoft.Quantum.Diagnostics.EqualityFactCP}
  - {name: EqualityFactI, uid: Microsoft.Quantum.Diagnostics.EqualityFactI}
  - {name: EqualityFactL, uid: Microsoft.Quantum.Diagnostics.EqualityFactL}
  - {name: EqualityFactR, uid: Microsoft.Quantum.Diagnostics.EqualityFactR}
  - {name: EqualityWithinToleranceFact, uid: Microsoft.Quantum.Diagnostics.EqualityWithinToleranceFact}
  - {name: Fact, uid: Microsoft.Quantum.Diagnostics.Fact}
  - {name: FormattedFailure, uid: Microsoft.Quantum.Diagnostics.FormattedFailure}
  - {name: NearEqualityFactC, uid: Microsoft.Quantum.Diagnostics.NearEqualityFactC}
  - {name: NearEqualityFactCP, uid: Microsoft.Quantum.Diagnostics.NearEqualityFactCP}
  - {name: NearEqualityFactD, uid: Microsoft.Quantum.Diagnostics.NearEqualityFactD}
  - {name: Test, uid: Microsoft.Quantum.Diagnostics.Test}
  - {name: _assertEqualOnBasisVector, uid: Microsoft.Quantum.Diagnostics._assertEqualOnBasisVector}
  - {name: _flipToBasis, uid: Microsoft.Quantum.Diagnostics._flipToBasis}
  - {name: _iterateThroughCartesianPower, uid: Microsoft.Quantum.Diagnostics._iterateThroughCartesianPower}
  - {name: _prepareEntangledState, uid: Microsoft.Quantum.Diagnostics._prepareEntangledState}
  name: Microsoft.Quantum.Diagnostics
  uid: Microsoft.Quantum.Diagnostics
- items:
  - {name: GetQubitsAvailableToBorrow, uid: Microsoft.Quantum.Environment.GetQubitsAvailableToBorrow}
  - {name: GetQubitsAvailableToUse, uid: Microsoft.Quantum.Environment.GetQubitsAvailableToUse}
  name: Microsoft.Quantum.Environment
  uid: Microsoft.Quantum.Environment
- items:
  - {name: ApplyBitFlipEncoder, uid: Microsoft.Quantum.ErrorCorrection.ApplyBitFlipEncoder}
  - {name: BitFlipCode, uid: Microsoft.Quantum.ErrorCorrection.BitFlipCode}
  - {name: BitFlipRecoveryFn, uid: Microsoft.Quantum.ErrorCorrection.BitFlipRecoveryFn}
  - {name: CSS, uid: Microsoft.Quantum.ErrorCorrection.CSS}
  - {name: DecodeFromBitFlipCode, uid: Microsoft.Quantum.ErrorCorrection.DecodeFromBitFlipCode}
  - {name: DecodeFromFiveQubitCode, uid: Microsoft.Quantum.ErrorCorrection.DecodeFromFiveQubitCode}
  - {name: DecodeFromSteaneCode, uid: Microsoft.Quantum.ErrorCorrection.DecodeFromSteaneCode}
  - {name: DecodeOp, uid: Microsoft.Quantum.ErrorCorrection.DecodeOp}
  - {name: EncodeIntoBitFlipCode, uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoBitFlipCode}
  - {name: EncodeIntoFiveQubitCode, uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoFiveQubitCode}
  - {name: EncodeIntoSteaneCode, uid: Microsoft.Quantum.ErrorCorrection.EncodeIntoSteaneCode}
  - {name: EncodeOp, uid: Microsoft.Quantum.ErrorCorrection.EncodeOp}
  - {name: FiveQubitCode, uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCode}
  - {name: FiveQubitCodeEncoderImpl, uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeEncoderImpl}
  - {name: FiveQubitCodeRecoveryFn, uid: Microsoft.Quantum.ErrorCorrection.FiveQubitCodeRecoveryFn}
  - {name: InjectPi4YRotation, uid: Microsoft.Quantum.ErrorCorrection.InjectPi4YRotation}
  - {name: KnillDistill, uid: Microsoft.Quantum.ErrorCorrection.KnillDistill}
  - {name: LogicalRegister, uid: Microsoft.Quantum.ErrorCorrection.LogicalRegister}
  - {name: MeasureStabilizerGenerators, uid: Microsoft.Quantum.ErrorCorrection.MeasureStabilizerGenerators}
  - {name: QECC, uid: Microsoft.Quantum.ErrorCorrection.QECC}
  - {name: Recover, uid: Microsoft.Quantum.ErrorCorrection.Recover}
  - {name: RecoverCSS, uid: Microsoft.Quantum.ErrorCorrection.RecoverCSS}
  - {name: RecoveryFn, uid: Microsoft.Quantum.ErrorCorrection.RecoveryFn}
  - {name: SteaneCode, uid: Microsoft.Quantum.ErrorCorrection.SteaneCode}
  - {name: SteaneCodeEncoderImpl, uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeEncoderImpl}
  - {name: SteaneCodeRecoveryFns, uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryFns}
  - {name: SteaneCodeRecoveryX, uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryX}
  - {name: SteaneCodeRecoveryZ, uid: Microsoft.Quantum.ErrorCorrection.SteaneCodeRecoveryZ}
  - {name: Syndrome, uid: Microsoft.Quantum.ErrorCorrection.Syndrome}
  - {name: SyndromeMeasOp, uid: Microsoft.Quantum.ErrorCorrection.SyndromeMeasOp}
  - {name: TableLookupRecovery, uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecovery}
  - {name: TableLookupRecoveryImpl, uid: Microsoft.Quantum.ErrorCorrection.TableLookupRecoveryImpl}
  - {name: _ExtractLogicalQubitFromSteaneCode, uid: Microsoft.Quantum.ErrorCorrection._ExtractLogicalQubitFromSteaneCode}
  name: Microsoft.Quantum.ErrorCorrection
  uid: Microsoft.Quantum.ErrorCorrection
- items:
  - {name: And, uid: Microsoft.Quantum.Extensions.Bitwise.And}
  - {name: Not, uid: Microsoft.Quantum.Extensions.Bitwise.Not}
  - {name: Or, uid: Microsoft.Quantum.Extensions.Bitwise.Or}
  - {name: Parity, uid: Microsoft.Quantum.Extensions.Bitwise.Parity}
  - {name: XBits, uid: Microsoft.Quantum.Extensions.Bitwise.XBits}
  - {name: Xor, uid: Microsoft.Quantum.Extensions.Bitwise.Xor}
  - {name: ZBits, uid: Microsoft.Quantum.Extensions.Bitwise.ZBits}
  name: Microsoft.Quantum.Extensions.Bitwise
  uid: Microsoft.Quantum.Extensions.Bitwise
- items:
  - {name: BigIntToBools, uid: Microsoft.Quantum.Extensions.Convert.BigIntToBools}
  - {name: BoolsToBigInt, uid: Microsoft.Quantum.Extensions.Convert.BoolsToBigInt}
  - {name: PauliArrayToInt, uid: Microsoft.Quantum.Extensions.Convert.PauliArrayToInt}
  - {name: ToBigInt, uid: Microsoft.Quantum.Extensions.Convert.ToBigInt}
  - {name: ToDouble, uid: Microsoft.Quantum.Extensions.Convert.ToDouble}
  - {name: ToStringB, uid: Microsoft.Quantum.Extensions.Convert.ToStringB}
  - {name: ToStringD, uid: Microsoft.Quantum.Extensions.Convert.ToStringD}
  - {name: ToStringDFormat, uid: Microsoft.Quantum.Extensions.Convert.ToStringDFormat}
  - {name: ToStringI, uid: Microsoft.Quantum.Extensions.Convert.ToStringI}
  - {name: ToStringIFormat, uid: Microsoft.Quantum.Extensions.Convert.ToStringIFormat}
  name: Microsoft.Quantum.Extensions.Convert
  uid: Microsoft.Quantum.Extensions.Convert
- items:
  - {name: DumpMachine, uid: Microsoft.Quantum.Extensions.Diagnostics.DumpMachine}
  - {name: DumpRegister, uid: Microsoft.Quantum.Extensions.Diagnostics.DumpRegister}
  name: Microsoft.Quantum.Extensions.Diagnostics
  uid: Microsoft.Quantum.Extensions.Diagnostics
- items:
  - {name: AbsB, uid: Microsoft.Quantum.Extensions.Math.AbsB}
  - {name: AbsD, uid: Microsoft.Quantum.Extensions.Math.AbsD}
  - {name: AbsI, uid: Microsoft.Quantum.Extensions.Math.AbsI}
  - {name: ArcCos, uid: Microsoft.Quantum.Extensions.Math.ArcCos}
  - {name: ArcSin, uid: Microsoft.Quantum.Extensions.Math.ArcSin}
  - {name: ArcTan, uid: Microsoft.Quantum.Extensions.Math.ArcTan}
  - {name: ArcTan2, uid: Microsoft.Quantum.Extensions.Math.ArcTan2}
  - {name: Ceiling, uid: Microsoft.Quantum.Extensions.Math.Ceiling}
  - {name: Cos, uid: Microsoft.Quantum.Extensions.Math.Cos}
  - {name: Cosh, uid: Microsoft.Quantum.Extensions.Math.Cosh}
  - {name: DivRemB, uid: Microsoft.Quantum.Extensions.Math.DivRemB}
  - {name: E, uid: Microsoft.Quantum.Extensions.Math.E}
  - {name: ExpD, uid: Microsoft.Quantum.Extensions.Math.ExpD}
  - {name: Floor, uid: Microsoft.Quantum.Extensions.Math.Floor}
  - {name: IEEERemainder, uid: Microsoft.Quantum.Extensions.Math.IEEERemainder}
  - {name: Log, uid: Microsoft.Quantum.Extensions.Math.Log}
  - {name: Log10, uid: Microsoft.Quantum.Extensions.Math.Log10}
  - {name: MaxB, uid: Microsoft.Quantum.Extensions.Math.MaxB}
  - {name: MaxD, uid: Microsoft.Quantum.Extensions.Math.MaxD}
  - {name: MaxI, uid: Microsoft.Quantum.Extensions.Math.MaxI}
  - {name: MinB, uid: Microsoft.Quantum.Extensions.Math.MinB}
  - {name: MinD, uid: Microsoft.Quantum.Extensions.Math.MinD}
  - {name: MinI, uid: Microsoft.Quantum.Extensions.Math.MinI}
  - {name: ModPowB, uid: Microsoft.Quantum.Extensions.Math.ModPowB}
  - {name: PI, uid: Microsoft.Quantum.Extensions.Math.PI}
  - {name: PowD, uid: Microsoft.Quantum.Extensions.Math.PowD}
  - {name: Round, uid: Microsoft.Quantum.Extensions.Math.Round}
  - {name: SignB, uid: Microsoft.Quantum.Extensions.Math.SignB}
  - {name: SignD, uid: Microsoft.Quantum.Extensions.Math.SignD}
  - {name: SignI, uid: Microsoft.Quantum.Extensions.Math.SignI}
  - {name: Sin, uid: Microsoft.Quantum.Extensions.Math.Sin}
  - {name: Sinh, uid: Microsoft.Quantum.Extensions.Math.Sinh}
  - {name: Sqrt, uid: Microsoft.Quantum.Extensions.Math.Sqrt}
  - {name: Tan, uid: Microsoft.Quantum.Extensions.Math.Tan}
  - {name: Tanh, uid: Microsoft.Quantum.Extensions.Math.Tanh}
  - {name: Truncate, uid: Microsoft.Quantum.Extensions.Math.Truncate}
  name: Microsoft.Quantum.Extensions.Math
  uid: Microsoft.Quantum.Extensions.Math
- items:
  - {name: AssertAllZero, uid: Microsoft.Quantum.Extensions.Testing.AssertAllZero}
  - {name: AssertAllZeroTol, uid: Microsoft.Quantum.Extensions.Testing.AssertAllZeroTol}
  - {name: AssertOperationsEqualInPlace, uid: Microsoft.Quantum.Extensions.Testing.AssertOperationsEqualInPlace}
  - {name: AssertOperationsEqualInPlaceCompBasis, uid: Microsoft.Quantum.Extensions.Testing.AssertOperationsEqualInPlaceCompBasis}
  - {name: AssertOperationsEqualReferenced, uid: Microsoft.Quantum.Extensions.Testing.AssertOperationsEqualReferenced}
  - {name: AssertQubit, uid: Microsoft.Quantum.Extensions.Testing.AssertQubit}
  - {name: AssertQubitState, uid: Microsoft.Quantum.Extensions.Testing.AssertQubitState}
  - {name: AssertQubitTol, uid: Microsoft.Quantum.Extensions.Testing.AssertQubitTol}
  name: Microsoft.Quantum.Extensions.Testing
  uid: Microsoft.Quantum.Extensions.Testing
- items:
  - {name: Assert, uid: Microsoft.Quantum.Intrinsic.Assert}
  - {name: AssertProb, uid: Microsoft.Quantum.Intrinsic.AssertProb}
  - {name: CCNOT, uid: Microsoft.Quantum.Intrinsic.CCNOT}
  - {name: CNOT, uid: Microsoft.Quantum.Intrinsic.CNOT}
  - {name: Exp, uid: Microsoft.Quantum.Intrinsic.Exp}
  - {name: ExpFrac, uid: Microsoft.Quantum.Intrinsic.ExpFrac}
  - {name: H, uid: Microsoft.Quantum.Intrinsic.H}
  - {name: I, uid: Microsoft.Quantum.Intrinsic.I}
  - {name: M, uid: Microsoft.Quantum.Intrinsic.M}
  - {name: Measure, uid: Microsoft.Quantum.Intrinsic.Measure}
  - {name: Message, uid: Microsoft.Quantum.Intrinsic.Message}
  - {name: R, uid: Microsoft.Quantum.Intrinsic.R}
  - {name: R1, uid: Microsoft.Quantum.Intrinsic.R1}
  - {name: R1Frac, uid: Microsoft.Quantum.Intrinsic.R1Frac}
  - {name: RFrac, uid: Microsoft.Quantum.Intrinsic.RFrac}
  - {name: Random, uid: Microsoft.Quantum.Intrinsic.Random}
  - {name: Reset, uid: Microsoft.Quantum.Intrinsic.Reset}
  - {name: ResetAll, uid: Microsoft.Quantum.Intrinsic.ResetAll}
  - {name: Rx, uid: Microsoft.Quantum.Intrinsic.Rx}
  - {name: Ry, uid: Microsoft.Quantum.Intrinsic.Ry}
  - {name: Rz, uid: Microsoft.Quantum.Intrinsic.Rz}
  - {name: S, uid: Microsoft.Quantum.Intrinsic.S}
  - {name: SWAP, uid: Microsoft.Quantum.Intrinsic.SWAP}
  - {name: T, uid: Microsoft.Quantum.Intrinsic.T}
  - {name: X, uid: Microsoft.Quantum.Intrinsic.X}
  - {name: Y, uid: Microsoft.Quantum.Intrinsic.Y}
  - {name: Z, uid: Microsoft.Quantum.Intrinsic.Z}
  name: Microsoft.Quantum.Intrinsic
  uid: Microsoft.Quantum.Intrinsic
- items:
  - {name: And, uid: Microsoft.Quantum.Logical.And}
  - {name: Conditioned, uid: Microsoft.Quantum.Logical.Conditioned}
  - {name: EqualB, uid: Microsoft.Quantum.Logical.EqualB}
  - {name: EqualC, uid: Microsoft.Quantum.Logical.EqualC}
  - {name: EqualCP, uid: Microsoft.Quantum.Logical.EqualCP}
  - {name: EqualD, uid: Microsoft.Quantum.Logical.EqualD}
  - {name: EqualI, uid: Microsoft.Quantum.Logical.EqualI}
  - {name: EqualL, uid: Microsoft.Quantum.Logical.EqualL}
  - {name: EqualR, uid: Microsoft.Quantum.Logical.EqualR}
  - {name: GreaterThanD, uid: Microsoft.Quantum.Logical.GreaterThanD}
  - {name: GreaterThanI, uid: Microsoft.Quantum.Logical.GreaterThanI}
  - {name: GreaterThanL, uid: Microsoft.Quantum.Logical.GreaterThanL}
  - {name: GreaterThanOrEqualD, uid: Microsoft.Quantum.Logical.GreaterThanOrEqualD}
  - {name: GreaterThanOrEqualI, uid: Microsoft.Quantum.Logical.GreaterThanOrEqualI}
  - {name: GreaterThanOrEqualL, uid: Microsoft.Quantum.Logical.GreaterThanOrEqualL}
  - {name: LessThanD, uid: Microsoft.Quantum.Logical.LessThanD}
  - {name: LessThanI, uid: Microsoft.Quantum.Logical.LessThanI}
  - {name: LessThanL, uid: Microsoft.Quantum.Logical.LessThanL}
  - {name: LessThanLexographic, uid: Microsoft.Quantum.Logical.LessThanLexographic}
  - {name: LessThanOrEqualD, uid: Microsoft.Quantum.Logical.LessThanOrEqualD}
  - {name: LessThanOrEqualI, uid: Microsoft.Quantum.Logical.LessThanOrEqualI}
  - {name: LessThanOrEqualL, uid: Microsoft.Quantum.Logical.LessThanOrEqualL}
  - {name: LexographicComparison, uid: Microsoft.Quantum.Logical.LexographicComparison}
  - {name: NearlyEqualD, uid: Microsoft.Quantum.Logical.NearlyEqualD}
  - {name: Not, uid: Microsoft.Quantum.Logical.Not}
  - {name: NotEqualB, uid: Microsoft.Quantum.Logical.NotEqualB}
  - {name: NotEqualC, uid: Microsoft.Quantum.Logical.NotEqualC}
  - {name: NotEqualCP, uid: Microsoft.Quantum.Logical.NotEqualCP}
  - {name: NotEqualD, uid: Microsoft.Quantum.Logical.NotEqualD}
  - {name: NotEqualI, uid: Microsoft.Quantum.Logical.NotEqualI}
  - {name: NotEqualL, uid: Microsoft.Quantum.Logical.NotEqualL}
  - {name: NotEqualR, uid: Microsoft.Quantum.Logical.NotEqualR}
  - {name: NotNearlyEqualD, uid: Microsoft.Quantum.Logical.NotNearlyEqualD}
  - {name: Or, uid: Microsoft.Quantum.Logical.Or}
  - {name: Xor, uid: Microsoft.Quantum.Logical.Xor}
  name: Microsoft.Quantum.Logical
  uid: Microsoft.Quantum.Logical
- items:
  - {name: ApplySequentialClassifier, uid: Microsoft.Quantum.MachineLearning.ApplySequentialClassifier}
  - {name: ApproximateInputEncoder, uid: Microsoft.Quantum.MachineLearning.ApproximateInputEncoder}
  - {name: CombinedStructure, uid: Microsoft.Quantum.MachineLearning.CombinedStructure}
  - {name: ControlledRotation, uid: Microsoft.Quantum.MachineLearning.ControlledRotation}
  - {name: CyclicEntanglingLayer, uid: Microsoft.Quantum.MachineLearning.CyclicEntanglingLayer}
  - {name: DefaultTrainingOptions, uid: Microsoft.Quantum.MachineLearning.DefaultTrainingOptions}
  - {name: EstimateClassificationProbabilities, uid: Microsoft.Quantum.MachineLearning.EstimateClassificationProbabilities}
  - {name: EstimateClassificationProbability, uid: Microsoft.Quantum.MachineLearning.EstimateClassificationProbability}
  - {name: EstimateGradient, uid: Microsoft.Quantum.MachineLearning.EstimateGradient}
  - {name: FeatureRegisterSize, uid: Microsoft.Quantum.MachineLearning.FeatureRegisterSize}
  - {name: InferredLabel, uid: Microsoft.Quantum.MachineLearning.InferredLabel}
  - {name: InferredLabels, uid: Microsoft.Quantum.MachineLearning.InferredLabels}
  - {name: InputEncoder, uid: Microsoft.Quantum.MachineLearning.InputEncoder}
  - {name: LabeledSample, uid: Microsoft.Quantum.MachineLearning.LabeledSample}
  - {name: LocalRotationsLayer, uid: Microsoft.Quantum.MachineLearning.LocalRotationsLayer}
  - {name: Misclassifications, uid: Microsoft.Quantum.MachineLearning.Misclassifications}
  - {name: NMisclassifications, uid: Microsoft.Quantum.MachineLearning.NMisclassifications}
  - {name: NQubitsRequired, uid: Microsoft.Quantum.MachineLearning.NQubitsRequired}
  - {name: PartialRotationsLayer, uid: Microsoft.Quantum.MachineLearning.PartialRotationsLayer}
  - {name: Sampled, uid: Microsoft.Quantum.MachineLearning.Sampled}
  - {name: SamplingSchedule, uid: Microsoft.Quantum.MachineLearning.SamplingSchedule}
  - {name: ScheduleLength, uid: Microsoft.Quantum.MachineLearning.ScheduleLength}
  - {name: SequentialModel, uid: Microsoft.Quantum.MachineLearning.SequentialModel}
  - {name: StateGenerator, uid: Microsoft.Quantum.MachineLearning.StateGenerator}
  - {name: TrainSequentialClassifier, uid: Microsoft.Quantum.MachineLearning.TrainSequentialClassifier}
  - {name: TrainSequentialClassifierAtModel, uid: Microsoft.Quantum.MachineLearning.TrainSequentialClassifierAtModel}
  - {name: TrainingOptions, uid: Microsoft.Quantum.MachineLearning.TrainingOptions}
  - {name: ValidateSequentialClassifier, uid: Microsoft.Quantum.MachineLearning.ValidateSequentialClassifier}
  - {name: ValidationResults, uid: Microsoft.Quantum.MachineLearning.ValidationResults}
  - {name: _AllNearlyEqualD, uid: Microsoft.Quantum.MachineLearning._AllNearlyEqualD}
  - {name: _ApplyLEOperationToRawRegister, uid: Microsoft.Quantum.MachineLearning._ApplyLEOperationToRawRegister}
  - {name: _ApplyTwoQubitCase, uid: Microsoft.Quantum.MachineLearning._ApplyTwoQubitCase}
  - {name: _CallFlipped, uid: Microsoft.Quantum.MachineLearning._CallFlipped}
  - {name: _CanApplyTwoQubitCase, uid: Microsoft.Quantum.MachineLearning._CanApplyTwoQubitCase}
  - {name: _EncodeSample, uid: Microsoft.Quantum.MachineLearning._EncodeSample}
  - {name: _EstimateDerivativeWithParameterShift, uid: Microsoft.Quantum.MachineLearning._EstimateDerivativeWithParameterShift}
  - {name: _Features, uid: Microsoft.Quantum.MachineLearning._Features}
  - {name: _Flipped, uid: Microsoft.Quantum.MachineLearning._Flipped}
  - {name: _Label, uid: Microsoft.Quantum.MachineLearning._Label}
  - {name: _MisclassificationRate, uid: Microsoft.Quantum.MachineLearning._MisclassificationRate}
  - {name: _NegativeLocations, uid: Microsoft.Quantum.MachineLearning._NegativeLocations}
  - {name: _PrepareClassification, uid: Microsoft.Quantum.MachineLearning._PrepareClassification}
  - {name: _RandomlyRescale, uid: Microsoft.Quantum.MachineLearning._RandomlyRescale}
  - {name: _ReflectAboutNegativeCoefficients, uid: Microsoft.Quantum.MachineLearning._ReflectAboutNegativeCoefficients}
  - {name: _RunSingleTrainingEpoch, uid: Microsoft.Quantum.MachineLearning._RunSingleTrainingEpoch}
  - {name: _RunSingleTrainingStep, uid: Microsoft.Quantum.MachineLearning._RunSingleTrainingStep}
  - {name: _TailMeasurement, uid: Microsoft.Quantum.MachineLearning._TailMeasurement}
  - {name: _TrainSequentialClassifierAtModel, uid: Microsoft.Quantum.MachineLearning._TrainSequentialClassifierAtModel}
  - {name: _UncontrolledSpanSequence, uid: Microsoft.Quantum.MachineLearning._UncontrolledSpanSequence}
  - {name: _Unnegate, uid: Microsoft.Quantum.MachineLearning._Unnegate}
  - {name: _UpdatedBias, uid: Microsoft.Quantum.MachineLearning._UpdatedBias}
  name: Microsoft.Quantum.MachineLearning
  uid: Microsoft.Quantum.MachineLearning
- items:
  - {name: IrisTrainingData, uid: Microsoft.Quantum.MachineLearning.Datasets.IrisTrainingData}
  - {name: WineData, uid: Microsoft.Quantum.MachineLearning.Datasets.WineData}
  name: Microsoft.Quantum.MachineLearning.Datasets
  uid: Microsoft.Quantum.MachineLearning.Datasets
- items:
  - {name: AbsComplex, uid: Microsoft.Quantum.Math.AbsComplex}
  - {name: AbsComplexPolar, uid: Microsoft.Quantum.Math.AbsComplexPolar}
  - {name: AbsD, uid: Microsoft.Quantum.Math.AbsD}
  - {name: AbsI, uid: Microsoft.Quantum.Math.AbsI}
  - {name: AbsL, uid: Microsoft.Quantum.Math.AbsL}
  - {name: AbsSquaredComplex, uid: Microsoft.Quantum.Math.AbsSquaredComplex}
  - {name: AbsSquaredComplexPolar, uid: Microsoft.Quantum.Math.AbsSquaredComplexPolar}
  - {name: AccumulatedBitsizeI, uid: Microsoft.Quantum.Math.AccumulatedBitsizeI}
  - {name: AccumulatedBitsizeL, uid: Microsoft.Quantum.Math.AccumulatedBitsizeL}
  - {name: ArcCos, uid: Microsoft.Quantum.Math.ArcCos}
  - {name: ArcCosh, uid: Microsoft.Quantum.Math.ArcCosh}
  - {name: ArcSin, uid: Microsoft.Quantum.Math.ArcSin}
  - {name: ArcSinh, uid: Microsoft.Quantum.Math.ArcSinh}
  - {name: ArcTan, uid: Microsoft.Quantum.Math.ArcTan}
  - {name: ArcTan2, uid: Microsoft.Quantum.Math.ArcTan2}
  - {name: ArcTanh, uid: Microsoft.Quantum.Math.ArcTanh}
  - {name: ArgComplex, uid: Microsoft.Quantum.Math.ArgComplex}
  - {name: ArgComplexPolar, uid: Microsoft.Quantum.Math.ArgComplexPolar}
  - {name: BigFraction, uid: Microsoft.Quantum.Math.BigFraction}
  - {name: BitSizeI, uid: Microsoft.Quantum.Math.BitSizeI}
  - {name: BitSizeL, uid: Microsoft.Quantum.Math.BitSizeL}
  - {name: Ceiling, uid: Microsoft.Quantum.Math.Ceiling}
  - {name: Complex, uid: Microsoft.Quantum.Math.Complex}
  - {name: ComplexAsComplexPolar, uid: Microsoft.Quantum.Math.ComplexAsComplexPolar}
  - {name: ComplexPolar, uid: Microsoft.Quantum.Math.ComplexPolar}
  - {name: ComplexPolarAsComplex, uid: Microsoft.Quantum.Math.ComplexPolarAsComplex}
  - {name: ContinuedFractionConvergentI, uid: Microsoft.Quantum.Math.ContinuedFractionConvergentI}
  - {name: ContinuedFractionConvergentL, uid: Microsoft.Quantum.Math.ContinuedFractionConvergentL}
  - {name: Cos, uid: Microsoft.Quantum.Math.Cos}
  - {name: Cosh, uid: Microsoft.Quantum.Math.Cosh}
  - {name: DivRemL, uid: Microsoft.Quantum.Math.DivRemL}
  - {name: DividedByC, uid: Microsoft.Quantum.Math.DividedByC}
  - {name: DividedByCP, uid: Microsoft.Quantum.Math.DividedByCP}
  - {name: DividedByD, uid: Microsoft.Quantum.Math.DividedByD}
  - {name: DividedByI, uid: Microsoft.Quantum.Math.DividedByI}
  - {name: DividedByL, uid: Microsoft.Quantum.Math.DividedByL}
  - {name: E, uid: Microsoft.Quantum.Math.E}
  - {name: ExpD, uid: Microsoft.Quantum.Math.ExpD}
  - {name: ExpModI, uid: Microsoft.Quantum.Math.ExpModI}
  - {name: ExpModL, uid: Microsoft.Quantum.Math.ExpModL}
  - {name: ExtendedGreatestCommonDivisorI, uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorI}
  - {name: ExtendedGreatestCommonDivisorL, uid: Microsoft.Quantum.Math.ExtendedGreatestCommonDivisorL}
  - {name: Floor, uid: Microsoft.Quantum.Math.Floor}
  - {name: Fraction, uid: Microsoft.Quantum.Math.Fraction}
  - {name: GreatestCommonDivisorI, uid: Microsoft.Quantum.Math.GreatestCommonDivisorI}
  - {name: GreatestCommonDivisorL, uid: Microsoft.Quantum.Math.GreatestCommonDivisorL}
  - {name: IEEERemainder, uid: Microsoft.Quantum.Math.IEEERemainder}
  - {name: InverseModI, uid: Microsoft.Quantum.Math.InverseModI}
  - {name: InverseModL, uid: Microsoft.Quantum.Math.InverseModL}
  - {name: IsCoprimeI, uid: Microsoft.Quantum.Math.IsCoprimeI}
  - {name: IsCoprimeL, uid: Microsoft.Quantum.Math.IsCoprimeL}
  - {name: Lg, uid: Microsoft.Quantum.Math.Lg}
  - {name: Log, uid: Microsoft.Quantum.Math.Log}
  - {name: Log10, uid: Microsoft.Quantum.Math.Log10}
  - {name: LogOf2, uid: Microsoft.Quantum.Math.LogOf2}
  - {name: Max, uid: Microsoft.Quantum.Math.Max}
  - {name: MaxD, uid: Microsoft.Quantum.Math.MaxD}
  - {name: MaxI, uid: Microsoft.Quantum.Math.MaxI}
  - {name: MaxL, uid: Microsoft.Quantum.Math.MaxL}
  - {name: Min, uid: Microsoft.Quantum.Math.Min}
  - {name: MinD, uid: Microsoft.Quantum.Math.MinD}
  - {name: MinI, uid: Microsoft.Quantum.Math.MinI}
  - {name: MinL, uid: Microsoft.Quantum.Math.MinL}
  - {name: MinusC, uid: Microsoft.Quantum.Math.MinusC}
  - {name: MinusCP, uid: Microsoft.Quantum.Math.MinusCP}
  - {name: MinusD, uid: Microsoft.Quantum.Math.MinusD}
  - {name: MinusI, uid: Microsoft.Quantum.Math.MinusI}
  - {name: MinusL, uid: Microsoft.Quantum.Math.MinusL}
  - {name: ModI, uid: Microsoft.Quantum.Math.ModI}
  - {name: ModL, uid: Microsoft.Quantum.Math.ModL}
  - {name: ModPowL, uid: Microsoft.Quantum.Math.ModPowL}
  - {name: ModulusI, uid: Microsoft.Quantum.Math.ModulusI}
  - {name: ModulusL, uid: Microsoft.Quantum.Math.ModulusL}
  - {name: NegationC, uid: Microsoft.Quantum.Math.NegationC}
  - {name: NegationCP, uid: Microsoft.Quantum.Math.NegationCP}
  - {name: NegationD, uid: Microsoft.Quantum.Math.NegationD}
  - {name: NegationI, uid: Microsoft.Quantum.Math.NegationI}
  - {name: NegationL, uid: Microsoft.Quantum.Math.NegationL}
  - {name: PI, uid: Microsoft.Quantum.Math.PI}
  - {name: PNorm, uid: Microsoft.Quantum.Math.PNorm}
  - {name: PNormalized, uid: Microsoft.Quantum.Math.PNormalized}
  - {name: PlusA, uid: Microsoft.Quantum.Math.PlusA}
  - {name: PlusC, uid: Microsoft.Quantum.Math.PlusC}
  - {name: PlusCP, uid: Microsoft.Quantum.Math.PlusCP}
  - {name: PlusD, uid: Microsoft.Quantum.Math.PlusD}
  - {name: PlusI, uid: Microsoft.Quantum.Math.PlusI}
  - {name: PlusL, uid: Microsoft.Quantum.Math.PlusL}
  - {name: PowC, uid: Microsoft.Quantum.Math.PowC}
  - {name: PowCAsCP, uid: Microsoft.Quantum.Math.PowCAsCP}
  - {name: PowCP, uid: Microsoft.Quantum.Math.PowCP}
  - {name: PowD, uid: Microsoft.Quantum.Math.PowD}
  - {name: PowI, uid: Microsoft.Quantum.Math.PowI}
  - {name: PowL, uid: Microsoft.Quantum.Math.PowL}
  - {name: RandomInt, uid: Microsoft.Quantum.Math.RandomInt}
  - {name: RandomIntPow2, uid: Microsoft.Quantum.Math.RandomIntPow2}
  - {name: RandomReal, uid: Microsoft.Quantum.Math.RandomReal}
  - {name: RandomSingleQubitPauli, uid: Microsoft.Quantum.Math.RandomSingleQubitPauli}
  - {name: RealMod, uid: Microsoft.Quantum.Math.RealMod}
  - {name: Round, uid: Microsoft.Quantum.Math.Round}
  - {name: SignD, uid: Microsoft.Quantum.Math.SignD}
  - {name: SignI, uid: Microsoft.Quantum.Math.SignI}
  - {name: SignL, uid: Microsoft.Quantum.Math.SignL}
  - {name: Sin, uid: Microsoft.Quantum.Math.Sin}
  - {name: Sinh, uid: Microsoft.Quantum.Math.Sinh}
  - {name: Sqrt, uid: Microsoft.Quantum.Math.Sqrt}
  - {name: SquaredNorm, uid: Microsoft.Quantum.Math.SquaredNorm}
  - {name: Tan, uid: Microsoft.Quantum.Math.Tan}
  - {name: Tanh, uid: Microsoft.Quantum.Math.Tanh}
  - {name: TimesC, uid: Microsoft.Quantum.Math.TimesC}
  - {name: TimesCP, uid: Microsoft.Quantum.Math.TimesCP}
  - {name: TimesD, uid: Microsoft.Quantum.Math.TimesD}
  - {name: TimesI, uid: Microsoft.Quantum.Math.TimesI}
  - {name: TimesL, uid: Microsoft.Quantum.Math.TimesL}
  - {name: Truncate, uid: Microsoft.Quantum.Math.Truncate}
  - {name: _ContinuedFractionConvergentI, uid: Microsoft.Quantum.Math._ContinuedFractionConvergentI}
  - {name: _ContinuedFractionConvergentL, uid: Microsoft.Quantum.Math._ContinuedFractionConvergentL}
  - {name: _ExtendedGreatestCommonDivisorI, uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorI}
  - {name: _ExtendedGreatestCommonDivisorL, uid: Microsoft.Quantum.Math._ExtendedGreatestCommonDivisorL}
  name: Microsoft.Quantum.Math
  uid: Microsoft.Quantum.Math
- items:
  - {name: BasisChangeZtoY, uid: Microsoft.Quantum.Measurement.BasisChangeZtoY}
  - {name: MResetX, uid: Microsoft.Quantum.Measurement.MResetX}
  - {name: MResetY, uid: Microsoft.Quantum.Measurement.MResetY}
  - {name: MResetZ, uid: Microsoft.Quantum.Measurement.MResetZ}
  - {name: MeasureAllZ, uid: Microsoft.Quantum.Measurement.MeasureAllZ}
  - {name: MeasurePaulis, uid: Microsoft.Quantum.Measurement.MeasurePaulis}
  - {name: MeasureWithScratch, uid: Microsoft.Quantum.Measurement.MeasureWithScratch}
  - {name: MultiM, uid: Microsoft.Quantum.Measurement.MultiM}
  - {name: SetToBasisState, uid: Microsoft.Quantum.Measurement.SetToBasisState}
  name: Microsoft.Quantum.Measurement
  uid: Microsoft.Quantum.Measurement
- items:
  - {name: LocalUnivariateMinimum, uid: Microsoft.Quantum.Optimization.LocalUnivariateMinimum}
  - {name: Midpoint, uid: Microsoft.Quantum.Optimization.Midpoint}
  - {name: Probe, uid: Microsoft.Quantum.Optimization.Probe}
  - {name: UnivariateOptimizationResult, uid: Microsoft.Quantum.Optimization.UnivariateOptimizationResult}
  - {name: Width, uid: Microsoft.Quantum.Optimization.Width}
  name: Microsoft.Quantum.Optimization
  uid: Microsoft.Quantum.Optimization
- items:
  - {name: ApplyDeterministicStateOracleFromStateOracle, uid: Microsoft.Quantum.Oracles.ApplyDeterministicStateOracleFromStateOracle}
  - {name: ApplyObliviousOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles.ApplyObliviousOracleFromDeterministicStateOracle}
  - {name: ApplyStateOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles.ApplyStateOracleFromDeterministicStateOracle}
  - {name: ContinuousOracle, uid: Microsoft.Quantum.Oracles.ContinuousOracle}
  - {name: DeterministicStateOracle, uid: Microsoft.Quantum.Oracles.DeterministicStateOracle}
  - {name: DeterministicStateOracleFromStateOracle, uid: Microsoft.Quantum.Oracles.DeterministicStateOracleFromStateOracle}
  - {name: DiscreteOracle, uid: Microsoft.Quantum.Oracles.DiscreteOracle}
  - {name: ObliviousOracle, uid: Microsoft.Quantum.Oracles.ObliviousOracle}
  - {name: ObliviousOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles.ObliviousOracleFromDeterministicStateOracle}
  - {name: OracleToDiscrete, uid: Microsoft.Quantum.Oracles.OracleToDiscrete}
  - {name: ReflectionOracle, uid: Microsoft.Quantum.Oracles.ReflectionOracle}
  - {name: ReflectionOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles.ReflectionOracleFromDeterministicStateOracle}
  - {name: StateOracle, uid: Microsoft.Quantum.Oracles.StateOracle}
  - {name: StateOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles.StateOracleFromDeterministicStateOracle}
  - {name: _ReflectionOracleFromDeterministicStateOracle, uid: Microsoft.Quantum.Oracles._ReflectionOracleFromDeterministicStateOracle}
  name: Microsoft.Quantum.Oracles
  uid: Microsoft.Quantum.Oracles
- items:
  - {name: ApplyGlobalRotationStep, uid: Microsoft.Quantum.Preparation.ApplyGlobalRotationStep}
  - {name: ApplyMultiplexStep, uid: Microsoft.Quantum.Preparation.ApplyMultiplexStep}
  - {name: ApplyToLittleEndian, uid: Microsoft.Quantum.Preparation.ApplyToLittleEndian}
  - {name: ApproximatelyPrepareArbitraryState, uid: Microsoft.Quantum.Preparation.ApproximatelyPrepareArbitraryState}
  - {name: BlochSphereCoordinates, uid: Microsoft.Quantum.Preparation.BlochSphereCoordinates}
  - {name: PrepareArbitraryState, uid: Microsoft.Quantum.Preparation.PrepareArbitraryState}
  - {name: PrepareChoiState, uid: Microsoft.Quantum.Preparation.PrepareChoiState}
  - {name: PrepareChoiStateA, uid: Microsoft.Quantum.Preparation.PrepareChoiStateA}
  - {name: PrepareChoiStateC, uid: Microsoft.Quantum.Preparation.PrepareChoiStateC}
  - {name: PrepareChoiStateCA, uid: Microsoft.Quantum.Preparation.PrepareChoiStateCA}
  - {name: PrepareEntangledState, uid: Microsoft.Quantum.Preparation.PrepareEntangledState}
  - {name: PrepareIdentity, uid: Microsoft.Quantum.Preparation.PrepareIdentity}
  - {name: PrepareQuantumROMState, uid: Microsoft.Quantum.Preparation.PrepareQuantumROMState}
  - {name: PrepareQubit, uid: Microsoft.Quantum.Preparation.PrepareQubit}
  - {name: PrepareSingleQubitIdentity, uid: Microsoft.Quantum.Preparation.PrepareSingleQubitIdentity}
  - {name: PrepareUniformSuperposition, uid: Microsoft.Quantum.Preparation.PrepareUniformSuperposition}
  - {name: PrepareUniformSuperposition_, uid: Microsoft.Quantum.Preparation.PrepareUniformSuperposition_}
  - {name: QuantumROM, uid: Microsoft.Quantum.Preparation.QuantumROM}
  - {name: QuantumROMBitStringWriterByIndex, uid: Microsoft.Quantum.Preparation.QuantumROMBitStringWriterByIndex}
  - {name: QuantumROMQubitCount, uid: Microsoft.Quantum.Preparation.QuantumROMQubitCount}
  - {name: RangeLength, uid: Microsoft.Quantum.Preparation.RangeLength}
  - {name: RoundedDiscretizationCoefficients, uid: Microsoft.Quantum.Preparation.RoundedDiscretizationCoefficients}
  - {name: StatePreparationComplexCoefficients, uid: Microsoft.Quantum.Preparation.StatePreparationComplexCoefficients}
  - {name: StatePreparationPositiveCoefficients, uid: Microsoft.Quantum.Preparation.StatePreparationPositiveCoefficients}
  - {name: WriteQuantumROMBitString, uid: Microsoft.Quantum.Preparation.WriteQuantumROMBitString}
  - {name: _ApproximatelyUnprepareArbitraryStatePlan, uid: Microsoft.Quantum.Preparation._ApproximatelyUnprepareArbitraryStatePlan}
  - {name: _CompileApproximateArbitraryStatePreparation, uid: Microsoft.Quantum.Preparation._CompileApproximateArbitraryStatePreparation}
  - {name: _QuantumROMDiscretization, uid: Microsoft.Quantum.Preparation._QuantumROMDiscretization}
  - {name: _QuantumROMQubitManager, uid: Microsoft.Quantum.Preparation._QuantumROMQubitManager}
  - {name: _StatePreparationSBMComputeCoefficients, uid: Microsoft.Quantum.Preparation._StatePreparationSBMComputeCoefficients}
  name: Microsoft.Quantum.Preparation
  uid: Microsoft.Quantum.Preparation
- items:
  - {name: BigDiscreteDistribution, uid: Microsoft.Quantum.Random.BigDiscreteDistribution}
  - {name: CategoricalDistribution, uid: Microsoft.Quantum.Random.CategoricalDistribution}
  - {name: ComplexDistribution, uid: Microsoft.Quantum.Random.ComplexDistribution}
  - {name: ContinuousDistribution, uid: Microsoft.Quantum.Random.ContinuousDistribution}
  - {name: ContinuousUniformDistribution, uid: Microsoft.Quantum.Random.ContinuousUniformDistribution}
  - {name: Delay, uid: Microsoft.Quantum.Random.Delay}
  - {name: DiscreteDistribution, uid: Microsoft.Quantum.Random.DiscreteDistribution}
  - {name: DiscreteUniformDistribution, uid: Microsoft.Quantum.Random.DiscreteUniformDistribution}
  - {name: DrawCategorical, uid: Microsoft.Quantum.Random.DrawCategorical}
  - {name: DrawRandomBool, uid: Microsoft.Quantum.Random.DrawRandomBool}
  - {name: DrawRandomDouble, uid: Microsoft.Quantum.Random.DrawRandomDouble}
  - {name: DrawRandomInt, uid: Microsoft.Quantum.Random.DrawRandomInt}
  - {name: DrawRandomPauli, uid: Microsoft.Quantum.Random.DrawRandomPauli}
  - {name: DrawStandardNormalVariate, uid: Microsoft.Quantum.Random.DrawStandardNormalVariate}
  - {name: MaybeChooseElement, uid: Microsoft.Quantum.Random.MaybeChooseElement}
  - {name: NormalDistribution, uid: Microsoft.Quantum.Random.NormalDistribution}
  - {name: SampleTransformedContinuousDistribution, uid: Microsoft.Quantum.Random.SampleTransformedContinuousDistribution}
  - {name: StandardNormalDistribution, uid: Microsoft.Quantum.Random.StandardNormalDistribution}
  - {name: StandardTransformation, uid: Microsoft.Quantum.Random.StandardTransformation}
  - {name: TransformedContinuousDistribution, uid: Microsoft.Quantum.Random.TransformedContinuousDistribution}
  name: Microsoft.Quantum.Random
  uid: Microsoft.Quantum.Random
- items:
  - {name: RandomWalkPhaseEstimation, uid: Microsoft.Quantum.Research.Characterization.RandomWalkPhaseEstimation}
  - {name: _PrepAndMeasurePhaseEst, uid: Microsoft.Quantum.Research.Characterization._PrepAndMeasurePhaseEst}
  name: Microsoft.Quantum.Research.Characterization
  uid: Microsoft.Quantum.Research.Characterization
- items:
  - {name: ApplyBasisChange, uid: Microsoft.Quantum.Research.Chemistry.ApplyBasisChange}
  - {name: ApplyDeltaParity, uid: Microsoft.Quantum.Research.Chemistry.ApplyDeltaParity}
  - {name: JWOptimizedFermionEvolutionFunction, uid: Microsoft.Quantum.Research.Chemistry.JWOptimizedFermionEvolutionFunction}
  - {name: JWOptimizedGeneratorSystem, uid: Microsoft.Quantum.Research.Chemistry.JWOptimizedGeneratorSystem}
  - {name: JWOptimizedStatePreparation, uid: Microsoft.Quantum.Research.Chemistry.JWOptimizedStatePreparation}
  - {name: JordanWignerOptimizedFermionEvolutionSet, uid: Microsoft.Quantum.Research.Chemistry.JordanWignerOptimizedFermionEvolutionSet}
  - {name: OptimizedTrotterStepOracle, uid: Microsoft.Quantum.Research.Chemistry.OptimizedTrotterStepOracle}
  - {name: TransformZToX, uid: Microsoft.Quantum.Research.Chemistry.TransformZToX}
  - {name: TransformZToY, uid: Microsoft.Quantum.Research.Chemistry.TransformZToY}
  - {name: _ApplyOptimizedTrotterStep, uid: Microsoft.Quantum.Research.Chemistry._ApplyOptimizedTrotterStep}
  - {name: _DeltaParityCNOTbitstring, uid: Microsoft.Quantum.Research.Chemistry._DeltaParityCNOTbitstring}
  - {name: _JWOptimized0123Term, uid: Microsoft.Quantum.Research.Chemistry._JWOptimized0123Term}
  - {name: _JWOptimized0123TermImpl, uid: Microsoft.Quantum.Research.Chemistry._JWOptimized0123TermImpl}
  - {name: _JWOptimizedFermionEvolution, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedFermionEvolution}
  - {name: _JWOptimizedHpqTerm, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedHpqTerm}
  - {name: _JWOptimizedHpqTermImpl, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedHpqTermImpl}
  - {name: _JWOptimizedPQandPQQRTerm, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedPQandPQQRTerm}
  - {name: _JWOptimizedZ, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedZ}
  - {name: _JWOptimizedZTerm, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedZTerm}
  - {name: _JWOptimizedZZTerm, uid: Microsoft.Quantum.Research.Chemistry._JWOptimizedZZTerm}
  name: Microsoft.Quantum.Research.Chemistry
  uid: Microsoft.Quantum.Research.Chemistry
- items:
  - {name: AddGeneratorSystems, uid: Microsoft.Quantum.Simulation.AddGeneratorSystems}
  - {name: AdiabaticStateEnergyUnitary, uid: Microsoft.Quantum.Simulation.AdiabaticStateEnergyUnitary}
  - {name: ApplyBlockEncodingAsReflection, uid: Microsoft.Quantum.Simulation.ApplyBlockEncodingAsReflection}
  - {name: ApplyBlockEncodingByLCU, uid: Microsoft.Quantum.Simulation.ApplyBlockEncodingByLCU}
  - {name: ApplyBlockEncodingFromBEandQubit, uid: Microsoft.Quantum.Simulation.ApplyBlockEncodingFromBEandQubit}
  - {name: ApplyPauliLCUUnitary, uid: Microsoft.Quantum.Simulation.ApplyPauliLCUUnitary}
  - {name: ApplyQuantumWalkByQubitization, uid: Microsoft.Quantum.Simulation.ApplyQuantumWalkByQubitization}
  - {name: BlockEncoding, uid: Microsoft.Quantum.Simulation.BlockEncoding}
  - {name: BlockEncodingByLCU, uid: Microsoft.Quantum.Simulation.BlockEncodingByLCU}
  - {name: BlockEncodingReflection, uid: Microsoft.Quantum.Simulation.BlockEncodingReflection}
  - {name: BlockEncodingReflectionByLCU, uid: Microsoft.Quantum.Simulation.BlockEncodingReflectionByLCU}
  - {name: BlockEncodingToReflection, uid: Microsoft.Quantum.Simulation.BlockEncodingToReflection}
  - {name: EstimateEnergy, uid: Microsoft.Quantum.Simulation.EstimateEnergy}
  - {name: EstimateEnergyWithAdiabaticEvolution, uid: Microsoft.Quantum.Simulation.EstimateEnergyWithAdiabaticEvolution}
  - {name: EvolutionGenerator, uid: Microsoft.Quantum.Simulation.EvolutionGenerator}
  - {name: EvolutionSchedule, uid: Microsoft.Quantum.Simulation.EvolutionSchedule}
  - {name: EvolutionSet, uid: Microsoft.Quantum.Simulation.EvolutionSet}
  - {name: EvolutionUnitary, uid: Microsoft.Quantum.Simulation.EvolutionUnitary}
  - {name: GeneratorIndex, uid: Microsoft.Quantum.Simulation.GeneratorIndex}
  - {name: GeneratorSystem, uid: Microsoft.Quantum.Simulation.GeneratorSystem}
  - {name: GetGeneratorSystemFunction, uid: Microsoft.Quantum.Simulation.GetGeneratorSystemFunction}
  - {name: GetGeneratorSystemNTerms, uid: Microsoft.Quantum.Simulation.GetGeneratorSystemNTerms}
  - {name: IdentityGeneratorIndex, uid: Microsoft.Quantum.Simulation.IdentityGeneratorIndex}
  - {name: IdentityGeneratorSystem, uid: Microsoft.Quantum.Simulation.IdentityGeneratorSystem}
  - {name: IdentityTimeDependentGeneratorSystem, uid: Microsoft.Quantum.Simulation.IdentityTimeDependentGeneratorSystem}
  - {name: IdxToCoeff, uid: Microsoft.Quantum.Simulation.IdxToCoeff}
  - {name: IdxToUnitary, uid: Microsoft.Quantum.Simulation.IdxToUnitary}
  - {name: IntToPauli, uid: Microsoft.Quantum.Simulation.IntToPauli}
  - {name: InterpolateGeneratorSystems, uid: Microsoft.Quantum.Simulation.InterpolateGeneratorSystems}
  - {name: InterpolateGeneratorSystemsImpl, uid: Microsoft.Quantum.Simulation.InterpolateGeneratorSystemsImpl}
  - {name: InterpolatedEvolution, uid: Microsoft.Quantum.Simulation.InterpolatedEvolution}
  - {name: IntsToPaulis, uid: Microsoft.Quantum.Simulation.IntsToPaulis}
  - {name: MultiplyGeneratorIndex, uid: Microsoft.Quantum.Simulation.MultiplyGeneratorIndex}
  - {name: MultiplyGeneratorSystem, uid: Microsoft.Quantum.Simulation.MultiplyGeneratorSystem}
  - {name: PauliBlockEncoding, uid: Microsoft.Quantum.Simulation.PauliBlockEncoding}
  - {name: PauliCoefficientFromGenIdx, uid: Microsoft.Quantum.Simulation.PauliCoefficientFromGenIdx}
  - {name: PauliEvolutionFunction, uid: Microsoft.Quantum.Simulation.PauliEvolutionFunction}
  - {name: PauliEvolutionImpl, uid: Microsoft.Quantum.Simulation.PauliEvolutionImpl}
  - {name: PauliEvolutionSet, uid: Microsoft.Quantum.Simulation.PauliEvolutionSet}
  - {name: PauliLCUUnitary, uid: Microsoft.Quantum.Simulation.PauliLCUUnitary}
  - {name: PauliStringFromGenIdx, uid: Microsoft.Quantum.Simulation.PauliStringFromGenIdx}
  - {name: QuantumWalkByQubitization, uid: Microsoft.Quantum.Simulation.QuantumWalkByQubitization}
  - {name: SimulationAlgorithm, uid: Microsoft.Quantum.Simulation.SimulationAlgorithm}
  - {name: SumGeneratorSystems, uid: Microsoft.Quantum.Simulation.SumGeneratorSystems}
  - {name: TimeDependentBlockEncoding, uid: Microsoft.Quantum.Simulation.TimeDependentBlockEncoding}
  - {name: TimeDependentGeneratorSystem, uid: Microsoft.Quantum.Simulation.TimeDependentGeneratorSystem}
  - {name: TimeDependentSimulationAlgorithm, uid: Microsoft.Quantum.Simulation.TimeDependentSimulationAlgorithm}
  - {name: TimeDependentTrotterSimulationAlgorithm, uid: Microsoft.Quantum.Simulation.TimeDependentTrotterSimulationAlgorithm}
  - {name: TimeDependentTrotterSimulationAlgorithmImpl, uid: Microsoft.Quantum.Simulation.TimeDependentTrotterSimulationAlgorithmImpl}
  - {name: TrotterSimulationAlgorithm, uid: Microsoft.Quantum.Simulation.TrotterSimulationAlgorithm}
  - {name: TrotterSimulationAlgorithmImpl, uid: Microsoft.Quantum.Simulation.TrotterSimulationAlgorithmImpl}
  - {name: TrotterStep, uid: Microsoft.Quantum.Simulation.TrotterStep}
  - {name: TrotterStepImpl, uid: Microsoft.Quantum.Simulation.TrotterStepImpl}
  - {name: Unitary, uid: Microsoft.Quantum.Simulation.Unitary}
  - {name: _AddGeneratorSystems, uid: Microsoft.Quantum.Simulation._AddGeneratorSystems}
  - {name: _IdentityTimeDependentGeneratorSystem, uid: Microsoft.Quantum.Simulation._IdentityTimeDependentGeneratorSystem}
  - {name: _MultiplyGeneratorSystem, uid: Microsoft.Quantum.Simulation._MultiplyGeneratorSystem}
  - {name: _PauliBlockEncoding, uid: Microsoft.Quantum.Simulation._PauliBlockEncoding}
  name: Microsoft.Quantum.Simulation
  uid: Microsoft.Quantum.Simulation
- items:
  - {name: ApplyConditionally, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionally}
  - {name: ApplyConditionallyA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyA}
  - {name: ApplyConditionallyC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyC}
  - {name: ApplyConditionallyCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyCA}
  - {name: ApplyConditionallyIntrinsic, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsic}
  - {name: ApplyConditionallyIntrinsicA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicA}
  - {name: ApplyConditionallyIntrinsicC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicC}
  - {name: ApplyConditionallyIntrinsicCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyConditionallyIntrinsicCA}
  - {name: ApplyIfElseIntrinsic, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsic}
  - {name: ApplyIfElseIntrinsicA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicA}
  - {name: ApplyIfElseIntrinsicC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicC}
  - {name: ApplyIfElseIntrinsicCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseIntrinsicCA}
  - {name: ApplyIfElseR, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseR}
  - {name: ApplyIfElseRA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRA}
  - {name: ApplyIfElseRC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRC}
  - {name: ApplyIfElseRCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfElseRCA}
  - {name: ApplyIfOne, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOne}
  - {name: ApplyIfOneA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneA}
  - {name: ApplyIfOneC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneC}
  - {name: ApplyIfOneCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfOneCA}
  - {name: ApplyIfZero, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZero}
  - {name: ApplyIfZeroA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroA}
  - {name: ApplyIfZeroC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroC}
  - {name: ApplyIfZeroCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.ApplyIfZeroCA}
  - {name: Delay, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.Delay}
  - {name: DelayA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayA}
  - {name: DelayC, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayC}
  - {name: DelayCA, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.DelayCA}
  - {name: NoOp, uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions.NoOp}
  name: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions
  uid: Microsoft.Quantum.Simulation.QuantumProcessor.Extensions
- items:
  - {name: ApplyPermutationUsingDecomposition, uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingDecomposition}
  - {name: ApplyPermutationUsingDecompositionWithVariableOrder, uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingDecompositionWithVariableOrder}
  - {name: ApplyPermutationUsingTransformation, uid: Microsoft.Quantum.Synthesis.ApplyPermutationUsingTransformation}
  - {name: ApplyTransposition, uid: Microsoft.Quantum.Synthesis.ApplyTransposition}
  - {name: ApplyXControlledOnTruthTable, uid: Microsoft.Quantum.Synthesis.ApplyXControlledOnTruthTable}
  - {name: ApplyXControlledOnTruthTableWithCleanTarget, uid: Microsoft.Quantum.Synthesis.ApplyXControlledOnTruthTableWithCleanTarget}
  - {name: DecomposedOn, uid: Microsoft.Quantum.Synthesis.DecomposedOn}
  - {name: DecompositionState, uid: Microsoft.Quantum.Synthesis.DecompositionState}
  - {name: Encoded, uid: Microsoft.Quantum.Synthesis.Encoded}
  - {name: Extended, uid: Microsoft.Quantum.Synthesis.Extended}
  - {name: FastHadamardTransformed, uid: Microsoft.Quantum.Synthesis.FastHadamardTransformed}
  - {name: GateMask, uid: Microsoft.Quantum.Synthesis.GateMask}
  - {name: GateMasksForAssignment, uid: Microsoft.Quantum.Synthesis.GateMasksForAssignment}
  - {name: IntegerBits, uid: Microsoft.Quantum.Synthesis.IntegerBits}
  - {name: MCMTMask, uid: Microsoft.Quantum.Synthesis.MCMTMask}
  - {name: MaskToQubitsPair, uid: Microsoft.Quantum.Synthesis.MaskToQubitsPair}
  - {name: RMEncoding, uid: Microsoft.Quantum.Synthesis.RMEncoding}
  - {name: SizeAdjustedTruthTable, uid: Microsoft.Quantum.Synthesis.SizeAdjustedTruthTable}
  - {name: TBSMain, uid: Microsoft.Quantum.Synthesis.TBSMain}
  - {name: TBSStep, uid: Microsoft.Quantum.Synthesis.TBSStep}
  - {name: TruthTablesFromPermutation, uid: Microsoft.Quantum.Synthesis.TruthTablesFromPermutation}
  - {name: TruthTablesFromPermutationFolder, uid: Microsoft.Quantum.Synthesis.TruthTablesFromPermutationFolder}
  - {name: UpdatedOutputPattern, uid: Microsoft.Quantum.Synthesis.UpdatedOutputPattern}
  - {name: UpdatedPermutation, uid: Microsoft.Quantum.Synthesis.UpdatedPermutation}
  - {name: WithZeroInsertedAt, uid: Microsoft.Quantum.Synthesis.WithZeroInsertedAt}
  name: Microsoft.Quantum.Synthesis
  uid: Microsoft.Quantum.Synthesis
- items:
  - {name: RequiresCapability, uid: Microsoft.Quantum.Targeting.RequiresCapability}
  name: Microsoft.Quantum.Targeting
  uid: Microsoft.Quantum.Targeting
